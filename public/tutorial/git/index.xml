<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial Belajar Git untuk Pemula on Octocat Code</title>
    <link>https://gitkodachi.github.io/tutorial/git/</link>
    <description>Recent content in Tutorial Belajar Git untuk Pemula on Octocat Code</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gitkodachi.github.io/tutorial/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apa itu Git dan Kenapa Penting bagi Programmer?</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/</guid>
      <description>&lt;p&gt;Git adalah salah satu tool yang sering digunakan dalam proyek pengembangan software.&lt;/p&gt;&#xA;&lt;p&gt;Git bahkan menjadi tool yang wajib dipahami oleh programmer, karena banyak digunakan di mana-mana.&lt;/p&gt;&#xA;&lt;p&gt;Pada kesempatan ini kita akan belajar Git dari dasar.&lt;/p&gt;&#xA;&lt;p&gt;Artikel ini hanya akan membahas pengenalan Git saja. Untuk mempelajari Git lebih lanjut, saya sudah menyediakan link di bagian akhir.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mengenal-git&#34;&gt;Mengenal Git&lt;/h2&gt;&#xA;&lt;p&gt;Git adalah salah satu sistem pengontrol versi (Version Control System) pada proyek perangkat lunak yang diciptakan oleh Linus Torvalds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #1: Cara Install Git dan Konfigurasi Awal Yang Harus dilakukan</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-install/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-install/</guid>
      <description>&lt;p&gt;Kita sudah mengenal Git pada &lt;a href=&#34;https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/&#34;&gt;tulisan sebelumnya&lt;/a&gt;. Selanjutnya Kita akan melakukan instalasi dan persiapan untuk mulai belajar Git.&lt;/p&gt;&#xA;&lt;p&gt;Tulisan ini terbagi menjadi tiga bagian:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Cara Instalasi Git di Linux.&lt;/li&gt;&#xA;&lt;li&gt;Cara Instalasi Git di Windows.&lt;/li&gt;&#xA;&lt;li&gt;Konfigurasi Awal yang Harus dilkaukan Setelah Menginstal Git.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Mari kita mulai&amp;hellip;&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-cara-install-git-di-linux&#34;&gt;&lt;strong&gt;1. Cara Install Git di Linux&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;atau&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-install git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pada Fedora:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yum install git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Setelah itu , coba periksa versi yang terinstal dengan perintah:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #02: Membuat Repositori Baru dalam Proyek</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-init/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-init/</guid>
      <description>&lt;p&gt;Repositori &lt;em&gt;(repository)&lt;/em&gt; dalam bahasa indonesia artinya gudang. Repositori merupakan istilah yang digunakan untuk direktori proyek yang menggunakan Git.&lt;/p&gt;&#xA;&lt;p&gt;Jika kita memiliki sebuah direktori dengan nama &lt;strong&gt;proyek-01&lt;/strong&gt; dan di dalamnya sudah menggunakan git, maka kita sudah punya repositori bernama &lt;strong&gt;proyek-01&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;membuat-repository&#34;&gt;Membuat Repository&lt;/h3&gt;&#xA;&lt;p&gt;Pembuatan repositori dapat dilakukan dengan perintah &lt;strong&gt;git init nama-dir&lt;/strong&gt;. Contoh:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init proyek-01&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perintah tersebut akan membuat direktori bernama &lt;strong&gt;proyek-01&lt;/strong&gt;. Kalau direktorinya sudah ada, maka Git akan melakukan inisialisasi di dalam direktori tersebut.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #03: Simpan Perubahan Revisi dengan Git Commit</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-commit/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-commit/</guid>
      <description>&lt;p&gt;Pada &lt;a href=&#34;../git-init&#34;&gt;tutorial Git yang kedua&lt;/a&gt;, kita sudah membuat repositori kosong. Belum ada apa-apa di sana.&lt;/p&gt;&#xA;&lt;p&gt;Sekarang coba tambahkan sebuah file baru.&lt;/p&gt;&#xA;&lt;p&gt;Sebagai contoh, saya akan menambahkan tiga file HTML kosong.&lt;/p&gt;&#xA;&#xD;&#xA;&lt;figure class=&#34;my-4 text-center&#34;&gt;&#xD;&#xA;  &lt;img &#xD;&#xA;    src=&#34;https://gitkodachi.github.io/images/content/git/project-01_repositori-git-petanikode.png&#34; &#xD;&#xA;    alt=&#34;Deskripsi gambar&#34; &#xD;&#xA;    class=&#34;cursor-zoom-in max-w-full rounded&#34;&#xD;&#xA;    onclick=&#34;zoom(this)&#34;&#xD;&#xA;  &gt;&#xD;&#xA;  &#xD;&#xA;  &lt;figcaption class=&#34;text-sm text-gray-500 mt-2&#34;&gt;&#xD;&#xA;    &lt;em&gt;Keterangan gambar opsional&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;function zoom(img) {&#xD;&#xA;  img.classList.toggle(&#39;zoomed&#39;);&#xD;&#xA;  document.body.style.overflow = img.classList.contains(&#39;zoomed&#39;) ? &#39;hidden&#39; : &#39;&#39;;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  if (img.classList.contains(&#39;zoomed&#39;)) {&#xD;&#xA;    const handleKey = (e) =&gt; e.key === &#39;Escape&#39; &amp;&amp; zoom(img);&#xD;&#xA;    document.addEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;    img.onzoomout = () =&gt; document.removeEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;  } else if (img.onzoomout) {&#xD;&#xA;    img.onzoomout();&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;img.zoomed {&#xD;&#xA;  position: fixed;&#xD;&#xA;  top: 50%;&#xD;&#xA;  left: 50%;&#xD;&#xA;  transform: translate(-50%, -50%);&#xD;&#xA;  max-height: 90vh;&#xD;&#xA;  z-index: 100;&#xD;&#xA;  cursor: zoom-out;&#xD;&#xA;  box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Setelah ditambahkan, coba ketik perintah git status untuk melihat status repositorinya.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #04: Melihat Catatan Log Revisi</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-log/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-log/</guid>
      <description>&lt;p&gt;Pada &lt;a href=&#34;../git-commit&#34;&gt;tutorial sebelumnya&lt;/a&gt;, kita sudah membuat dua revisi pada repositori project-01. Sekarang bagaimana caranya kita melihat catatan log dari revisi-reivisi tersebut?&lt;/p&gt;&#xA;&lt;p&gt;Git sudah menyediakan perintah git log untuk melihat catatan log perubahan pada repositori. Contoh penggunaannya:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Maka kita akan melihat log perubahan apa saja yang sudah dilakukan dalam repositori.&lt;/p&gt;&#xA;&#xD;&#xA;&lt;figure class=&#34;my-4 text-center&#34;&gt;&#xD;&#xA;  &lt;img &#xD;&#xA;    src=&#34;https://gitkodachi.github.io/images/content/git/log-revisi-yang-sudah-dibuat.png&#34; &#xD;&#xA;    alt=&#34;Deskripsi gambar&#34; &#xD;&#xA;    class=&#34;cursor-zoom-in max-w-full rounded&#34;&#xD;&#xA;    onclick=&#34;zoom(this)&#34;&#xD;&#xA;  &gt;&#xD;&#xA;  &#xD;&#xA;  &lt;figcaption class=&#34;text-sm text-gray-500 mt-2&#34;&gt;&#xD;&#xA;    &lt;em&gt;Pada gambar di atas, terdapat dua revisi perubahan yang telah dilakuan.&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;function zoom(img) {&#xD;&#xA;  img.classList.toggle(&#39;zoomed&#39;);&#xD;&#xA;  document.body.style.overflow = img.classList.contains(&#39;zoomed&#39;) ? &#39;hidden&#39; : &#39;&#39;;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  if (img.classList.contains(&#39;zoomed&#39;)) {&#xD;&#xA;    const handleKey = (e) =&gt; e.key === &#39;Escape&#39; &amp;&amp; zoom(img);&#xD;&#xA;    document.addEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;    img.onzoomout = () =&gt; document.removeEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;  } else if (img.onzoomout) {&#xD;&#xA;    img.onzoomout();&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;img.zoomed {&#xD;&#xA;  position: fixed;&#xD;&#xA;  top: 50%;&#xD;&#xA;  left: 50%;&#xD;&#xA;  transform: translate(-50%, -50%);&#xD;&#xA;  max-height: 90vh;&#xD;&#xA;  z-index: 100;&#xD;&#xA;  cursor: zoom-out;&#xD;&#xA;  box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xA;&lt;h3 id=&#34;log-yang-lebih-pendek&#34;&gt;Log yang Lebih Pendek&lt;/h3&gt;&#xA;&lt;p&gt;Untuk menampilkan log yang lebih pendek, kita bisa menambahkan argumen &lt;strong&gt;&amp;ndash;oneline&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #05: Melihat Perbandingan Revisi dengan Git Diff</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-diff/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-diff/</guid>
      <description>&lt;p&gt;Pada tutorial sebelumnya, kita sudah belajar cara melihat log revisi di repositori. Sekarang kita kan pelajari perintah &lt;strong&gt;git diff&lt;/strong&gt;, fungsinya untuk melihat perbedaan perubahan di revisi.&lt;/p&gt;&#xA;&lt;h3 id=&#34;melihat-perbandingan-perubahan-yang-dilakukan-pada-revisi&#34;&gt;Melihat Perbandingan Perubahan yang Dilakukan pada Revisi&lt;/h3&gt;&#xA;&lt;p&gt;Gunakan perintah berikut ini untuk melihat perubahan yang dilakukan pada revisi tertentu.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git diff cf08ca0837cf26f1c595be36bb3a6b815e311be1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;cf08ca0837cf26f1c595be36bb3a6b815e311be1&lt;/em&gt; adalah nomer revisi yang ingin dilihat.&lt;/p&gt;&#xA;&#xD;&#xA;&lt;figure class=&#34;my-4 text-center&#34;&gt;&#xD;&#xA;  &lt;img &#xD;&#xA;    src=&#34;https://gitkodachi.github.io/images/content/git/git-diff-pada-nomer-revisi.png&#34; &#xD;&#xA;    alt=&#34;Deskripsi gambar&#34; &#xD;&#xA;    class=&#34;cursor-zoom-in max-w-full rounded&#34;&#xD;&#xA;    onclick=&#34;zoom(this)&#34;&#xD;&#xA;  &gt;&#xD;&#xA;  &#xD;&#xA;  &lt;figcaption class=&#34;text-sm text-gray-500 mt-2&#34;&gt;&#xD;&#xA;    &lt;em&gt;Keterangan gambar opsional&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;function zoom(img) {&#xD;&#xA;  img.classList.toggle(&#39;zoomed&#39;);&#xD;&#xA;  document.body.style.overflow = img.classList.contains(&#39;zoomed&#39;) ? &#39;hidden&#39; : &#39;&#39;;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  if (img.classList.contains(&#39;zoomed&#39;)) {&#xD;&#xA;    const handleKey = (e) =&gt; e.key === &#39;Escape&#39; &amp;&amp; zoom(img);&#xD;&#xA;    document.addEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;    img.onzoomout = () =&gt; document.removeEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;  } else if (img.onzoomout) {&#xD;&#xA;    img.onzoomout();&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;img.zoomed {&#xD;&#xA;  position: fixed;&#xD;&#xA;  top: 50%;&#xD;&#xA;  left: 50%;&#xD;&#xA;  transform: translate(-50%, -50%);&#xD;&#xA;  max-height: 90vh;&#xD;&#xA;  z-index: 100;&#xD;&#xA;  cursor: zoom-out;&#xD;&#xA;  box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Lihatlah hasil di atas, simbol plus &lt;strong&gt;(+)&lt;/strong&gt; artinya kode yang ditambahkan. Sedangkan kalau ada kode yang dihapus simbolnya akan menggunakan minus &lt;strong&gt;(-)&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #06: Perintah Untuk Membatalkan Revisi</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-revert/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-revert/</guid>
      <description>&lt;p&gt;Pada &lt;a href=&#34;../git-diff&#34;&gt;tutorial git 05&lt;/a&gt;, kita sudah belajar cara melihat perbedaan di setiap revisi. Sekarang kita akan belajar, cara membatalkan sebuah revisi.&lt;/p&gt;&#xA;&lt;p&gt;Terkadang pada perubahan yang kita lakukan terjadi kesalahan dan kita ingin mengembalikannya seperti keadaan sebelumnya. Maka kita perlu menyuruh git untuk mengembalikannya. Ada beberapa perintah yang digunakan di antaranya: &lt;strong&gt;git checkout, git reset,&lt;/strong&gt; dan &lt;strong&gt;git revert&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;membatalkan-perubahan&#34;&gt;Membatalkan Perubahan&lt;/h3&gt;&#xA;&lt;p&gt;Jika revisi kita belum staged ataupun mengetahui, kita bisa mengembalikannya menggunakan perintah &lt;strong&gt;git checkout nama_file.html&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #07: Menggunakan Percabangan untuk mencegah Konflik</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-branch/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-branch/</guid>
      <description>&lt;p&gt;Bayangkan anda sedang bekerja dengan tim pada suatu repositori Git. Repositori ini dikerjakan secara bersama-sama.&lt;/p&gt;&#xA;&lt;p&gt;Kadang… akan terjadi konflik, karena kode yang kita tulis berbeda dengan yang lain.&lt;/p&gt;&#xA;&lt;p&gt;Misalnya, Si A menulis kode untuk fitur X dengan algoritma yang ia ketahui. Sedangkan si B menulis dengan algoritma yang berbeda.&lt;/p&gt;&#xA;&lt;p&gt;Lalu mereka melakukan commit, dan kode sumber jadi berantakan. Anggota tim yang lain menjadi pusing.&lt;/p&gt;&#xA;&#xD;&#xA;  &lt;figure class=&#34;my-4 text-center&#34;&gt;&#xD;&#xA;    &lt;img &#xD;&#xA;      src=&#34;https://gitkodachi.github.io/images/content/git/konflik-branch-repositori-git.png&#34; &#xD;&#xA;      alt=&#34;Deskripsi gambar&#34; &#xD;&#xA;      class=&#34;cursor-zoom-in max-w-full rounded&#34;&#xD;&#xA;      onclick=&#34;zoom(this)&#34;&#xD;&#xA;    &gt;&#xD;&#xA;    &#xD;&#xA;    &lt;figcaption class=&#34;text-sm text-gray-500 mt-2&#34;&gt;&#xD;&#xA;      &lt;em&gt;Gambar contoh dengan zoom&lt;/em&gt;&#xD;&#xA;    &lt;/figcaption&gt;&#xD;&#xA;    &#xD;&#xA;  &lt;/figure&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;script&gt;&#xD;&#xA;  function zoom(img) {&#xD;&#xA;    img.classList.toggle(&#39;zoomed&#39;);&#xD;&#xA;    document.body.style.overflow = img.classList.contains(&#39;zoomed&#39;) ? &#39;hidden&#39; : &#39;&#39;;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    if (img.classList.contains(&#39;zoomed&#39;)) {&#xD;&#xA;      const handleKey = (e) =&gt; e.key === &#39;Escape&#39; &amp;&amp; zoom(img);&#xD;&#xA;      document.addEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;      img.onzoomout = () =&gt; document.removeEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;    } else if (img.onzoomout) {&#xD;&#xA;      img.onzoomout();&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &lt;/script&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;style&gt;&#xD;&#xA;  img.zoomed {&#xD;&#xA;    position: fixed;&#xD;&#xA;    top: 50%;&#xD;&#xA;    left: 50%;&#xD;&#xA;    transform: translate(-50%, -50%);&#xD;&#xA;    max-height: 90vh;&#xD;&#xA;    z-index: 100;&#xD;&#xA;    cursor: zoom-out;&#xD;&#xA;    box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);&#xD;&#xA;  }&#xD;&#xA;  &lt;/style&gt;&#xA;&lt;p&gt;Agar tidak terjadi hal yang seperti ini, kita harus membuat cabang (branch) tersendiri.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #08: Perbedaan Git checkout, Git Reset, dan Git Revert</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-checkout-reset-revert/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-checkout-reset-revert/</guid>
      <description>&lt;p&gt;Pada &lt;a href=&#34;../git-revert&#34;&gt;tutorial ke-6&lt;/a&gt;, kita sudah membahas cara membatalkan revisi menggunakan perintah git checkout, git reset, dan git revert.&lt;/p&gt;&#xA;&lt;p&gt;Sekilas, tiga perintah tersebut melakukan hal yang sama. Akan tetapi ada perbedaannya.&lt;/p&gt;&#xA;&lt;p&gt;Apa itu?&lt;/p&gt;&#xA;&lt;p&gt;Mari kita bahas…&lt;/p&gt;&#xA;&lt;h3 id=&#34;git-checkout&#34;&gt;Git Checkout&lt;/h3&gt;&#xA;&lt;p&gt;Perintah &lt;strong&gt;git checkout&lt;/strong&gt; seperti mesin waktu, kita bisa kembalikan kondisi file proyek seperti waktu yang dituju.&lt;/p&gt;&#xA;&lt;p&gt;Misalnya:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout 06f735af7724558164c87f6b1ce3ca7778eb1c1b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Maka semua file akan dikembalikan seperti keadaan pada nomer &lt;em&gt;commit&lt;/em&gt; tersebut.&lt;/p&gt;&#xA;&#xD;&#xA;&lt;figure class=&#34;my-4 text-center&#34;&gt;&#xD;&#xA;  &lt;img &#xD;&#xA;    src=&#34;https://gitkodachi.github.io/images/content/git/git-checkout-masa-lalu.png&#34; &#xD;&#xA;    alt=&#34;Deskripsi gambar&#34; &#xD;&#xA;    class=&#34;cursor-zoom-in max-w-full rounded&#34;&#xD;&#xA;    onclick=&#34;zoom(this)&#34;&#xD;&#xA;  &gt;&#xD;&#xA;  &#xD;&#xA;  &lt;figcaption class=&#34;text-sm text-gray-500 mt-2&#34;&gt;&#xD;&#xA;    &lt;em&gt;Keterangan gambar opsional&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;  &#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;function zoom(img) {&#xD;&#xA;  img.classList.toggle(&#39;zoomed&#39;);&#xD;&#xA;  document.body.style.overflow = img.classList.contains(&#39;zoomed&#39;) ? &#39;hidden&#39; : &#39;&#39;;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  if (img.classList.contains(&#39;zoomed&#39;)) {&#xD;&#xA;    const handleKey = (e) =&gt; e.key === &#39;Escape&#39; &amp;&amp; zoom(img);&#xD;&#xA;    document.addEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;    img.onzoomout = () =&gt; document.removeEventListener(&#39;keydown&#39;, handleKey);&#xD;&#xA;  } else if (img.onzoomout) {&#xD;&#xA;    img.onzoomout();&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;img.zoomed {&#xD;&#xA;  position: fixed;&#xD;&#xA;  top: 50%;&#xD;&#xA;  left: 50%;&#xD;&#xA;  transform: translate(-50%, -50%);&#xD;&#xA;  max-height: 90vh;&#xD;&#xA;  z-index: 100;&#xD;&#xA;  cursor: zoom-out;&#xD;&#xA;  box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Akan tetapi, ini bersifat temporer (sementara). Pengembalian ini tidak disimpan dalam database Git.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Belajar Git #09: Berkerja Dengan Remote Repository</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-remote/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-remote/</guid>
      <description>&lt;div class=&#34;mermaid&#34; style=&#34;background:transparent&#34;&gt;&#xD;&#xA;  &#xD;&#xA;flowchart TD&#xD;&#xA;    A[Local] --&gt;|git push| B(Remote)&#xD;&#xA;    B --&gt; C{GitHub}&#xD;&#xA;    C --&gt;|PR| D[Merge]&#xD;&#xA;    &#xD;&#xA;    style A fill:#f0abfc,stroke:#333&#xD;&#xA;    style B fill:#a5b4fc,stroke:#333&#xD;&#xA;&#xD;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Belajar Git #10: Menggunakan Git Pull Git Fetch</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-full-fetch/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-full-fetch/</guid>
      <description></description>
    </item>
    <item>
      <title>Belajar Git #11: Cara Berkontribusi di Proyek Open Source dengan Git</title>
      <link>https://gitkodachi.github.io/tutorial/git/github-workflow/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/github-workflow/</guid>
      <description></description>
    </item>
    <item>
      <title>Belajar Git #12: Cara Menggunakan Git Pada Visual Studio Code</title>
      <link>https://gitkodachi.github.io/tutorial/git/git-vscode/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://gitkodachi.github.io/tutorial/git/git-vscode/</guid>
      <description></description>
    </item>
  </channel>
</rss>
