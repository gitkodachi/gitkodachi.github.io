<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial Belajar Git untuk Pemula on Octocat Code</title><link>https://gitkodachi.github.io/tutorial/git/</link><description>Recent content in Tutorial Belajar Git untuk Pemula on Octocat Code</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 27 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://gitkodachi.github.io/tutorial/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Apa itu Git dan Kenapa Penting bagi Programmer?</title><link>https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/</guid><description>&lt;p>Git adalah salah satu tool yang sering digunakan dalam proyek pengembangan software.&lt;/p>
&lt;p>Git bahkan menjadi tool yang wajib dipahami oleh programmer, karena banyak digunakan di mana-mana.&lt;/p>
&lt;p>Pada kesempatan ini kita akan belajar Git dari dasar.&lt;/p>
&lt;p>Artikel ini hanya akan membahas pengenalan Git saja. Untuk mempelajari Git lebih lanjut, saya sudah menyediakan link di bagian akhir.&lt;/p>
&lt;h2 id="mengenal-git">Mengenal Git&lt;/h2>
&lt;p>Git adalah salah satu sistem pengontrol versi (Version Control System) pada proyek perangkat lunak yang diciptakan oleh Linus Torvalds.&lt;/p></description></item><item><title>Belajar Git #1: Cara Install Git dan Konfigurasi Awal Yang Harus dilakukan</title><link>https://gitkodachi.github.io/tutorial/git/git-install/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-install/</guid><description>&lt;p>Kita sudah mengenal Git pada &lt;a href="https://gitkodachi.github.io/tutorial/git/git-untuk-pemula/">tulisan sebelumnya&lt;/a>. Selanjutnya Kita akan melakukan instalasi dan persiapan untuk mulai belajar Git.&lt;/p>
&lt;p>Tulisan ini terbagi menjadi tiga bagian:&lt;/p>
&lt;ol>
&lt;li>Cara Instalasi Git di Linux.&lt;/li>
&lt;li>Cara Instalasi Git di Windows.&lt;/li>
&lt;li>Konfigurasi Awal yang Harus dilkaukan Setelah Menginstal Git.&lt;/li>
&lt;/ol>
&lt;p>Mari kita mulai&amp;hellip;&lt;/p>
&lt;h1 id="1-cara-install-git-di-linux">&lt;strong>1. Cara Install Git di Linux&lt;/strong>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>atau&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pada Fedora:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Setelah itu , coba periksa versi yang terinstal dengan perintah:&lt;/p></description></item><item><title>Belajar Git #02: Membuat Repositori Baru dalam Proyek</title><link>https://gitkodachi.github.io/tutorial/git/git-init/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-init/</guid><description>&lt;p>Repositori &lt;em>(repository)&lt;/em> dalam bahasa indonesia artinya gudang. Repositori merupakan istilah yang digunakan untuk direktori proyek yang menggunakan Git.&lt;/p>
&lt;p>Jika kita memiliki sebuah direktori dengan nama &lt;strong>proyek-01&lt;/strong> dan di dalamnya sudah menggunakan git, maka kita sudah punya repositori bernama &lt;strong>proyek-01&lt;/strong>.&lt;/p>
&lt;h3 id="membuat-repository">Membuat Repository&lt;/h3>
&lt;p>Pembuatan repositori dapat dilakukan dengan perintah &lt;strong>git init nama-dir&lt;/strong>. Contoh:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git init proyek-01
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Perintah tersebut akan membuat direktori bernama &lt;strong>proyek-01&lt;/strong>. Kalau direktorinya sudah ada, maka Git akan melakukan inisialisasi di dalam direktori tersebut.&lt;/p></description></item><item><title>Belajar Git #03: Simpan Perubahan Revisi dengan Git Commit</title><link>https://gitkodachi.github.io/tutorial/git/git-commit/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-commit/</guid><description>&lt;p>Pada &lt;a href="../git-init">tutorial Git yang kedua&lt;/a>, kita sudah membuat repositori kosong. Belum ada apa-apa di sana.&lt;/p>
&lt;p>Sekarang coba tambahkan sebuah file baru.&lt;/p>
&lt;p>Sebagai contoh, saya akan menambahkan tiga file HTML kosong.&lt;/p>

&lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/project-01_repositori-git-petanikode.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Keterangan gambar opsional&lt;/em>
 &lt;/figcaption>
 
&lt;/figure>

&lt;script>
function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
}
&lt;/script>

&lt;style>
img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
}
&lt;/style>
&lt;p>Setelah ditambahkan, coba ketik perintah git status untuk melihat status repositorinya.&lt;/p></description></item><item><title>Belajar Git #04: Melihat Catatan Log Revisi</title><link>https://gitkodachi.github.io/tutorial/git/git-log/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-log/</guid><description>&lt;p>Pada &lt;a href="../git-commit">tutorial sebelumnya&lt;/a>, kita sudah membuat dua revisi pada repositori project-01. Sekarang bagaimana caranya kita melihat catatan log dari revisi-reivisi tersebut?&lt;/p>
&lt;p>Git sudah menyediakan perintah git log untuk melihat catatan log perubahan pada repositori. Contoh penggunaannya:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Maka kita akan melihat log perubahan apa saja yang sudah dilakukan dalam repositori.&lt;/p>

&lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/log-revisi-yang-sudah-dibuat.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Pada gambar di atas, terdapat dua revisi perubahan yang telah dilakuan.&lt;/em>
 &lt;/figcaption>
 
&lt;/figure>

&lt;script>
function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
}
&lt;/script>

&lt;style>
img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
}
&lt;/style>
&lt;h3 id="log-yang-lebih-pendek">Log yang Lebih Pendek&lt;/h3>
&lt;p>Untuk menampilkan log yang lebih pendek, kita bisa menambahkan argumen &lt;strong>&amp;ndash;oneline&lt;/strong>.&lt;/p></description></item><item><title>Belajar Git #05: Melihat Perbandingan Revisi dengan Git Diff</title><link>https://gitkodachi.github.io/tutorial/git/git-diff/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-diff/</guid><description>&lt;p>Pada tutorial sebelumnya, kita sudah belajar cara melihat log revisi di repositori. Sekarang kita kan pelajari perintah &lt;strong>git diff&lt;/strong>, fungsinya untuk melihat perbedaan perubahan di revisi.&lt;/p>
&lt;h3 id="melihat-perbandingan-perubahan-yang-dilakukan-pada-revisi">Melihat Perbandingan Perubahan yang Dilakukan pada Revisi&lt;/h3>
&lt;p>Gunakan perintah berikut ini untuk melihat perubahan yang dilakukan pada revisi tertentu.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git diff cf08ca0837cf26f1c595be36bb3a6b815e311be1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>cf08ca0837cf26f1c595be36bb3a6b815e311be1&lt;/em> adalah nomer revisi yang ingin dilihat.&lt;/p>

&lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/git-diff-pada-nomer-revisi.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Keterangan gambar opsional&lt;/em>
 &lt;/figcaption>
 
&lt;/figure>

&lt;script>
function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
}
&lt;/script>

&lt;style>
img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
}
&lt;/style>
&lt;p>Lihatlah hasil di atas, simbol plus &lt;strong>(+)&lt;/strong> artinya kode yang ditambahkan. Sedangkan kalau ada kode yang dihapus simbolnya akan menggunakan minus &lt;strong>(-)&lt;/strong>.&lt;/p></description></item><item><title>Belajar Git #06: Perintah Untuk Membatalkan Revisi</title><link>https://gitkodachi.github.io/tutorial/git/git-revert/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-revert/</guid><description>&lt;p>Pada &lt;a href="../git-diff">tutorial git 05&lt;/a>, kita sudah belajar cara melihat perbedaan di setiap revisi. Sekarang kita akan belajar, cara membatalkan sebuah revisi.&lt;/p>
&lt;p>Terkadang pada perubahan yang kita lakukan terjadi kesalahan dan kita ingin mengembalikannya seperti keadaan sebelumnya. Maka kita perlu menyuruh git untuk mengembalikannya. Ada beberapa perintah yang digunakan di antaranya: &lt;strong>git checkout, git reset,&lt;/strong> dan &lt;strong>git revert&lt;/strong>.&lt;/p>
&lt;h3 id="membatalkan-perubahan">Membatalkan Perubahan&lt;/h3>
&lt;p>Jika revisi kita belum staged ataupun mengetahui, kita bisa mengembalikannya menggunakan perintah &lt;strong>git checkout nama_file.html&lt;/strong>.&lt;/p></description></item><item><title>Belajar Git #07: Menggunakan Percabangan untuk mencegah Konflik</title><link>https://gitkodachi.github.io/tutorial/git/git-branch/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-branch/</guid><description>&lt;p>Bayangkan anda sedang bekerja dengan tim pada suatu repositori Git. Repositori ini dikerjakan secara bersama-sama.&lt;/p>
&lt;p>Kadang… akan terjadi konflik, karena kode yang kita tulis berbeda dengan yang lain.&lt;/p>
&lt;p>Misalnya, Si A menulis kode untuk fitur X dengan algoritma yang ia ketahui. Sedangkan si B menulis dengan algoritma yang berbeda.&lt;/p>
&lt;p>Lalu mereka melakukan commit, dan kode sumber jadi berantakan. Anggota tim yang lain menjadi pusing.&lt;/p>

 &lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/konflik-branch-repositori-git.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Gambar contoh dengan zoom&lt;/em>
 &lt;/figcaption>
 
 &lt;/figure>
 
 &lt;script>
 function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
 }
 &lt;/script>
 
 &lt;style>
 img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
 }
 &lt;/style>
&lt;p>Agar tidak terjadi hal yang seperti ini, kita harus membuat cabang (branch) tersendiri.&lt;/p></description></item><item><title>Belajar Git #08: Perbedaan Git checkout, Git Reset, dan Git Revert</title><link>https://gitkodachi.github.io/tutorial/git/git-checkout-reset-revert/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-checkout-reset-revert/</guid><description>&lt;p>Pada &lt;a href="../git-revert">tutorial ke-6&lt;/a>, kita sudah membahas cara membatalkan revisi menggunakan perintah git checkout, git reset, dan git revert.&lt;/p>
&lt;p>Sekilas, tiga perintah tersebut melakukan hal yang sama. Akan tetapi ada perbedaannya.&lt;/p>
&lt;p>Apa itu?&lt;/p>
&lt;p>Mari kita bahas…&lt;/p>
&lt;h3 id="git-checkout">Git Checkout&lt;/h3>
&lt;p>Perintah &lt;strong>git checkout&lt;/strong> seperti mesin waktu, kita bisa kembalikan kondisi file proyek seperti waktu yang dituju.&lt;/p>
&lt;p>Misalnya:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout 06f735af7724558164c87f6b1ce3ca7778eb1c1b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Maka semua file akan dikembalikan seperti keadaan pada nomer &lt;em>commit&lt;/em> tersebut.&lt;/p>

&lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/git-checkout-masa-lalu.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Keterangan gambar opsional&lt;/em>
 &lt;/figcaption>
 
&lt;/figure>

&lt;script>
function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
}
&lt;/script>

&lt;style>
img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
}
&lt;/style>
&lt;p>Akan tetapi, ini bersifat temporer (sementara). Pengembalian ini tidak disimpan dalam database Git.&lt;/p></description></item><item><title>Belajar Git #09: Berkerja Dengan Remote Repository</title><link>https://gitkodachi.github.io/tutorial/git/git-remote/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-remote/</guid><description>&lt;p>Pada proyek pengembangan software yang melibatkan banyak orang (tim), kita tidak hanya akan menyimpan sendiri repository proyeknya.&lt;/p>
&lt;p>Semua tim yang terlibat dalam pengkodean (&lt;em>coding&lt;/em>) akan menyimpan repository lokal di komputernya masing-masing.&lt;/p>
&lt;p>Setelah itu, akan dilakukan penggabungan ke repository inti atau remote.&lt;/p>
&lt;p>Biasanya akan ada repository pusat atau untuk menyimpan source code yang sudah digabungkan (&lt;em>merge&lt;/em>) dari beberapa orang.&lt;/p>

 &lt;figure class="my-4 text-center">
 &lt;img 
 src="https://gitkodachi.github.io/images/content/git/sistem-git.png" 
 alt="Deskripsi gambar" 
 class="cursor-zoom-in max-w-full rounded"
 onclick="zoom(this)"
 >
 
 &lt;figcaption class="text-sm text-gray-500 mt-2">
 &lt;em>Gambar contoh dengan zoom&lt;/em>
 &lt;/figcaption>
 
 &lt;/figure>
 
 &lt;script>
 function zoom(img) {
 img.classList.toggle('zoomed');
 document.body.style.overflow = img.classList.contains('zoomed') ? 'hidden' : '';
 
 
 if (img.classList.contains('zoomed')) {
 const handleKey = (e) => e.key === 'Escape' &amp;&amp; zoom(img);
 document.addEventListener('keydown', handleKey);
 img.onzoomout = () => document.removeEventListener('keydown', handleKey);
 } else if (img.onzoomout) {
 img.onzoomout();
 }
 }
 &lt;/script>
 
 &lt;style>
 img.zoomed {
 position: fixed;
 top: 50%;
 left: 50%;
 transform: translate(-50%, -50%);
 max-height: 90vh;
 z-index: 100;
 cursor: zoom-out;
 box-shadow: 0 0 0 100vmax rgba(0,0,0,0.7);
 }
 &lt;/style>
&lt;p>Di mana nyimpan repository remote-nya?&lt;/p></description></item><item><title>Belajar Git #10: Menggunakan Git Pull Git Fetch</title><link>https://gitkodachi.github.io/tutorial/git/git-full-fetch/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-full-fetch/</guid><description/></item><item><title>Belajar Git #12: Cara Menggunakan Git Pada Visual Studio Code</title><link>https://gitkodachi.github.io/tutorial/git/git-vscode/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/tutorial/git/git-vscode/</guid><description/></item><item><title>Cara Setup SSH Key untuk Github agar Bisa Ngepush Tanpa Password</title><link>https://gitkodachi.github.io/post/github-ssh/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/post/github-ssh/</guid><description>&lt;p>Kita bisa melakukan push ke Github melalui dua metode yakni, melalui protokol HTTPS dan SSH.&lt;/p>
&lt;p>Jika kita menggunakan HTTPS, maka kita akan dimintai password di setiap kali melakukan push. Sedangkan kalau pakai SSH, ini tidak perlu..&lt;/p>
&lt;p>..karena password-nya akan diwakili oleh SSH Key.&lt;/p>
&lt;p>Pada tutorial ini, kita akan belajar gimana cara setup SSH Key untuk Github. Sehingga nanti bisa melakukan push tanpa harus ngetik password terus menerus.&lt;/p>
&lt;p>Mari kita mulai!&lt;/p></description></item><item><title>Github Workflow: Cara Berkontribusi di Proyek Open Source</title><link>https://gitkodachi.github.io/post/github-workflow/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://gitkodachi.github.io/post/github-workflow/</guid><description>&lt;p>Github saat ini sudah menjadi rumah bagi proyek-proyek open source.&lt;/p>
&lt;p>Jutaan programmer dari seluruh dunia menaruh kodenya di sana.&lt;/p>
&lt;p>Bahkan proyek open source seperti &lt;a href="https://github.com/torvalds/linux">Linux&lt;/a>, &lt;a href="https://github.com/linuxmint/Cinnamon">Cinnamon&lt;/a>, &lt;a href="https://github.com/laravel/laravel">Laravel&lt;/a>, &lt;a href="https://github.com/BlankOn">BlankOn&lt;/a>, dll. menggunakan Github.&lt;/p>
&lt;p>Bagaimana proyek-proyek itu digarap bersama?&lt;/p>
&lt;p>Itulah yang akan kita pelajari pada artikel ini.&lt;/p>
&lt;p>Kita akan belajar tentang Git dan Github workflow atau alur kerja Github untuk berkontribusi pada proyek open source.&lt;/p>
&lt;p>Kita akan langsung melakukan kontribusi pada proyek “dummy” yang sudah saya siapkan.&lt;/p></description></item></channel></rss>