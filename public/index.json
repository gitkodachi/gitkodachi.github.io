[
  {
    "title": "Belajar HTML dari Nol: Pengenalan Dasar HTML untuk Pemula",
    "content": "HTML memang bahasa yang wajib dipelajari, bagi yang mau menjadi web developer.\nKarena‚Ä¶\nHTML merupakan bahasa dasar untuk membuat web.\nSaya yakin, kamu sudah pernah mendengar HTML sebelumnya. Tapi tidak ada salahnya membaca kembali artikel ini.\nPada tutorial ini, kita akan benar-benar membahas dari nol hingga kamu bisa membuat halaman HTML sendiri.\nBaiklah‚Ä¶\nMari kita mulai!\nApa itu HTML ? Mari kita lihat pengertian HTML menurut wikipedia:\nHTML\r\u0026ldquo;HTML atau HyperText Markup Language merupakan sebuah bahasa markah untuk membuat halaman web.\u0026rdquo;\runtuk membuat halaman web berikut1\nPaham kan maksudnya?\nkalau belum paham, sini saya jelaskan\u0026hellip;\nJadi HTML itu adalah *sebuah bahas yang menggunaka markup atau penanda untuk membuat halaman web.\nPenanda aut markup ini, nant akan kita sebut dengan tag.\nHTML berperan untuk menentukan struktur konten dan tampilan dari sebuat web.\nKalu kita ibraatkan nih\u0026hellip;\nHTML itu seperti batu bata untuk membangun rumah. Batu bata ini dapat disusun hingga menjadi pondasi dasar.\nGambar contoh dengan zoom\rDalam membuat halaman web, HTML tidak sendirian. Ada bahasa lain lagi yang menjadi pelengkapnya, yakni CSS dan Javascript.\nCSS adalah bahasa khusus yang digunakan untuk memperindah tampilan web.\nLalu Javascript bertugas untuk membuat halaman web menjadi hidup. Karena dengan Javascript, kita dapat menentukan fungsi-fungsi maupun efek yang akan diterapkan di website.\nOh iya, pada tutorial ini.. Kita akan fokus dulu membahas HTML. Jika kamu ingin belajar CSS dan Javascript, silakan buka:\nTutorial CSS untuk Pemula Tutorial Javascript untuk Pemula Oke, saya anggap kamu sudah paham tentang apa itu HTML serta peranannya dalam pembuatan web.\nBerikutnya, biar lebih paham.. kita akan membahas sejarah dan asal-usul HTML.\nSejarah dan Asal-usul HTML Sejarah lengkap HTML bisa juga di baca di:\nSejarah dan Asal Usul HTML Pada tutorial ini, kita akan bahas sejarahnya secara singkat.\nCerita awal kemunculan HTML dimulai dari tahun 1980..\nSaat itu seorang ilmuan bernama Tim Berners-Lee sedang bekerja di CERN.\nTim Berners-Lee (2009)\rCERN sendiri bukanlah perusahaan yang berkaitan tentang teknologi maupun internet. CERN adalah singkatan dari bahasa prancis: Conseil Europ√©en pour la Recherche Nucl√©aire.\nYang artinya: Komisi Eropa untuk Penelitian Fisika Nuklir.\nWebsite CERN (2020)\rPara peneliti di CERN membutuhkan sebuah cara atau sistem agar bisa saling berbagi dokumen hasil penelitian.\nTim kemudian mencoba membuat ENQUIRE. Ini adalah software hypertext yang akan digunakan untuk berbagi dokumen.\nLalu di tahun 1989, Tim memperkenalkan ide tentang hypertext berbasis internet. Ini nantinya akan menjadi cikal-bakal HTML.\nTim kemudian memulai proyek baru dengan rekannya Robert Cailliau yang merupakan system engineer di CERN. Akan tetapi proyek ini tidak resmi diadopsi oleh CERN.\nTim Berners-Lee (kiri) dan Robert Cailliau (kanan)\rPada akhir tahun 1991, Tim Berners-Lee menerbitkan dokumen yang berjudul: ‚ÄúHTML Tags‚Äù.\nDokumen ini berisi penjelasan tentang 18 tags awal yang menjadi konsep dasar HTML.\nHTML sebenarnya dirancang berdasarkan pada konsep bahasa markup yang dikenal dengan SGML (Standard Generalized Markup Language).\nSGML adalah sebuah standar internasional untuk membuat dokumen dengan tanda (markup) seperti paragraf, list, heading, dan lain-lain.\nBisa dibilang..\nHTML adalah implementasi dari SGML.\nKalau kita lihat, beberapa tag seperti \u0026lt;title\u0026gt;, \u0026lt;p\u0026gt;, \u0026lt;li\u0026gt;, dan \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt; berasal dari SGML. Namun, tidak semua yang ada di HTML berasal dari SGML.\nSalah satunya adalah Hyperlink, yang murni hasil pemikiran Tim Berners-Lee.\nIde tentang HTML ini kemudian disebarkan ke dalam sebuah mailing list dan segera menjadi perhatian berbagai ilmuwan komputer di seluruh dunia.\nPerkembangan dan Versi HTML HTML punya beberapa versi, dari versi yang paling tua hingga yang terbaru. Berikut ini perkembangan versi HTML:\n[Draft] HTML 1.0 (Juni 1993) adalah versi HTML pertama, namun tidak resmi dirilis; HTML 2.0 (24 November 1995) adalah versi HTML kedua yang resmi pertama kali beredar di pasaran dan dirilis oleh IETF; [Draft] HTML 3.0 (28 Maret 1995) versi ini gagal beredar, karena banyak perubahan yang memicu perdebatan; HTML 3.2 (14 Januari 1997) versi resmi yang dirilis W3C pertama kali. HTML 4.0 (24 April 1998) versi pengembangan dari yang sebelumnya; HTML 4.01 (24 Desember 1999) versi perbaikan dari HTML 4.0; XHTML 1.0 (26 Januari 2000) pengembangan dari HTML 4.01 dengan mengadopsi XML; XHTML 2.0 (Augustus 2002‚ÄîJuli 2006) versi kedua dari XHTML; HTML 5 (28 Oktober 2014) versi html saat ini. Versi [draft] adalah versi yang tidak resmi dirilis ke pasaran. Bentuknya cuma masih dalam draft spesifikasi saja.\nArtinya..\nTidak ada yang menggunakan versi [draft] untuk membuat web.\nLalu, versi mana yang akan kita pakai?\nTentunya versi terbaru, yakni HTML 5.\nPeralatan untuk Belajar HTML Nah, sekarang.. Tiba saatnya kita praktik!\nTapi sebelum itu, kamu harus siapkan beberapa alat yang akan digunakan untuk praktik.\nAdapun peralatan yang harus kamu persiapkan adalah:\n1. Teks Editor untuk Menulis HTML Teks editor akan kita gunakan untuk menulis kode-kode HTML. Kamu bebas menggunakan teks editor apapun.\nNotepad boleh, Notepad++ juga boleh..\nNotepad ++\rApapun teks editornya, yang penting bisa digunakan untuk membuat dan menulis dokumen HTML.\nNamun, pada tutorial ini.. kita akan menggunakan teks editor Visual Studio Code.\n2. Web Browser untuk Membuka HTML Web browser akan kita gunakan untuk membuka HTML. Kamu juga bebas menggunakan web browser apapun.\nSaran saya sih.. gunakan web browser yang terbaru, karena kita juga akan menggunakan HTML versi yang terbaru.\nFirefox atau Google Chrome, saya kira sudah cukup.\nMembuat Dokument HTML Pertamamu Kini tiba saatnya, kamu harus mencoba sendiri membuat dokumen HTML. Caranya sangat mudah.\nMari kita mulai dengan membuka teks editor, lalu tulislah kode berikut.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar HTML #01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello World!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah itu, simpan dengan nama hello-world.html.\nTips: buat kamu yang menggunakan Notepad di Windows, simpanlah nama filenya dengan menggunakan tanda petik \u0026ldquo;hello-world.html\u0026rdquo; agar ekstensinya .html, bukan .txt.\nAtau kamu bisa aktifkan fitur show extension pada Windows Explorer, agar bisa tahu ekstensi filenya.\nCaranya.. masuk ke menu View, lalu centang File name extensions.\nOke.. lanjut!\nSekarang cobalah buka file hello-world.html dengan web browser.. maka hasilnya:\nSelamat! üéâ\nKita sudah berhasil membuat halaman web pertama dengan HTML.\nKini giliran saya menjelaskan maksud dari kode di atas, tapi sebelum itu.. saya akan jelaskan dulu tentang nama file untuk HTML.\nNama File Untuk Html Ada beberapa hal yang perlu diperhatikan dalam membuat nama file HTML:\n1. Extensi file HTML Setiap file HTML harus berekstensi .html, .xhtml (untuk XHTML), dan .htm saja. Jika tidak menggunakan ekstensi ini, maka ia tidak akan bisa dibaca oleh web browser.\nContohnya seperti ini:\nNama filenya adalah hello-world.txt.\nSedah jelas, ini bukan file HTML, melainkan sebuah file teks biasa. Maka.. browser akan menampilkan isi file tersebut apa adanya.\n2. Hindari Beberapa Hal ini\u0026hellip; Penggunaan Spasi Nama file HTML biasanya akan tercantum pada URL, maka sebaiknya hindari menggunakan spasi pada nama file HTML, agar URL yang dibentuk lebih bagus.\nSpasi pada URL, biasanya akan otomatis diubah menjadi %20.\nSebagai ganti spasi, kamu bisa gunakan tanda min (-) atau underscore (_).\nJangan Alay..!\ncontoh:\n** HeLLoWORLD.html** ** da*#$.html** Meskipun nama ini bisa valid, tapi kurang bagus untuk dibaca.. baik oleh manusia, maupun mesin.\nBaiklah, berikutnya kita akan pelajari tentang kode-kode HTML.\nStruktur Dasar HTML Berikut ini adalah kode HTML yang baru saja kita buat:\nPenulisan kode HTML selalu dimulai dengan deklarasi DOCTYPE, lalau menuliskan tag \u0026lt;html\u0026gt; dan di dalamnya terdapat tag \u0026lt;head\u0026gt; dan \u0026lt;body\u0026gt;.\nKalau kita perhatikan.. struktur dasar kode HTML terdiri dari tiga bagian penting:\nBagian Deklarasi Bagian HEAD Bagian BODY Mari kita bahas satu-per-satu:\n1. Bagian Deklarasi Coba perhatikan kode pada baris pertama: \u0026lt;!DOCTYPE html\u0026gt;.\nIni adalah tag deklarasi untuk menyatakan tipe dokumen dan versinya. Pada contoh di atas, kita menyatakan dokumen ini bertipe HTML dan versinya adalah HTML 5.\nNah, untuk HTML versi 4.. beda lagi cara deklarasinya.\nContoh untuk HTML 4.01:\n\u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//W3C//DTD HTML 4.01 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/loose.dtd\u0026#34;\u0026gt; Cukup panjang bukan..\nLalu apakah boleh kita tidak menulis kode \u003c!DOCTYPE html\u003e ini?\nBoleh-boleh saja.. dokumen HTML-nya akan tetap bisa dibuka di web browser. Tapi, ini tentunya akan melanggar aturan standar yang dibuat W3C.\nO ya, kita bisa mengecek.. apakah HTML yang ditulis sudah benar atau tidak di https://validator.w3.org/.\nLanjut‚Ä¶\nBerikutnya, di bawah tag deklarasi \u0026lt;!DOCTYPE html\u0026gt; terdapat tag pembuka untuk HTML:\n\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; Tag \u0026lt;html\u0026gt; wajib ada di setiap dokumen HTML..\nPada tag ini, kita memberikan atribut lang=\u0026ldquo;en\u0026rdquo; untuk menyatakan kalau konten dokumen HTML ini akan menggunakan bahasa inggris.\nNah di dalam tag \u0026lt;html\u0026gt; ini, terdapat dua tag penting lagi.. yakni: tag \u0026lt;head\u0026gt; dan tag \u0026lt;body\u0026gt;.\nSetelah itu barulah terakhir tag HTML ditutup dengan \u0026lt;/html\u0026gt;.\n2. Bagian HEAD Bagian HEAD adalah bagian kepala dari HTML. Dimulai dari tag \u0026lt;head\u0026gt; dan ditutup dengan \u0026lt;/head\u0026gt;.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar HTML #01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello World!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Pada bagian HEAD, biasanya digunakan untuk menuliskan tag-tag yang akan dibaca oleh mesin.\nSeperti:\nTag meta untuk SEO; Tag \u0026lt;title\u0026gt; untuk judul; Tempat menulis kode CSS dan Javascript; dan lain-lain. 3. Bagian BODY Bagian BODY adalah bagian yang akan ditampilkan pada web browser. Penulisannya di mulai dari tag \u0026lt;body\u0026gt; dan ditutup dengan \u0026lt;/body\u0026gt;.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar HTML #01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello World!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Di sinilah nanti kita akan banyak menuliskan konten dengan berbagai macam tag. Saat ini kita baru mengisinya dengan tag \u0026lt;p\u0026gt;. Tag \u0026lt;p\u0026gt; adalah tag yang digunakan untuk membuat paragraf.\nApa Selanjutnya? Nah, sampai di sini dulu tutorial pertama ini..\nJika ada yang belum jelas, bisa ditanyakan melalui komentar.\nBerikutnya silakan pelajari tentang definisi tag, elemen, dan atribut:\nBelajar HTML #02: Mengenal tag, elemen, dan atribut dalam HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\rhttps://id.wikipedia.org/wiki/HTML\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
    "permalink": "http://localhost:1313/tutorial/html/html-dasar/"
  },
  {
    "title": "Apa itu Git dan Kenapa Penting bagi Programmer?",
    "content": "Git adalah salah satu tool yang sering digunakan dalam proyek pengembangan software.\nGit bahkan menjadi tool yang wajib dipahami oleh programmer, karena banyak digunakan di mana-mana.\nPada kesempatan ini kita akan belajar Git dari dasar.\nArtikel ini hanya akan membahas pengenalan Git saja. Untuk mempelajari Git lebih lanjut, saya sudah menyediakan link di bagian akhir.\nMengenal Git Git adalah salah satu sistem pengontrol versi (Version Control System) pada proyek perangkat lunak yang diciptakan oleh Linus Torvalds.\nPengontrol versi bertugas mencatat setiap perubahan pada file proyek yang dikerjakan oleh banyak orang maupun sendiri.\nGit dikenal juga dengan distributed revision control (VCS terdistribusi), artinya penyimpanan database Git tidak hanya berada dalam satu tempat saja.\nKeterangan gambar opsional\rSemua orang yang terlibat dalam pengkodean proyek akan menyimpan database Git, sehingga akan memudahkan dalam mengelola proyek baik online maupun offline.\nDalam Git terdapat Merge untuk menyebut aktifitas penggabungan kode.\nSedangkan pada VCS (Version Control System) yang terpusat‚Ä¶ database disimpan dalam satu tempat dan setiap perubahan disimpan ke sana.\nKeterangan gambar opsional\rVCS terpusat memiliki beberapa kekurangan:\nSemua tim harus terkoneksi ke jaringan untuk mengakses source-code; Tersimpan di satu tempat, nanti kalau server bermasalah bagaimana? Karena itu, Git hadir untuk menutupi kekurangan yang dimiliki oleh VCS terpusat.\nApa yang dilakukan oleh Git? Git sebenarnya akan memantau semua perubahan yang terjadi pada file proyek. Lalu menyimpannya ke dalam database.\nSebelum menggunakan Git:\nKeterangan gambar opsional\rSetelah menggunakan Git:\nKeterangan gambar opsional\rApa perbedaannya?\nSaat kita ingin menyimpan semua perubahan pada file, biasanya kita membuat file baru dengan ‚Äúsave as‚Äù. Lalu, file akan menumpuk dalam direktori proyek seperti pada ilustrasi di atas.\nTapi setelah menggunakan Git‚Ä¶\nHanya akan ada satu file dalam proyek dan perubahannya disimpan dalam database.\nGit hanya akan menyimpan delta perubahannya saja, dia tidak akan menyimpan seluruh isi file yang akan memakan banyak memori.\nGit memungkinkan kita kembali ke versi revisi yang kita inginkan.\nKenapa Git Penting Bagi Programmer? Keterangan gambar opsional\rJadi selain untuk mengontrol versi, git juga digunakan untuk kolaborasi.\nSaat ini Git menjadi salah satu tool terpopuler yang digunakan pada pengembangan software open source maupun closed source.\nGoogle, Microsoft, Facebook dan berbagai perusahaan raksasa lainnya menggunakan Git.\nJadi, buat kamu yang punya impian ingin bekerja di sana, maka kamu harus bisa Git.\nSelain itu, berikut ini ada beberapa menfaat yang akan kamu rasakan setelah bisa menggunakan Git.\nBisa menyimpan seluruh versi source code; Bisa paham cara kolaborasi dalam proyek; Bisa ikut berkontribusi ke proyek open-source; Lebih aman digunakan untuk kolaborasi, karena kita bisa tahu apa yang diubah dan siapa yang mengubahnya. Bisa memahami cara deploy aplikasi modern; Bisa membuat blog dengan SSG. dan sebagainya‚Ä¶ Apa Selanjutnya? Jadi, apakah kamu sudah mengenal git?\nBagus, selanjutnya silakan ikuti tutorial git berikut ini.\nTutorial Git #01: Cara Install Git dan Konfigurasi Awal\nTutorial Git #02: Membuat Repositori Baru dalam Proyek\nTutorial Git #03: Cara Membuat Repository Git Pada Proyek\nTutorial Git #04: Melihat Catatan Log Revisi\nTutorial Git #05: Melihat Perbandingan Revisi dengan Git Diff\nTutorial Git #06: Membatalkan Revisi\nTutorial Git #07: Menggunakan Cabang untuk Mencegah Konflik\nTutorial Git #08: Perbedaan Git Checkout, Reset, dan Revert\nTutorial Git #09: Bekerja dengan Remote Repository\nTutorial Git #10: Berkontribusi di Proyek Open Source\nP.S: Kalau link di atas masih mati, berarti masih dalam draf. Sering-sering dicek agar tidak ketinggalan. üòÑ\nüìñ Sumber: PetaniKode\r",
    "permalink": "http://localhost:1313/tutorial/git/git-untuk-pemula/"
  },
  {
    "title": "Belajar Hugo #1: Instalasi Hugo di Windows, Mac, dan Linux",
    "content": "Mengunduh Hgo Silahkan download versi terbaru dari [Hugo Release]((https://github.com/gohugoio/hugo/releases).\nInstalasi di Windows Unduh file zip Window (Extended Edition) Extrack ke folder \u0026lsquo;C:\\Hugo' Tambahkan path \u0026lsquo;C:\\Hugo' ke environment variables Instalasi di macOS (Menggunakan Homebrew) brew install hugo Instalasi di Linux (menggunakan Snap) sudo snap install hugo --channel=extended ‚úÖ Setelah instalasi, cek versi Hugo:\n",
    "permalink": "http://localhost:1313/tutorial/hugo/01-installasi-hugo/"
  },
  {
    "title": "Tutorial Git #1: Cara Install Git dan Konfigurasi Awal yang Harus Dilakukan",
    "content": "Kita sudah mengenal Git pada tulisan sebelumnya. Selanjutnya Kita akan melakukan instalasi dan persiapan untuk mulai belajar Git.\nTulisan ini terbagi menjadi tiga bagian:\nCara Instalasi Git di Linux. Cara Instalasi Git di Windows. Konfigurasi Awal yang Harus dilkaukan Setelah Menginstal Git. Mari kita mulai\u0026hellip;\n1. Cara Install Git di Linux sudo apt install git atau\nsudo apt-install git Pada Fedora:\nyum install git Setelah itu , coba periksa versi yang terinstal dengan perintah:\ngit --version Pada komputer saya, versi yang terinstal adalah vers 2.50.0\nKeterangan gambar opsional\r2. Cara Install Git di Windows Instalasi Git di Windows memang tidak seperti di Linux yang ketik perintah langsung terinstal.\nKita harus men-download dulu, kemudian melakukan ritual next\u0026gt;next\u0026gt;finish.\nTapi dalam ritual tersebut, ada pilihan yang harus diperhatikan agar perintah git dapat dikenali di CMD.\nDownload Git Silakan buka website resminya Git. Kemudian unduh Git sesuai dengan arsitektur komputer kita. Kalau menggunakan 64bit, unduh yang 64bit. Begitu juga kalau menggunakan 32bit.\nLangkah-langkah Install Git di Windows Baiklah, mari kita mulai ritual instalnya. Silakan klik 2x file instaler Git yang sudah diunduh.\nKeterangan gambar opsional\rMaka akan muncul informasi lisensi Git, klik Next \u0026gt; untuk melanjutkan.\nKeterangan gambar opsional\rSelanjutnya menentukan lokasi instalasi. Biarkan saja apa adanya, kemudian klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pemilihan komponen, biarkan saja seperti ini kemudian klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pemilihan direktori start menu, klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pengaturan PATH Environment. Pilih yang tengah agar perintah git dapat di kenali di Command Prompt (CMD). Setelah itu klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya konversi line ending. Biarkan saja seperti ini, kemudian klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pemilihan emulator terminal. Pilih saja yang bawah, kemudian klik Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pemilihan opsi ekstra. Klik saja Next \u0026gt;.\nKeterangan gambar opsional\rSelanjutnya pemilihan opsi eksperimental, langsung saja klik Install untuk memulai instalasi.\nKeterangan gambar opsional\rTunggu beberapa saat, instalasi sedang dilakukan.\nKeterangan gambar opsional\rSetelah selesai, kita bisa langsung klik Finish.\nKeterangan gambar opsional\rSelamat, Git sudah terinstal di Windows. Untuk mencobanya, silakan buka CMD atau PowerShell, kemudian ketik perintah git \u0026ndash;version.\nKeterangan gambar opsional\rCara Install Git di MacOS Buat kamu yang menggunakan MacOS, git bisa diinstal dengan brew.\nBuka terminal lalu, ketik perintah berikut untuk menginstal Git:\nbrew install git Tunggulah beberapa saat sampai proses instalasinya selesai. Setelah itu, coba ketik perintah berikut untuk mengecek versi git yang terinstal:\ngit --version Maka hasilnya:\nKeterangan gambar opsional\rIni artinya, git versi 2.42.0 sudah terinstal dengan benar di MacOS. Selanjutnya, kita bisa lakukan konfigurasi awal.\n3. Konfigurasi Awal yang Harus Dilakukan Ada beberapa konfigurasi yang harus dilakukan sebelum mulai menggunakan Git, seperti menentukan name dan email.\nSilakan lakukan konfigurasi dengan perintah berikut ini.\ngit config --global user.name \u0026#34;Petani Kode\u0026#34; git config --global user.email contoh@petanikode.com Kemudian periksa konfigurasinya dengan perintah:\ngit config --list Apabila berhasil tampil seperti gambar berikut ini, berarti konfigurasi berhasil.\nKeterangan gambar opsional\rKonfigurasi core.editor bersifat opsional. Sedangkan name dan email wajib.\nJika kamu memiliki akun Github, Gitlab, Bitbucket atau yang lainnya‚Ä¶\nmaka username dan email harus mengikuti akun tersebut agar mudah diintegrasikan.\nSelain konfigurasi awal ini, kamu juga bisa konfigurasi SSH key untuk Github, Gitlab, dan Bitbucket.\nSilakan baca caranya di sini:\nCara Setup SSH Key untuk Github\nCara Setup SSH Key untuk Gitlab\nCara Setup SSH Key untuk Bitbucket\nKonfigurasi Deafult Branch saat ini Secara default, repository Git akan menggunakan nama branch master ketika kita baru pertama membuat repository.\nNama ini sebenarnya mulai ditinggalkan dan disarankan pakai nama main. Soalnya di Github.. default branch atau branch utama yang digunakan adalah main.\nSaat kita mau upload repo ke Github, nantinya kita akan diminta untuk mengubah master menjadi main.\nBiar tidak repot, kita setup aja dari awal.\nLalu gimana caranya supaya Git otomatis menggunakan main secara default?\nGampang, kita cukup tambahkan konfigurasi ini.\nSilakan ketik di Terminal atau CMD:\ngit config --global init.defaultBranch main Dengan demikian, Git akan otomatis menggunakan nama main sebagai branch utama.\nApa Selanjutnya? Bagus, kita sudah mempersiapkan semuanya. Selanjutnya kita bisa langsung belajar membuat repositori git.\n",
    "permalink": "http://localhost:1313/tutorial/git/git-install/"
  },
  {
    "title": "Belajar HTML #02: Memahami Tag, Element, dan Atribut dalam HTML",
    "content": "Tag, elemen, dan atribut merupakan tiga bagian penting yang ada di dalam HTML. Bagi kamu yang baru belajar HTML, wajib hukumnya untuk mengetahui ketiga Hal ini.\nApa itu Tag?\nApa itu Elemen?\nApa itu Atribut?\nSerta apa perbedaan Tag, Elemen, dan Atribut?\nMari kita bahas‚Ä¶\nApa itu Tag? Tag adalah sebuah penanda awalan dan akhiran dari sebuah elemen di HTML. Tag dibuat dengan kurung sudut (\u0026lt;\u0026hellip;\u0026gt;), lalu di dalamnya berisi nama tag dan kadang juga ditambahkan dengan atribut.\nuntuk membuat halaman web berikut1\nContoh: \u0026lt;p\u0026gt;, \u0026lt;a\u0026gt;, \u0026lt;body\u0026gt;, \u0026lt;head\u0026gt;, dan sebagainya.\nTag selalu ditulis berpasangan. Ada tag pembuka dan ada tag penutupnya. Namun, ada juga beberapa tag yang tidak memiliki pasangan penutup. Tag penutup ditulis dengan menambahkan garis miring (/) di depan nama tag.\nGambar contoh dengan zoom\rSetiap tag memiliki fungsi masing-masing. Ada yang digunakan untuk membuat judul, membuat link, membuat paragraf, heading, dan lain-lain.\nMasih ingat sejarah HTML?\nDulu.. awalnya HTML cuma punya 18 tag. Sekarang HTML sudah punya sekitar 250 tag.\nWah! banyak ya.\nApa semua tag ini harus kita hafal?\nJawabannya:\nTidak harus, saja juga tidak bisa menghafal semuanya. Cukup ketahui tag-tag dasar saja.\nBerikut ini daftar tag-tag dasar, yang menurut saya harus kamu ingat.\nTag Fungsi \u0026lt;html\u0026gt; untuk memulai dokumen HTML \u0026lt;head\u0026gt; untuk membuat bagian head \u0026lt;body\u0026gt; untuk membuat bagian body \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt;\tuntuk membuat heading pada artikel \u0026lt;p\u0026gt; untuk membuat paragraf \u0026lt;-!-- --\u0026gt; untuk membuat komentar Beberapa tag ini sudah kita coba pada tutorial pertama dan juga ada yang belum.\nTenang saja.. Nanti juga saya akan perkenalkan tag-tag lain yang umum digunakan dalam pembuatan web.\nUntuk saat ini, cukup pahami: Apa itu tag dan cara menulisnya.\n1. Tag-tag wajib Ada beberapa tag yang wajib ada di HTML. Tag ini harus kamu tulis.. kalau tidak, bisa jadi kode HTML-mu akan error menurut validator W3C.\nBerikut ini daftar tag yang wajib ada di HTML:\n\u0026lt;!DOCTYPE html\u0026gt; ‚Äî untuk deklarasi type dokumen; \u0026lt;html\u0026gt; ‚Äî tag utama dalam HTML; \u0026lt;head\u0026gt; ‚Äî untuk bagian kepala dari dokumen; \u0026lt;title\u0026gt; ‚Äî untuk judul web; \u0026lt;body\u0026gt; ‚Äî untuk bagian body dari dokumen. 2. Gunakan Huruf Kecil Hindari menggunakan huruf besar dalam menuliskan nama tag dan sebaiknya gunakan huruf kecil saja.\nHuruf kecil lebih gampang diketik dan juga akan membuat kode HTML terlihat lebih bersih dan rapi.\nContoh: (bagus)\n\u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Belajar tentang tag di HTML\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; contoh: (buruk)\n\u0026lt;BODY\u0026gt; \u0026lt;P\u0026gt;Belajar tentang tag di HTML\u0026lt;/P\u0026gt; \u0026lt;/BODY\u0026gt; Tapi khusus untuk tag \u0026lt;!DOCTYPE html\u0026gt;.. ia ditulis dengan huruf besar. Sebenarnya bisa juga dengan huruf kecil dan akan valid menurut validator W3C.\nTapi untuk dokumen XHTML, menggunakan DOCTYPE dengan huruf kecil akan mengakibatkan error.\n3. Pastikan Menutup Tag dengan benar Tag HTML nantinya akan ditulis bertumpuk-tumpuk. Artinya, di dalam tag ada tag lagi. Kadang kita sering salah dalam menutup tag yang bertumpuk ini. Akibatnya, kode HTML kita tidak valid.\nTapi tenang saja.. saya punya resep agar kamu mudah mengingatnya:\nJika kamu paham maksud dari jokes di atas, maka bagus.. saya tidak perlu jelaskan lagi.\nTapi kalau belum paham, berikut ini penjelasannya:\nTag yang pertama dibuat, harus ditutup terakhir. Bukan ditutup pertama.\nContoh:\n\u0026lt;i\u0026gt;\u0026lt;b\u0026gt;\u0026lt;u\u0026gt;memasak\u0026lt;/u\u0026gt;\u0026lt;/b\u0026gt;\u0026lt;/i\u0026gt; Tag \u0026lt;i\u0026gt; ditutup terakhir, karena ia yang ditulis pertama. Lalu tag \u0026lt;/u\u0026gt; ditutup pertama kali karena ia berada di dalam tag \u0026lt;b\u0026gt; dan \u0026lt;i\u0026gt;.\nApa itu Elemen ? Elemen dalam HTML adalah sebuah komponen yang menyusun dokumen HTML. Elemen kadang juga disebut sebagai node, karena ia merupakan salah satu jenis node yang menyusun dokumen HTML dalam diagram HTML tree.\nGambar contoh dengan zoom\rPada diagram tersebut, terdapat tiga macam node.. yakni: Node elemen, Node atribut, dan Node teks.\nElemen dibentuk dari tag pembuka, isi tag, dan tag penutup. Kadang juga ditambahkan beberapa atribut.\nContoh:\nGambar contoh dengan zoom\rPada contoh di atas, terdapat satu elemen \u0026lt;p\u0026gt; dengan atribut align=\u0026ldquo;center\u0026rdquo; dan memiliki isi berupa teks, yakni Hello World!.\nElemen tidak selalu berisi teks, kadang ia juga akan berisi elemen lain. Ini biasanya kita sebut dengan nested element atau elemen di dalam elemen.\nBila digambarkan dalam bentuk kotak persegi, maka akan terlihat seperti ini:\nGambar contoh dengan zoom\rElemen HTML ada banyak jenisnya. Ada elemen khusus untuk teks, ada elemen untuk multimedia, script, tabel, metadata, dll. Nanti kita akan pelajari ini secara bertahap. Semua jenis elemen HTML bisa kamu baca di sini: HTML elements reference.\nBeberapa elemen HTML kadang ditambahkan atribut sebagai pelengkap.\nApa itu Atribut ? Atribut adalah kata kunci khusus yang berada di dalam tag pembuka. Atribut juga disebut sebagai modifier yang akan menentukan perilaku dari elemen.\nGambar contoh dengan zoom\rAtribut dapat ditambahkan pada elemen manapun. Ada juga elemen yang mewajibkan menggunakan atribut seperti elemen \u0026lt;a\u0026gt;, \u0026lt;img\u0026gt;, \u0026lt;video\u0026gt;, dll.\nContoh:\n\u0026lt;a href=\u0026#34;https://petanikode.com\u0026#34;\u0026gt;Petani Kode.com\u0026lt;/a\u0026gt; Tag \u0026lt;a\u0026gt; adalah tag untuk membuat link. Tag ini mewajibkan menambahkan atribut href untuk menyatakan halaman tujuan dari link.\nJumlah atribut pada elemen bisa lebih dari satu.\nContoh:\n\u0026lt;img src=\u0026#34;gambar.jpg\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;100\u0026#34; /\u0026gt; Atribut src adalah atribut khusus untuk tag yang fungsinya untuk menentukan gambar yang akan ditampilkan. Lalu atribut width dan height adalah atribut yang mengatur ukurannya.\nJenis-jenis Atribut HTMl Tiap-tiap elemen kadang memiliki atribut khusus yang hanya bisa digunakan pada elemen tersebut. Ada juga atribut yang bersifat global dan bisa ditambahkan ke semua elemen.\nBerikut ini jenis-jenis atribut yang harus diketahui:\nNama Atribut Deskripsi atau fungsi accesskey Menentukan tombol shortcut untuk mengaktifkan atau fokus pada elemen class Menentukan class CSS yang akan digunakan contenteditable Menentukan isi elemen bisa diedit atau tidak data-* Digunakan untuk menyimpan data dir Menentukan arah teks dari elemen (kiri ke kanan atau sebaliknya) draggable Menentukan apakah elemen bisa di drag atau tidak hidden untuk menyembunyikan elemen id Menentukan id unik untuk elemen lang Menentukan bahasa yang digunakan untuk isi elemen spellcheck Menentukan apakah isi elemen harus dilakukan pengejaan grammar atau tudak style Menentukan inline CSS untuk elemen tabindex Menentukan urutan atau indeks tab dari elemen (saat tombol tab ditekan) title Menentukan informasi tambahan tentang elemen translate Menentukan apakah konten dari elemen bisa diterjemahkan atau tidak 2. Atribut Event Atribut event adalah atribut yang digunakan untuk menentukan aksi yang akan dilakukan saat terjadi sesuatu pada elemen. Atribut ini nanti akan banyak digunakan pada pemrograman Javascript.\nBerikut ini daftar atribut event saat terjadi sesuatu pada Jendela browser:\nNama atribut Nilai Fungsi: Menjalankan script onafterprint kode javascript setelah dokumen dicetak onbeforeprint kode javascript sebelum dokumen dicetak onbeforeunload kode javascript sebelum saat dokumen tidak ter-load onerror kode javascript saat terjadi error onhashchange kode javascript saat terjadi perubahan pada bagian anchor di URL onload kode javascript setelah loading selesai onmessage kode javascript saat ada pesan onoffline kode javascript saat tiba-tiba offline ononline kode javascript saat tiba-tiba online onpagehide kode javascript saat user tidak sedang membuka halaman web onpageshow kode javascript saat user membuka kembali halaman web onpopstate kode javascript saat history browser berubah onresize kode javascript saat ukuran jendela browser berubah onstorage kode javascript saat area penyimpanan (Web Storage) di-update onunload kode javascript saat web browser ditutup Selain atribut tersebut, masih banyak lagi atribut event yang lainnya. Semuanya bisa kamu lihat di: HTML Event Attributes.\n3. Atribut Khusus Atribut khusus adalah atribut yang hanya bisa dipakai pada elemen tertentu dan kadang atribut ini tidak bisa digunakan pada elemen yang lain.\nContoh:\nNama atribut Bisa dipakai di tag src \u0026lt;audio\u0026gt;, \u0026lt;embed\u0026gt;, \u0026lt;iframe\u0026gt;, \u0026lt;img\u0026gt;, dll href \u0026lt;a\u0026gt;, \u0026lt;link\u0026gt; action \u0026lt;form\u0026gt; autoplay \u0026lt;audio\u0026gt;, \u0026lt;video\u0026gt; Cara Menulis Atribut yang Benar! Penulisan atribut sebenarnya gampang.. kita hanya perlu menambahkannya pada tag pembuka dengan format seperti ini:\nbana-atribut=\u0026#34;nilai\u0026#34; Namun, ada beberapa hal yang perlu diperhatikan agar penulisannya benar dan valid:\n1. Gunakan Huruf Kecil Menulis atribut dengan huruf besar sah-sah saja, dan bahkan valid menurut validator W3C.\nTapi saya sarankan menggunakan huruf kecil saja. Karena lebih umum digunakan dan juga mudah terbaca.\nContoh: (bagus)\n\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt;Belajar HTML di Petani Kode\u0026lt;/p\u0026gt; 2. Gunakan Tanda Kutip Gunakan tanda petik untuk mengisi nilai atribut yang mengandung teks.\nMengapa?\nKarena jika terdapat lebih dari satu kata, ia akan menciptakan spasi dan akan dianggap sebagai atribut baru.\nContoh: (bagus)\n\u0026lt;h1 title=\u0026#34;tutorial HTML untuk pemula\u0026#34;\u0026gt;Belajar HTML\u0026lt;/h1\u0026gt; Contoh: (buruk)\n\u0026lt;h1 title=tutorial HTML untuk pemula\u0026gt;Belajar HTML\u0026lt;/h1\u0026gt; Tanda petik yang digunakan, boleh petik ganda (\u0026quot;) dan juga petik tunggal (\u0026rsquo;).\nNah untuk nilai angka, boleh pakai tanda petik dan juga boleh tidak.\nContoh:\n\u0026lt;img src=\u0026#34;gambar.jpg\u0026#34; width=120 height=120 /\u0026gt; Lalu, untuk atribut yang bernilai boolean (true dan false).. nilainya boleh ditulis dan boleh tidak.\nContoh:\n\u0026lt;input type=\u0026#34;text\u0026#34; required=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; required /\u0026gt; 3. Penggunaan Spasi Jika ada atribut yang memiliki lebih dari satu nama, maka ia ditulis dengan tanda min (-), bukan spasi.\nContoh:\n\u0026lt;img data-src=\u0026#34;gambar.jpg\u0026#34; /\u0026gt; Lalu, spasi juga digunakan untuk memisahkan dua atau lebih atribut.\nContoh:\n\u0026lt;img class=\u0026#34;lazyload\u0026#34; data-src=\u0026#34;gambar.jpg\u0026#34; src=\u0026#34;placeholder.jpg\u0026#34; /\u0026gt; Bisa juga ditulis seperti ini:\n\u0026lt;img class=\u0026#34;lazyload\u0026#34; data-src=\u0026#34;gambar.jpg\u0026#34; src=\u0026#34;placeholder.jpg\u0026#34; /\u0026gt; Apa Selanjutnya? Kita baru saja belajar tentang Tag, Atribut, dan Elemen dalam HTML. Saya kira kamu sudah dapat membedakan ketiga hal ini.\nElemen adalah komponen yang menyusun dokumen HTML. Sedangkan Tag adalah penanda untuk memulai dan mengakhiri elemen. Lalu atribut adalah modifier untuk menentukan perilaku elemen.\nNah, selanjutnya kita akan berkenalan dengan elemen-elemen dasar di HTML seperti paragraf, heading, list, tabel, link, form, dan lain-lain.\nKarena itu, silakan lanjutkan pelajari tentang:\nBelajar HTML #03: Membuat Paragraf pada HTML Belajar HTML #04: Membuat Heading pada HTML Belajar HTML #05: Membuat Komentar pada HTML Belajar HTML #06: Text Formatting pada HTML Belajar HTML #07: Membuat link di HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\rhttps://id.wikipedia.org/wiki/HTML\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
    "permalink": "http://localhost:1313/tutorial/html/tag-element-atribut/"
  },
  {
    "title": "Belajar Hugo #2: Setup Proyek Hugo dari Awal",
    "content": "Mebuat Proyek Baru Setup Proyek Hugo\nMembuat Proyek Baru\rCopy\rhugo new site my-hugo-project\rMasuk ke folder proyek cd my-hugo-proyek Inisialisai git repository git init Menambahkan \u0026lsquo;.gitignore\u0026rsquo; /public/ /resources/ /node_modules/ /.DS_Store hugo_stats.json Struktur folder dasar hugo my-hugo-project/ ‚îú‚îÄ‚îÄ archetypes/ ‚îú‚îÄ‚îÄ assets/ ‚îú‚îÄ‚îÄ content/ ‚îú‚îÄ‚îÄ data/ ‚îú‚îÄ‚îÄ layouts/ ‚îú‚îÄ‚îÄ static/ ‚îú‚îÄ‚îÄ themes/ ‚îú‚îÄ‚îÄ config.toml ‚úÖ Proyek Hugo siap digunakan dan sudah terhubung dengan Git!\n",
    "permalink": "http://localhost:1313/tutorial/hugo/02-setup-proyek-hugo/"
  },
  {
    "title": "Belajar Hugo #3: Menambahkan Tema \u0026 Integrasi Tailwind CSS",
    "content": "Clone Tema Hugo Contoh menggunakan tema ananke:\ngit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke atur config.toml:\ntheme = \u0026#34;anake\u0026#34; Install Tailwind CSS via NPM npm init -y npm install -D tailwindcss postcss autoprefixer npx tailwindcss init Buat postcss.config.js diroo: postcss.config.js\rCopy\rmodule.exports = {\rplugins: {\rtailwindcss: {},\rautoprefixer: {},\r}\r}\rInstall Tailwind CSS via NPM postcss.config.js\rCopy\rmodule.exports = {\rcontent: [\r\"./layouts/**/*.{html,js}\",\r\"./content/**/*.{md,html}\",\r],\rdarkMode: \"class\",\rtheme: {\rextend: {},\r},\rplugins: [],\r}\rJalankan Build CSS (Development) npm run dev Jalankan Build CSS (Production) npm run build ‚úÖ Tailwind CSS sekarang terintegrasi dengan Hugo kamu!\n",
    "permalink": "http://localhost:1313/tutorial/hugo/03-setup-tema-tailwind/"
  },
  {
    "title": "Belajar HTML #03: Membuat Paragraf pada HTML",
    "content": "Setelah belajar tentang apa itu HTML, Tag, Elemen, dan Atribut. Berikutnya, kita akan belajar tentang elemen-elemen dasar pada HTML yang sering digunakan dalam membuat web.\nMari kita mulai dengan mengenal elemen paragraf.\nMembuat Paragraf di HTML untuk membuat halaman web berikut1\nParagraf adalah kumpulan dari beberapa kalimat. Pada web, Paragraf biasanya digunakan untuk menampilkan teks atau artikel.\nParagraf pada HTML dibuat dengan tag \u0026lt;p\u0026gt;. Selain tag ini, ada juga tag pendukung lain seperti \u0026lt;div\u0026gt;, \u0026lt;hr\u0026gt;, \u0026lt;br\u0026gt;, dan \u0026lt;pre\u0026gt;.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rAtribut untuk Paragraf Biasanya paragraf ditambahkan dengan beberapa atribut seperti align, id, class, dll.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML #2\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/p\u0026gt; \u0026lt;p align=\u0026#34;right\u0026#34;\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Paragraf dibuat dengan menentukan ide pokok terlebih dahulu. Lalu diikuti dengan kalimat-kalimat pendukung.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rAtribut align merupakan atribut yang digunakan untuk perataan teks pada paragraf. Namun, menurut validator W3C.. penggunaan tag ini sebaiknya diganti dengan CSS.\nMengapa demikian?\nKarena atribut align dapat mengubah tampilan dari web. Ini sebenarnya tigas dari CSS. Tugas utama dari HTML adalah membuat struktur dasar dari web.\nContoh perataan menggunakan CSS:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML #2\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p style=\u0026#34;text-align: justify\u0026#34;\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;text-align: center\u0026#34;\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Paragraf dibuat dengan menentukan ide pokok terlebih dahulu. Lalu diikuti dengan kalimat-kalimat pendukung.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rTag \u0026lt;br\u0026gt; untuk Membuat Paragraf Tag \u0026lt;br\u0026gt; sebenarnya bukanlah tag untuk membuat paragraf. Tapi tag ini, biasanya digunakan untuk membantu tag \u0026lt;p\u0026gt;.\nFungsi utama tag \u0026lt;br\u0026gt; adalah untuk membuat baris baru.\nContoh:\nMisalkan kita ingin menampilkan pantun, bisa saja kita buat seperti ini di dengan tag \u0026lt;p\u0026gt;.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML #3\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Rambut berantakan tak pernah di sisir Orang melihat tertawa kesenangan Pengangguran berserakan seperti pasir Kurang usaha dan keterampilan\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMeskipun pada kode HTML kita sudah menulis tiap bait pantun dalam baris yang baru. Tapi ia akan tetap ditampilkan seperti baris.\nDi sinilah saatnya kita harus menggunakan tag \u0026lt;br\u0026gt;. Maka, kode di atas.. bisa kita perbaiki menjadi seperti ini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML #3\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Rambut berantakan tak pernah di sisir \u0026lt;br /\u0026gt; Orang melihat tertawa kesenangan \u0026lt;br /\u0026gt; Pengangguran berserakan seperti pasir \u0026lt;br /\u0026gt; Kurang usaha dan keterampilan\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rOh iya, tag \u0026lt;br\u0026gt; adalah tag yang tidak memiliki pasangan penutup. Cara menutupnya, tambahkan saja garis miring seperti ini \u0026lt;br /\u0026gt;.\nTag \u0026lt;br\u0026gt; boleh ditutup, boleh juga tidak. Namun, sebaiknya ditutup agar valid menurut validator W3C.\nTag \u0026lt;hr\u0026gt; untuk Membuat Garis Sama seperti tag \u0026lt;br\u0026gt;, tag \u0026lt;hr\u0026gt; juga bukanlah tag untuk membuat paragraf.\nTag \u0026lt;hr\u0026gt; merupakan tag yang digunakan untuk membuat garis lurus secara horizontal (horizontal rule). Biasanya digunakan untuk memisahkan beberapa konten atau paragraf.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/p\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;p\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rTag \u0026lt;pre\u0026gt; Pada kasus tertentu, kita ingin menampilkan paragraf dengan format yang lebih spesifik. Contohnya seperti pantun dan puisi yang paragrafnya ditulis dengan garis baru dan juga indentasi.\nHal ini bisa dilakukan dengan bantuan tag \u0026lt;br\u0026gt;. Namun ada juga tag lain yang bisa jadi alternatif, yakni tag \u0026lt;pre\u0026gt;.\nTag \u0026lt;pre\u0026gt; (preformatting) merupakan tag yang digunakan untuk menampilkan teks atau paragraf dalam format yang sudah kita tentukan di HTML.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Hujan Bulan Juni\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;oleh Sapardi Djoko Damono\u0026lt;/p\u0026gt; \u0026lt;pre\u0026gt; tak ada yang lebih tabah dari hujan bulan Juni dirahasiakannya rintik rindunya kepada pohon berbunga itu tak ada yang lebih bijak dari hujan bulan Juni dihapusnya jejak-jejak kakinya yang ragu-ragu di jalan itu tak ada yang lebih arif dari hujan bulan Juni dibiarkannya yang tak terucapkan diserap akar pohon bunga itu \u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rcoba perhatikan!\nTag \u0026lt;p\u0026gt; vs Tag \u0026lt;div\u0026gt; Tag \u0026lt;p\u0026gt; dan Tag \u0026lt;div\u0026gt;, memiliki perilaku yang hampir sama. Tapi tag \u0026lt;div\u0026gt; sebenarnya bukanlah tag untuk membuat paragraf, melainkan tag untuk membuat layout web.\nKadang tag \u0026lt;div\u0026gt; sering ‚Äòdisalahgunakan‚Äô untuk membuat paragraf.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/div\u0026gt; \u0026lt;div\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Ini boleh-boleh, saja. Tapi hasilnya tidak akan sama seperti tag \u0026lt;p\u0026gt;.\nGambar contoh dengan zoom\rParagraf yang dibuat dengan tag \u0026lt;div\u0026gt; tidak akan memiliki jarak margin antar paragraf.\nTag \u0026lt;div\u0026gt; biasanya digunakan untuk membungkus teks yang ada di luar artikel. Contoh seperti teks pada footer, header, sidebar, dll.\nContoh:\n\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Ini adalah sebuah paragraf yang berisi beberapa kalimat. Saya sedang belajar HTML di Petani Kode. Saat ini Sedang, Belajar tentang paragraf.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Paragraf adalah kumpulan dari beberapa kalimat yang saling mendukung. Punya ide pokok sebagai dasar dari paragraf itu sendiri.\u0026lt;/p\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;footer\u0026gt; \u0026lt;div\u0026gt;\u0026amp;copy; 2020 Belajar HTML by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rBonus: Paragraph Style Sebenarnya ini ranah pembahasan tentang CSS bukan HTML. Karena itu, kamu boleh baca dan juga boleh tidak.\nParagraph Style adalah style CSS yang kita berikan kepada paragraf agar tampil lebih menarik.\nBerikut ini beberapa style yang bisa diberikan pada paragraf:\n1. Baris Pertama Masuk ke Dalam Baris pertama pada paragraf kadang sering ditulis masuk ke dalam atau ini juga disebut dengan indentasi.\nContoh:\nGambar contoh dengan zoom\rBagaimanakah cara membuat yang seperti itu di HTML?\nGampang!\nKita bisa memanfaatkan style CSS.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Paragraf Indentasi\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;text-indent: 45px;\u0026#34;\u0026gt;Contoh ini baris pertama yang ditulis masuk ke dalam. Baris kedua tetap ditulis seperti biasa. Dan juga baris Ke-3 ditulis seperti biasa.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rAtribut style merupakan atribut untuk menambahkan style CSS. Pada contoh di atas kita menambahkan text-indent dengan nilai 45px, nilai ini akan menentukan jarak (ke dalam) dari baris pertama.\n2. Warna untuk Paragraf Warna bisa kita berikan kepada teks dan background. Properti CSS yang digunakan untuk memberikan warna adalah color (untuk teks) dan background-color (untuk background).\nContoh:\n\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Warna untuk Paragraf\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;color: blue;\u0026#34;\u0026gt;Contoh paragraf dengan warna teks biru. Ini baris kedua dari paragraf. Semua teks yang ada di dalam paragraf ini akan berwarna biru.\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;color: white; background-color:purple\u0026#34;\u0026gt;Contoh paragraf dengan warna teks putih dan warna background-nya adalah ungu. Ini baris kedua dari paragraf. Semua teks yang ada di dalam paragraf ini akan berwarna putih.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\r3. Mengubah Jenis Font Tidak suka dengan jenis font yang digunakan, kamu bisa menggantinya dengan style CSS.\nCaranya..\nKita bisa gunakan properti font-family lalu diberikan nilai dengan nama font yang akan digunakan.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Paragraf di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Font untuk Paragraf\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;font-family: Arial;\u0026#34;\u0026gt;Ini adalah contoh paragraf yang menggunakan font Arial. Semua teks pada paragraf ini akan menggunakan font Arial. Arial adalah salah satu font yang umum digunakan pada Windows.\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;font-family: \u0026#39;Times New Roman\u0026#39;\u0026#34;\u0026gt;Ini adalah paragraf yang menggunakan font Times New Roman. Font ini juga umum digunakan dalam penulisan teks. Perhatikan penulisan Times New Roman pada style CSS, ia diapit dengan tanda petik karena mengandung lebih dari satu kata.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rApa Selanjutnya? Pada tutorial ini, kita sudah belajar beberapa tag:\n\u0026lt;p\u0026gt; untuk membuat paragraf; \u0026lt;hr\u0026gt; untuk membuat garis lurus; \u0026lt;br\u0026gt; untuk membuat baris baru; \u0026lt;div\u0026gt; untuk membuat paragraf di luar artikel atau layout; \u0026lt;pre\u0026gt; untuk membuat paragraf dengan format yang sudah ditentukan. Ini adalah tag-tag dasar yang perlu diingat dalam membuat paragraf di HTML. Selanjutnya, silakan pelajari tentang:\nBelajar HTML #04: Membuat Heading di HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\rhttps://id.wikipedia.org/wiki/HTML\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
    "permalink": "http://localhost:1313/tutorial/html/html-paragraf/"
  },
  {
    "title": "Tutorial Git #3: Simpan Perubahan Revisi dengan Git Commit",
    "content": "Pada tutorial Git yang kedua, kita sudah membuat repositori kosong. Belum ada apa-apa di sana.\nSekarang coba tambahkan sebuah file baru.\nSebagai contoh, saya akan menambahkan tiga file HTML kosong.\nKeterangan gambar opsional\rSetelah ditambahkan, coba ketik perintah git status untuk melihat status repositorinya.\nKeterangan gambar opsional\rBerdasarkan keterangan di atas, saat ini kita berada cabang (branch) master dan ada tiga file yang belum ditambahkan ke Git.\nTiga Kelompok Kondisi FIle dalam Git Sebelum kita membuat revisi, kita akan berkenalan dulu dengan tiga kondisi file dalam Git.\n1. Modified Modified adalah kondisi di mana revisi atau perubahan sudah dilakukan, tetapi belum ditandai dan belum disimpan di version control. Contohnya pada gambar di atas, ada tiga file HTML yang dalam kondisi modified.\n2. Staged Staged adalah kondisi di mana revisi sudah ditandai, tetapi belum disimpan di version control. Untuk mengubah kondisi file dari modified ke staged gunakan perintah git add nama_file. Contoh:\ngit add index.html 3. Committed Committed adalah kondisi di mana revisi sudah disimpan di version control. perintah untuk mengubah kondisi file dari staged ke committed adalah git commit.\nMembuat Revisi Pertama Baiklah, sekarang kita akan sudah tahu kondisi-kondisi file dalam Git. Selanjutnya, silakan ubah kondisi tiga file HTML tadi menjadi staged dengan perintah git add.\ngit add index.html git add about.html git add contact.html Atau kita bisa melakukannya seperti ini:\ngit add index.html about.html contact.html atau:\ngit add *.html Atau seperti ini (semua file dan direktori):\ngit add . Setelah itu, cobalah ketik perintah git status lagi. Kondisi filenya sekarang akan menjadi staged.\nKeterangan gambar opsional\rSetelah itu, ubah kondisi file tersebut ke committed agar semua perubahan disimpan oleh Git.\ngit commit -m \u0026#34;Commit pertama\u0026#34; Setelah itu, coba cek dengan perintah git status lagi.\nKeterangan gambar opsional\rSelamat, revisi pertama sudah kita buat. Selanjutnya cobalah untuk membuat revisi kedua.\nMembuat Revisi Kedua Ceritanya ada perubahan yang akan kita lakukan pada file index.html. Silakan modifikasi isi file index.html. Sebagai contoh saya mengisinya seperti ini.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello Semua, Saya sedang belajar Git\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah itu ketik lagi perintah git status.\nKeterangan gambar opsional\rTerlihat di sana, file index.html sudah dimodifikasi. Kondisinya sekarang berada dalam modified. Lakukan commit lagi seperti revisi pertama.\ngit add index.html git commit -m \u0026#34;ditambahkan isi\u0026#34; Dengan demikian, revisi kedua sudah disimpan oleh Git. Mungkin anda belum tahu maksud dari argumen -m, argumen tersebut untuk menambahkan pesan setiap menyimpan revisi.\nKeterangan gambar opsional\rSekarang Git sudah mencatat dua revisi yang sudah kita lakukan. Kita bisa ibaratkan revisi-revisi ini sebagai checkpoint pada Game. Apabila nanti ada kesalahan, kita bisa kembali ke checkpoint ini.\nSekian untuk tutorial ke-3 ini, mudah-mudahan bermanfaat.\nSelanjutnya: Tutorial Git 04 - Melihat Log Revisi\n",
    "permalink": "http://localhost:1313/tutorial/git/git-commit/"
  },
  {
    "title": "Belajar HTML #04: Cara Membuat Heading di HTML",
    "content": "Bayangkan jika artikel yang sedang kamu baca ini tidak memiliki judul.\nPasti tidak akan menarik!\nTidak ada judul dan juga sub judul.\nKamu bisa saja akan bingung membacanya.\nKarena itu..\nKita membutuhkan judul, atau dalam HTML dikenal dengan Heading.\nApa itu heading?\ndan bagaimana cara membuatnya?\nAyo kita bahas!\nApa itu Heading ? Heading adalah sebuah judul yang biasanya di berikan pada halaman atau beberapa bagian dari artikel.\nJika kamu sering menulis artikel, pasti ini tidak asing buatmu.\nGambar contoh dengan zoom\rLalu, bagaimana caranya membuat judul di HTML?\nMari kita bahas:\nuntuk membuat halaman web berikut1\nCara Membuat Heading di HTML Judul pada HTML dapat kita buat dengan tag \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt;. Tag \u0026lt;h1\u0026gt; digunakan pada judul level pertama. Lalu tag lainnya digunakan pada sub heading atau level berikutnya.\nMasing-masing judul akan ditampilkan dengan ukuran teks yang berbeda. Tag \u0026lt;h1\u0026gt; adalah yang paling besar, dan tag \u0026lt;h6\u0026gt; paling kecil.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Ini Judul Level 1\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;Ini Judul Level 2\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;Ini Judul Level 3\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;Ini Judul Level 4\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;Ini Judul Level 5\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;Ini Judul Level 6\u0026lt;/h6\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya :\nGambar contoh dengan zoom\rTag \u0026lt;h1\u0026gt; biasanya dipakai pada judul artikel. Lalu tag \u0026lt;h2\u0026gt;, \u0026lt;h3\u0026gt;, \u0026lt;h4\u0026gt;, \u0026lt;h5\u0026gt;, dan \u0026lt;h6\u0026gt; dipakai pada sub judul atau sub heading.\nMari kita coba membuat sebuah artikel yang dilengkapi dengan heading. Buatlah file HTML baru kemudian isi dengan kode berikut:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Belajar Heading di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Heading di HTML ada enam, yakni H1, H2, H3, H4, H5, dan H6. Heading berfungsi untuk membuat judul untuk artikel dan juga sub judul pada bagian artikel. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;Membuat Sub Judul\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Sub judul atau sub heading dimulai dengan tag H2. Lalu diikuti dengan tag selanjutnya hingga sampai H6. Sementara itu, tag H1 hanya digunakan untuk judul artikel saja. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya :\nGambar contoh dengan zoom\rBerdasarkan pengalaman saya‚Äîdalam menulis artikel‚Äîtag \u0026lt;h5\u0026gt; dan \u0026lt;h6\u0026gt; jarang sekali dipakai, karena judul yang dibuat hanya sampai pada level 2, 3, dan 4.\nUrutan Penulisan Heading Apakah boleh menulis judul yang tidak urut?\nMaksudnya.. seperti menggunakan \u0026lt;h6\u0026gt; untuk judul awal, lalu berikutnya \u0026lt;h4\u0026gt; untuk sub judul.\nIni boleh-boleh saja, tapi kurang bagus untuk SEO. 1\nPenulisan judul yang bagus adalah judul yang mengikuti levelnya.\nGambar contoh dengan zoom\rJudul \u0026lt;h1\u0026gt; pada level pertama, \u0026lt;h2\u0026gt; pada level ke-2, dan seterusnya.\nAtribut untuk Heading Masih ingat tentang atribut?\nYa, dia adalah _______\nSudah lupa ya?\nCoba buka lagi pembahasan tentang: Apa itu Tag, Elemen, dan Atribut di HTML?\nHeading tidak memiliki atribut khusus. Ia biasanya menggunakan atribut global.\nContohnya seperti:\nid untuk memberikan nama id unik. Biasanya ini akan digunakan oleh link, CSS, dan Javascript; class untuk memberikan nama class yang akan dipakai oleh CSS; style untuk memberikan kode css secara langsung; title untuk menambahkan informasi tambahan; dll. Daftar atribut global, bisa kamu lihat di MDN: HTML Global Attributes.\nPerbedaan Heading dengan Title dan Header Meskipun sama-sama digunakan untuk urusan judul, tapi tiga elemen ini berbeda.\nHeading adalah judul untuk artikel dan bagian artikel yang dibuat dengan tag \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt; Title adalah judul dari web yang dibuat dengan tag \u0026lt;title\u0026gt; Header adalah bagian kepala (kop) pada web yang dibuat dengan tag \u0026lt;header\u0026gt; Coba perhatikan gambar berikut:\nsrc=\u0026ldquo;images/content/tutorial/html/heading-title-header.png\u0026rdquo; alt=\u0026ldquo;Deskripsi gambar\u0026rdquo; caption=\u0026quot;Gambar contoh dengan zoom\u0026quot;\n}}\nSudah jelas kan bedanya?\nTag \u0026lt;title\u0026gt; untuk judul yang ditampilkan di web browser. Tag \u0026lt;header\u0026gt; sama seperti kop surat. Lalu heading \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt; menjadi judul untuk artikel.\nBonus: Heading Style Sebenarnya ini termasuk dalam pembahasan materi tentang CSS. Karena itu, saya menjadikannya bonus yang boleh kamu baca dan juga boleh tidak.\nJadi..\nHeading Style adalah style CSS yang diberikan pada heading agar terlihat menarik.\nBerikut ini beberapa style yang sering digunakan pada heading:\nHeading dengan Garis Bawah Heading dengan garis bawa bisa kita buat dengan memanfaatkan tag \u0026lt;hr\u0026gt; dan juga CSS.\nContoh menggunakan tag \u0026lt;hr\u0026gt;:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Tutorial Membuat Heading di HTML\u0026lt;/h1\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;p\u0026gt; Heading adalah judul sebuah artikel dan bagian dari artikel. Ada Enam level heading pada HTML, yakni dimulai dari H1, H2, H3, sampai H6. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nsrc=\u0026ldquo;images/content/tutorial/html/garis-bawah-hr.png\u0026rdquo; alt=\u0026ldquo;Deskripsi gambar\u0026rdquo; caption=\u0026quot;Gambar contoh dengan zoom\u0026quot;\n}}\nContoh menggunakan CSS:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 style=\u0026#34;text-decoration: underline;\u0026#34;\u0026gt;Tutorial Membuat Heading di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Heading adalah judul sebuah artikel dan bagian dari artikel. Ada Enam level heading pada HTML, yakni dimulai dari H1, H2, H3, sampai H6. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nsrc=\u0026ldquo;images/content/tutorial/html/garis-bawah-css.png\u0026rdquo; alt=\u0026ldquo;Deskripsi gambar\u0026rdquo; caption=\u0026quot;Gambar contoh dengan zoom\u0026quot;\n}}\nText Case untuk Heafding Heading kadang ditulis dengan berbagai style case. Ada yang menggunakan huruf besar semua, ada juga yang menggunakan huruf kecil di awal kata saja.\ncontoh:\nINI HEADING DENGAN HURUF BESAR SEMUA Ini Heading Dengan Huruf Besar Di Depan Kata Nah, untuk membuat style case heading ini, Kita bisa menggunakan CSS atribut text-transform.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 style=\u0026#34;text-transform: uppercase;\u0026#34;\u0026gt;Heading dengan huruf Besar semua\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Heading adalah judul sebuah artikel dan bagian dari artikel. Ada Enam level heading pada HTML, yakni dimulai dari H1, H2, H3, sampai H6. \u0026lt;/p\u0026gt; \u0026lt;h1 style=\u0026#34;text-transform: capitalize;\u0026#34;\u0026gt;Heading dengan huruf Besar di awal kata\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Properti text-transform berfungsi untuk menentukan style case dari teks. Properti ini bisa diberikan nilai capitalize, uppercase, lowercase, initial, none, inherit. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nsrc=\u0026ldquo;images/content/tutorial/html/heading-case.png\u0026rdquo; alt=\u0026ldquo;Deskripsi gambar\u0026rdquo; caption=\u0026quot;Gambar contoh dengan zoom\u0026quot;\n}}\nWarna Untuk Heading Sama sperti element yang lainya, heading juga dapat kita berikan warna dengan menggunakan CSS. Warna bisa kita berikan pada teks dan latar belakang atau background.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Heading di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 style=\u0026#34;color: red;\u0026#34;\u0026gt;Heading dengan warna Merah\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Atribut color adalah atribut CSS yang berfungsi untuk memberikan warna pada teks. Pada contoh ini, teks pada heading akan berwarna merah, karena kita memberikan warna red untuk color. \u0026lt;/p\u0026gt; \u0026lt;h2 style=\u0026#34;background-color: yellow;\u0026#34;\u0026gt;Heading dengan Latar Kuning\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Atribut background-color adalah atribut untuk memberikan warna latar (background) pada elemen tertentu. Pada contoh ini, kita memberikan warna latar kuning untuk heading. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; src=\u0026ldquo;images/content/tutorial/html/heading-color.png\u0026rdquo; alt=\u0026ldquo;Deskripsi gambar\u0026rdquo; caption=\u0026quot;Gambar contoh dengan zoom\u0026quot;\n}}\nNah untuk style lainya, silahkan berkresi sendiri.\nApa Selanjutnya? Kita sudah belajar tentang cara membuat heading di HTML. Hal yang perlu kamu ingat adalah tag-tag untuk membuat heading, yakni dimulai dari \u0026lt;h1\u0026gt; sampai \u0026lt;h6\u0026gt;.\nBerikutnya, silakan pelajari tentang:\nBelajar HTML #05: Membuat Komentar pada HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\rhttps://id.wikipedia.org/wiki/HTML\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
    "permalink": "http://localhost:1313/tutorial/html/html-heading/"
  },
  {
    "title": "Tutorial Git #4: Melihat Catatan Log Revisi",
    "content": "Pada tutorial sebelumnya, kita sudah membuat dua revisi pada repositori project-01. Sekarang bagaimana caranya kita melihat catatan log dari revisi-reivisi tersebut?\nGit sudah menyediakan perintah git log untuk melihat catatan log perubahan pada repositori. Contoh penggunaannya:\ngit log Maka kita akan melihat log perubahan apa saja yang sudah dilakukan dalam repositori.\nPada gambar di atas, terdapat dua revisi perubahan yang telah dilakuan.\rLog yang Lebih Pendek Untuk menampilkan log yang lebih pendek, kita bisa menambahkan argumen \u0026ndash;oneline.\ngit log --online Maka akan menghasilkan output:\n06f735a ditambahkan isi cf08ca0 commit pertama Log pada Nomer Revisi/Commit Untuk melihat log pada revisi tertentu, kita bisa memasukan nomer revisi/commit.\ngit log cf08ca0837cf26f1c595be36bb3a6b815e311be1 Maka menghasilkan output:\ncommit cf08ca0837cf26f1c595be36bb3a6b815e311be1 Author: Ardianta Pargo \u0026lt;ardianta_pargo@yahoo.co.id\u0026gt; Date: Mon Feb 13 18:08:56 2017 +0800 commit pertama Log pada File Tertentu Untuk melihat revisi pada file tertentu, kita dapat memasukan nama filenya.\ngit log index.html Maka akan menghasilkan output:\ncommit 06f735af7724558164c87f6b1ce3ca7778eb1c1b Author: Ardianta Pargo \u0026lt;ardianta_pargo@yahoo.co.id\u0026gt; Date: Mon Feb 13 18:26:50 2017 +0800 ditambahkan isi commit cf08ca0837cf26f1c595be36bb3a6b815e311be1 Author: Ardianta Pargo \u0026lt;ardianta_pargo@yahoo.co.id\u0026gt; Date: Mon Feb 13 18:08:56 2017 +0800 commit pertama Karena file index.html sudah direvisi sebanyak dua kali.\nLog Revisi yang dilakukan oleh Author Tertentu Misalkan dalam repositori dikerkajan oleh banyak orang. Maka kita dapat melihat revisi apa saja yang di lakukan oleh orang tertentu dengan perintah berikut:\ngit log --author=\u0026#39;Ocatocat\u0026#39; Penutup Itulah beberapa cara melihat log revisipada repositori, Perintah yang di gunaka adlah git log. Selanjutnya kita pelajari perintah git diff untuk melihat perbandingan pada revisi.\nSelanjutnya: Tutorial Git 05 - Melihat Perbandingan Revisi\n",
    "permalink": "http://localhost:1313/tutorial/git/git-log/"
  },
  {
    "title": "Belajar Hugo #4: Membuat Layout \u0026 Partial di hugo",
    "content": "Struktur Layout Hugo Hugo menggunakan folder layouts/ dengan struktur seperti ini:\nlayouts/ ‚îú‚îÄ‚îÄ _default/ ‚îÇ ‚îú‚îÄ‚îÄ baseof.html ‚îÇ ‚îú‚îÄ‚îÄ list.html ‚îÇ ‚îî‚îÄ‚îÄ single.html ‚îú‚îÄ‚îÄ partials/ ‚îÇ ‚îú‚îÄ‚îÄ head.html ‚îÇ ‚îú‚îÄ‚îÄ header.html ‚îÇ ‚îú‚îÄ‚îÄ footer.html ‚îÇ ‚îî‚îÄ‚îÄ navbar.html Membuat file \u0026lsquo;baseof.html\u0026rsquo; Contoh Dasar:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;id\u0026#34;\u0026gt; \u0026lt;head\u0026gt; {{ partial \u0026#34;head.html\u0026#34; . }} \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; {{ partial \u0026#34;navbar.html\u0026#34; . }} \u0026lt;main\u0026gt; {{ block \u0026#34;main\u0026#34; . }}{{ end }} \u0026lt;/main\u0026gt; {{ partial \u0026#34;footer.html\u0026#34; . }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Partial: Head (partials/head.html) Contoh Dasar:\n\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;{{ .Title }} ‚Äî {{ .Site.Title }}\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ \u0026#34;css/styles.css\u0026#34; | relURL }}\u0026#34;\u0026gt; Membuat list.html dan single.html list.html ‚ûî untuk halaman daftar (misal: blog list)\nsingle.html ‚ûî untuk halaman konten tunggal\nContoh single.html:\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;article class=\u0026#34;prose dark:prose-invert mx-auto p-4\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/article\u0026gt; {{ end }} Partial Navbar (partials/navbar.html) Contoh partials/navbar.html:\n\u0026lt;nav class=\u0026#34;bg-emerald-600 p-4 text-white\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;container mx-auto flex justify-between\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ \u0026#34;/\u0026#34; | relURL }}\u0026#34; class=\u0026#34;font-bold\u0026#34;\u0026gt;{{ .Site.Title }}\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; ‚úÖ Dengan ini, kamu bisa mulai membangun halaman dengan struktur konsisten! üí° Tips: Gunakan partial untuk komponen yang dipakai berulang.\n",
    "permalink": "http://localhost:1313/tutorial/hugo/04-membuat-layout-partial/"
  },
  {
    "title": "Belajar HTML #05: Cara Membuat Komentar di HTML",
    "content": "Sampai ditahap ini.. apakah kamu sudah ingat semua tag HTML yang dipelajari?\nSudah lupa?\nTidak apa-apa, itu adalah sifat dari manusia. Otak kita memang tidak seperti komputer yang bisa mengingat dengan cepat dan permanen.\nKarena itu, kita membutuhkan catatan agar bisa mengingat.\nCoba perhatikan ini:\nGambar contoh dengan zoom\rYang saya lingkari merah itu adalah komentar atau catatan yang akan mengingatkan saya tentang pekerjaan yang harus dilakukan di bagian tersebut.\nKarena tulisan saya sangat panjang, jadi komentar ini sangatlah berguna.\nNah, di HTML juga kita akan menemukan hal yang demikian. Nantinya, dokumen HTML kita akan semakin banyak dan panjang.\nAgar bisa mengingat strukturnya, sebaiknya ditambahkan komentar.\nBagaimana cara membuatnya?\nMari kita pelajari..\nApa tiu Komentar dalam HTML? Komentar adalah elemen yang akan diabaikan oleh browser. Ia tidak akan ditampilkan di dalam web.\nKomentar biasanya digunakan untuk memberikan informasi tambahan pada kode HTML dan kadang juga digunakan untuk menon-aktifkan beberapa kode HTML.\nCara Membuat komentar diHTML Komentar dapat kita buat dengan tag \u0026lt;!-- --\u0026gt;.\nGambar contoh dengan zoom\rContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar Membuat Komentar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- ini adalah komentar --\u0026gt; \u0026lt;p\u0026gt;Hello World!\u0026lt;/p\u0026gt; \u0026lt;!-- ini juga komentar dan ditulis dalam dua baris --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rKomentar tidak akan ditampilkan oleh browser, tapi kita bisa melihatnya dengan cara view source.\nKlik kanan pada browser, lalu pilih view page source.\nGambar contoh dengan zoom\rJalan Pintas untuk Membuat Komentar Jika kamu menggunakan teks editor Visual Studio Code, kamu bisa membuat komentar dengan menekan Ctrl+/.\nGambar contoh dengan zoom\rCara ini lebih cepat dibandingkan dengan harus menulis secara manual tag komentarnya.\nAtribut untuk Komentar Komentar tidak bisa ditambahkan atribut. Jika kamu mencoba menambahkannya, itu akan sia-sia. Soalnya komentar merupakan elemen yang tidak akan diproses oleh browser.\nFungsi Komentar Komentar memang tidak akan ditampilkan di web, namun bukan berarti ia tidak memiliki fungsi.\nBerikut ini beberapa fungsi komentar:\n1. Komentar untuk Menjelaskan Arti Tag Saat belajar HTML, kamu mungkin akan kesulitan mengingat fungsi dan arti dari tag HTML. Karena itu, kamu harus membuat catatan untuk mengingatnya.\nIni bisa kamu lakukan dengan mencatat di buku, maupun media lain. Tapi, alangkah baiknya memanfaatkan komentar untuk mencatat.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- ini tag untuk menentukan type dokumen --\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar Membuat Komentar di HTML\u0026lt;/title\u0026gt; \u0026lt;!-- tag title berfungsi untuk membuat judul web dan akan ditampilkan pada title bar di browser --\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Ini tag paragraf yang aktif\u0026lt;/p\u0026gt; \u0026lt;!-- tag \u0026lt;p\u0026gt; adalah tag untuk membuat paragraf --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Jika kita lupa, kita bisa membuka kembali dan mempelajari kode tersebut.\nTapi ingat, jangan buat komentar seperti ini pada proyek websitemu. Karena akan sangat mengganggu dan membuat kode sulit terbaca.\nSebaiknya, komentar yang berisi penjelasan semacam ini dibuat pada kode HTML yang kita pakai untuk belajar. Bukan kode HTML untuk web asli.\n2. Komentar untuk Menyimpan Todo List Komentar kadang sering digunakan juga untuk menyimpan todo list, ini akan membantu kita mengingat apa yang harus dikerjakan pada bagian HTML tertentu.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar Membuat Komentar di HTML\u0026lt;/title\u0026gt; \u0026lt;!-- TODO: Tambahkan tag meta di sini --\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Komentar di HTML\u0026lt;/h1\u0026gt; \u0026lt;!-- TODO: Buat konten web di ini --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Jika kita sudah mengerjakan apa yang dituliskan di todo list tersebut, kita bisa hapus komentarnya.\n3. Komentar untuk Menonaktifkan Kode HTML Komentar kadang sering digunakan untuk menon-aktifkan kode HTML.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Belajar Membuat Komentar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Ini tag paragraf yang aktif\u0026lt;/p\u0026gt; \u0026lt;!-- \u0026lt;p\u0026gt;ini tag paragraf yang tidak aktif karena berada di dalam komentar \u0026lt;/p\u0026gt; --\u0026gt; \u0026lt;p\u0026gt;ini paragraf yang lainnya\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rApa Selanjutnya? Itulah cara membuat komentar di HTML, intinya kamu hanya perlu mengingat tag untuk membuatnya.\nBelajar HTML #06: Text Formatting di HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\r",
    "permalink": "http://localhost:1313/tutorial/html/html-komentar/"
  },
  {
    "title": "Tutorial Git #5: Melihat Perbandingan Revisi dengan Git Diff",
    "content": "Pada tutorial sebelumnya, kita sudah belajar cara melihat log revisi di repositori. Sekarang kita kan pelajari perintah git diff, fungsinya untuk melihat perbedaan perubahan di revisi.\nMelihat Perbandingan Perubahan yang Dilakukan pada Revisi Gunakan perintah berikut ini untuk melihat perubahan yang dilakukan pada revisi tertentu.\ngit diff cf08ca0837cf26f1c595be36bb3a6b815e311be1 cf08ca0837cf26f1c595be36bb3a6b815e311be1 adalah nomer revisi yang ingin dilihat.\nKeterangan gambar opsional\rLihatlah hasil di atas, simbol plus (+) artinya kode yang ditambahkan. Sedangkan kalau ada kode yang dihapus simbolnya akan menggunakan minus (-).\nContoh: Ditambahkan:\n+ \u0026lt;p\u0026gt;ini kode yang ditambahkan\u0026lt;/p\u0026gt; Dihapus:\n- \u0026lt;i\u0026gt;ini kode yang dihapus\u0026lt;/i\u0026gt; Dimodifikasi/diubah:\n- \u0026lt;span\u0026gt;ini kode sebelum diubah\u0026lt;/span\u0026gt; + \u0026lt;span\u0026gt;ini kode sesudah diubah\u0026lt;/span\u0026gt; Sekarang kita akan mencoba mengubah isi dari index.html.\nSebelum diubah:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello Semua, Saya sedang belajar Git\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah diubah:\netelah diubah: \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello Dunia!, Saya sedang belajar Git\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah itu lakukan jalankan perintah git diff lagi.\nKeterangan gambar opsional\rApa yang dilakukan git diff? Perintah git diff akan membandingkan perubahan yang baru saja dilakukan dengan revisi/commit terakhir.\nMelihat Perbandingan pada File Apa bila kita melakukan banyak perubahan, maka akan banyak sekali tampil output. Karena itu, kita mungkin hanya perlu melihat perubahan untuk file tertentu saja. Untuk melihat perbandingan perubahan pada file tertentu, gunakan perintah berikut.\ngit diff index.html Perintah di atas akan melihat perbedaan perubahan pada file index.html saja.\nMelihat Perbandingan antara Revisi/Commit Perintah untuk membandingkan perubahan pada revisi dengan revisi yang lain adalah sebagai berikut.\ngit diff \u0026lt;nomer commit\u0026gt; \u0026lt;nomer commit\u0026gt; contoh:\ngit diff cf08ca0837cf26f1c595be36bb3a6b815e311be1 06f735af7724558164c87f6b1ce3ca7778eb1c1b Perbandingan Antar Cabang (Branch) Kita memang belum masuk ke materi percabangan di Git. Tapi tidak ada salahnya mengetahui cara melihat perbandingan perubahan antar cabang.\ngit diff \u0026lt;nama cabang\u0026gt; \u0026lt;nama cabang\u0026gt; Penutup Kita sudah pelajari fungsi dari perintah git diff. Perintah ini untuk melihat perbandingan perubahan apa saja yang telah dilakukan pada repositori. Selanjutnya, kita akan belajar membatalkan revisi.\nSelanjutnya: Tutorial Git 06 - Membatalkan Revisi\n",
    "permalink": "http://localhost:1313/tutorial/git/git-diff/"
  },
  {
    "title": "Belajar Hugo #5: Membuat Komponen \u0026 Interaktifitas Frontend di Hugo",
    "content": "Membuat Komponen Reusable Hugo partial sangat cocok digunakan untuk membuat komponen kecil yang berulang, contohnya Button.\nContoh Komponen Button (partials/components/button.html) \u0026lt;button class=\u0026#34;bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-2 px-4 rounded transition\u0026#34;\u0026gt; {{ . }} \u0026lt;/button\u0026gt; {{ partial \u0026#34;components/button.html\u0026#34; \u0026#34;Klik Aku\u0026#34; }} {{ . }} Membuat Interaktifitas dengan Alpine.js Alpine.js adalah framework ringan yang cocok untuk interaksi dasar.\nContoh Toggle Button \u0026lt;div x-data=\u0026#34;{ open: false }\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;open = !open\u0026#34; class=\u0026#34;bg-emerald-600 text-white px-4 py-2 rounded\u0026#34;\u0026gt; Toggle \u0026lt;/button\u0026gt; \u0026lt;div x-show=\u0026#34;open\u0026#34; class=\u0026#34;mt-2 p-4 bg-emerald-100 rounded\u0026#34;\u0026gt; Konten ini bisa muncul \u0026amp; hilang! \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Menambahkan Alpine.js di Layout Tambahkan di bagian bawah baseof.html sebelum :\n\u0026lt;script src=\u0026#34;//unpkg.com/alpinejs\u0026#34; defer\u0026gt;\u0026lt;/script\u0026gt; Contoh Komponen Modal dengan Alpine.js + Hugo \u0026lt;div x-data=\u0026#34;{ open: false }\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;open = true\u0026#34; class=\u0026#34;bg-emerald-500 text-white px-4 py-2 rounded\u0026#34;\u0026gt;Buka Modal\u0026lt;/button\u0026gt; \u0026lt;div x-show=\u0026#34;open\u0026#34; class=\u0026#34;fixed inset-0 bg-black/50 flex items-center justify-center\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;bg-white p-4 rounded\u0026#34;\u0026gt; \u0026lt;p\u0026gt;Ini Modal!\u0026lt;/p\u0026gt; \u0026lt;button @click=\u0026#34;open = false\u0026#34; class=\u0026#34;mt-2 text-red-500\u0026#34;\u0026gt;Tutup\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Catatan ‚úÖ Hugo Partial ‚ûî untuk UI komponen berulang ‚úÖ Alpine.js ‚ûî untuk behavior interaktif dasar ‚úÖ Tailwind CSS ‚ûî untuk styling cepat\nNote: üéØ Dengan gabungan Hugo + Alpine.js + Tailwind, kamu bisa membuat website yang cepat, dinamis, dan ringan.\n",
    "permalink": "http://localhost:1313/tutorial/hugo/05-komponen-dan-interaktifitas/"
  },
  {
    "title": "Belajar HTML #06: Text Formatting di HTML (Bold, Italic, Underline, dll)",
    "content": "Coba perhatikan kedua paragraf ini:\nGambar contoh dengan zoom\rKamu lebih tertarik baca yang mana?\n..yang terformat, atau yang polos (plain text)?\nTeks yang terformat akan lebih mudah dibaca, karena ada penegasan seperti teks tebal, miring, dan garis bawah.\nSaat kita mencari kata atau kalimat penting.. mata kita akan lebih mudah menemukannya pada teks yang terformat dibandingkan plain text.\nKarena itu, dalam membuat web.. ada baiknya menggunakan format teks.\nNah, di HTML terdapat tag-tag yang khusus digunakan untuk text formatting.\nApa saja itu?\nMari kita bahas..\nMembuat Teks Tebal Teks tebal biasanya digunakan untuk memberikan penegasan pada teks tertentu, misalnya seperti judul, subjudul, huruf penting, dll.\nTag yang digunakan untuk membuat teks tebal di HTML adalah tag \u0026lt;b\u0026gt; (bold) dan tag \u0026lt;strong\u0026gt;. Kamu bebas mau pakai yang mana saja, hasilnya akan sama-sama tebal.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Text Tebal di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Text Tebal di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;Teks formatting itu penting!\u0026lt;/strong\u0026gt; Karena dapat membuat tulisan terlihat lebih menarik sehingga akan membuat \u0026lt;b\u0026gt;pengunjung senang\u0026lt;/b\u0026gt; membacanya. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMembuat Teks Miring Teks miring biasanya digunakan untuk menegaskan sebuah kata atau istilah baru. Teks miring di HTML dapat kita buat dengan tag \u0026lt;i\u0026gt; (italic) dan juga tag \u0026lt;em\u0026gt; (emphasis).\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Text Miring di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Text Miring di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Gunakan \u0026lt;i\u0026gt;teks miring\u0026lt;/i\u0026gt; untuk memberikan penekanan pada teks, sehingga akan \u0026lt;em\u0026gt;menarik perhatian\u0026lt;/em\u0026gt; pembaca. Biasanya digunakan pada \u0026lt;i\u0026gt;istilah asing\u0026lt;/i\u0026gt; atau kata serapan dari \u0026lt;em\u0026gt;bahasa daerah\u0026lt;/em\u0026gt;. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMembuat Garis Bawah pada Teks Garis bawah biasanya digunakan untuk menandai teks yang disisipkan atau teks yang memiliki arti penting dibandingkan teks normal lainnya.\nGaris bawah di HTML dapat kita buat dengan tag \u0026lt;u\u0026gt; (underline) atau juga tag \u0026lt;ins\u0026gt; (insert).\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Garis Bawah di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Garis Bawah di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;u\u0026gt;Text formatting itu penting\u0026lt;/u\u0026gt;, karena dapat membuat teks terlihat lebih menarik dibandingkan \u0026lt;del\u0026gt;text biasa\u0026lt;/del\u0026gt; \u0026lt;ins\u0026gt;plain text\u0026lt;/ins\u0026gt;. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPada contoh di atas, kita menggunakan tag \u0026lt;del\u0026gt; untuk membuat teks tercoret. Lalu diikuti dengan teks yang ditambahkan (insert).\nMembuat Teks Tercoret Teks tercoret memiliki arti teks yang dihapus. Biasanya untuk memberitahu pembaca bahwa teks tersebut tidak dipakai atau dihapus.\nTag untuk membuat teks tercoret di HTML adalah tag \u0026lt;s\u0026gt; (strikethrough) atau bisa juga dengan tag \u0026lt;del\u0026gt; (delete).\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Text Tercoret di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Text Tercoret di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Coretlah teks yang tidak \u0026lt;s\u0026gt;dibutuhkan\u0026lt;/s\u0026gt; terpakai, ini bisa memberitahu pembaca tentang perbaikan dari teks tersebut. Kadang juga teks \u0026lt;del\u0026gt;tercoret\u0026lt;/del\u0026gt; \u0026lt;ins\u0026gt;yang dicoret\u0026lt;/ins\u0026gt;, diperbaiki dengan menambahkan teks dengan garis bawah. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMembuat Pangkat di HTML Pangkat biasanya digunakan pada rumus. Ada dua jenis pangkat yang bisa dibuat di HTML, yakni pangkat yang berada di atas (superscript) dan pangkat di bawah (subscript).\nTag untuk membuat pangkat di HTML adalah tag \u0026lt;sup\u0026gt; dan \u0026lt;sub\u0026gt;.\n\u0026lt;sup\u0026gt; untuk membuat pangkat di atas \u0026lt;sub\u0026gt; untuk membuat pangkat di bawah Contoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Membuat Pangkat di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Membuat Pangkat di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Rumus luas persegi adalah S\u0026lt;sup\u0026gt;2\u0026lt;/sup\u0026gt;, di mana \u0026lt;i\u0026gt;S\u0026lt;/i\u0026gt; adalah sisi dari persegi. Lalu O\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt; adalah rumus kimia dari oksigen. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gambar contoh dengan zoom\rMembuat Marker untuk Teks Marker bisanya digunakan untuk menandai teks yang penting atau kata kunci yang penting. Marker di HTML dapat kita buat dengan tag \u0026lt;mark\u0026gt;.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Membuat marker teks di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Membuat marker teks di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Marker biasanya digunakan untuk menandai bagian teks yang penting. Kalau di dunia nyata, kita \u0026lt;mark\u0026gt;menggunakan stabilo\u0026lt;/mark\u0026gt; untuk membuat marker. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rWarna default marker adalah kuning. Warna ini bisa kita ubah dengan style CSS.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Membuat marker teks di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Membuat marker teks di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Marker biasanya digunakan untuk menandai bagian teks yang penting. Kalau di dunia nyata, kita \u0026lt;mark style=\u0026#34;background-color: pink\u0026#34;\u0026gt;menggunakan stabilo\u0026lt;/mark\u0026gt; untuk membuat marker. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Maka hasilnya, marker akan berwarna pink:\nGambar contoh dengan zoom\rTeks Formatting untuk Komputer Selain dari teks formatting di atas, ada juga teks formatting yang khusus untuk menandai teks yang berasal dari komputer. Berikut ini beberapa tag yang digunakan untuk memformat teks dari komputer:\n\u0026lt;code\u0026gt; untuk menandai bagian dari kode program; \u0026lt;samp\u0026gt; untuk menandai output dari program komputer; \u0026lt;kbd\u0026gt; untuk menandai tombol keyboard; \u0026lt;var\u0026gt; untuk menandai sebuah variabel; \u0026lt;pre\u0026gt; untuk preformatting teks. Contoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Text Formatting untuk Teks dari komputer\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Text Formatting untuk Teks dari komputer\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Perintah javascript untuk menampilkan teks ke console adalah \u0026lt;code\u0026gt;console.log()\u0026lt;/code\u0026gt;. Kita juga bisa menampilkan isi variabel dengan fungsi ini. Misalkan kita punya variabel \u0026lt;var\u0026gt;name\u0026lt;/var\u0026gt;, maka kode programnya bisa ditulis seperti ini: \u0026lt;pre\u0026gt; var name = \u0026#34;Petani Kode\u0026#34;; console.log(name); \u0026lt;/pre\u0026gt; Maka hasil outputnya: \u0026lt;samp\u0026gt;Petani Kode\u0026lt;/samp\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Untuk menjalankan ulang program, lakukan refresh dengan menekan tombol \u0026lt;kbd\u0026gt;F5\u0026lt;/kbd\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMenggabungkan Format Apakah format teks dapat digabungkan?\nMisalkan kita ingin membuat teks tebal dan garis bawah, apakah bisa?\nTentu saja bisa.\nCaranya:\nYa tinggal dipakai saja tag-tagnya, misal mau menggabungkan bold dengan underline.. maka kita tinggal pakai tag \u0026lt;b\u0026gt; dan \u0026lt;u\u0026gt;.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Penggabungan Format Teks di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Penggabungan Format Teks di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Penggabungan format teks bisa dilakukan dengan menuliskan tag-tag yang akan dipakai. Misalkan \u0026lt;b\u0026gt;\u0026lt;u\u0026gt;tebal dan garis bawah\u0026lt;/u\u0026gt;\u0026lt;/b\u0026gt;, maka kita tinggal pakai tag \u0026lt;b\u0026gt;b\u0026lt;/b\u0026gt; dan tag \u0026lt;b\u0026gt;u\u0026lt;/b\u0026gt;. \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rDalam menggabungkan format, kamu perlu memperhatikan tag mana yang ditulis duluan dan yang terakhir.\nJangan sampai salah menutup..\nYang dibuka duluan, harus ditutup terakhir.\nIngatlah konsep ‚Äúibu memasak ubi‚Äù:\nApa Selanjutnya? Teks formatting akan sering kita pakai dalam membuat konten di web, pastikan kamu mengingat tag-tag yang digunakan untuk teks formatting.\nSelanjutnya silakan pelajari tentang:\nBelajar HTML #07: Membuat Link pada HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\r",
    "permalink": "http://localhost:1313/tutorial/html/html-text-formating/"
  },
  {
    "title": "Tutorial Git #06: Perintah Untuk Membatalkan Revisi",
    "content": "Pada tutorial git 05, kita sudah belajar cara melihat perbedaan di setiap revisi. Sekarang kita akan belajar, cara membatalkan sebuah revisi.\nTerkadang pada perubahan yang kita lakukan terjadi kesalahan dan kita ingin mengembalikannya seperti keadaan sebelumnya. Maka kita perlu menyuruh git untuk mengembalikannya. Ada beberapa perintah yang digunakan di antaranya: git checkout, git reset, dan git revert.\nMembatalkan Perubahan Jika revisi kita belum staged ataupun mengetahui, kita bisa mengembalikannya menggunakan perintah git checkout nama_file.html.\nContoh: Misalkan kita akan mengubah isi dari file index.html pada repositori project-01.\nSebelum diubah:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello Dunia!, Saya sedang belajar Git\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah Diubah:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Hello Dunia!, Saya sudah belajar Git\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Belajar git ternyata cukup menyenangkan\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasil git diff:\n$ git diff diff --git a/index.html b/index.html index c5082e6..115efcb 100644 --- a/index.html +++ b/index.html @@ -5,6 +5,7 @@ \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; - \u0026lt;p\u0026gt;Hello Dunia!, Saya sedang belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Hello Dunia!, Saya sudah belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Belajar git ternyata cukup menyenangkan\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Sekarang kita akan membatalkan perubahan tersebut. Karena kita belum melakukan stage dan commit, maka kita bisa menggunakan perintah:\ngit checkout index.html Perubahan yang baru saja kita lakukan akan dibatalkan. Kalau tidak percaya, coba saja periksa file yang sudah diubah tadi atau cek dengan perintah git status.\n$ git status On branch master nothing to commit, working directory clean Membatalkan Perubahan File yang Sudah dalam Kondisi staged Kondisi staged merupakan kondisi file yang sudah di add (git add), namun belum disimpan (git commit) ke dalam Git.\nSebagai contoh, kita lakukan perubahan lagi di file index.html seperti pada contoh sebelumnya.\n$ git diff diff --git a/index.html b/index.html index c5082e6..c99aa5b 100644 --- a/index.html +++ b/index.html @@ -5,6 +5,7 @@ \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; - \u0026lt;p\u0026gt;Hello Dunia!, Saya sedang belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Hello Dunia!, Saya sudah belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Belajar git ternyata gampang-gampang susah\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Setelah itu, kita ubah kondisi file menjadi staged dengan perintah:\ngit add index.html Cek statusnya dulu:\n$ git status On branch master Changes to be mengetahui: (use \u0026#34;git reset HEAD \u0026lt;file\u0026gt;...\u0026#34; to unstage) modified: index.html Nah, file index.html sudah masuk ke dalam kondisi staged. Untuk mengubahnya menjadi kondisi modified, kita bisa menggunakan perintah git reset.\ngit reset index.html Cek statusnya lagi:\n$ git status On branch master Changes not staged for commit: (use \u0026#34;git add \u0026lt;file\u0026gt;...\u0026#34; to update what will be mengetahui) (use \u0026#34;git checkout -- \u0026lt;file\u0026gt;...\u0026#34; to discard changes in working directory) modified: index.html no changes added to commit (use \u0026#34;git add\u0026#34; and/or \u0026#34;git commit -a\u0026#34;) Sekarang file index.html sudah dalam kondisi modified, kita bisa membatalkan perubahannya dengan perintah git checkout seperti contoh sebelumnya.\ngit checkout index.html Maka perubahan yang kita lakukan akan dibatalkan, üòÑ.\nKeterangan gambar opsional\rMembatalkan Perubahan File yang Sudah dalam Kondisi Committed Sekarang bagaimana kalau filenya sudah dalam kondisi mengetahui dan kita ingin mengembalikannya? Untuk melakukan ini, kita harus mengetahui nomer commit, kemudian mengembalikan perubahannya seperti pada nomer commit tersebut.\nMisalkan, kita ubah kembali file index.html.\n$ git diff diff --git a/index.html b/index.html index c5082e6..3c150a8 100644 --- a/index.html +++ b/index.html @@ -5,6 +5,7 @@ \u0026lt;title\u0026gt;Belajar Git - Project 01\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; - \u0026lt;p\u0026gt;Hello Dunia!, Saya sedang belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Hello Dunia!, Saya sudah belajar Git\u0026lt;/p\u0026gt; + \u0026lt;p\u0026gt;Belajar Git Greget!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Kemudian kita melakukan commit.\ngit add index.html git commit -m \u0026#34;belajar git greget!\u0026#34; Sekarang kita akan melihat nomer commit dengan perintah git log.\nKeterangan gambar opsional\rKita akan mengembalikan kondisi file index.html, seperti pada commit sebelumnya. Maka kita bisa menggunakan perintah:\ngit checkout b05f7d05c9298f2cd11b870369f3cf4b2350eca7 index.html Seperti mesin waktu, kita sudah mengembalikan keadaan file index.html seperti keadaan saat commit tersebut. Namun, saat ini kondisi index.html dalam keadaan staged. Kita bisa kembalikan ke dalam kondisi modified dengan perintah git reset.\ngit reset index.html Pada contoh tersebut, kita sudah berhasil mengembalikan file index.html ke dalam keadaan seperti commit sebelumnya.\nApabila kita ingin mengembalikan seluruh file dalam commit, kita cukup melakukan checkout ke nomer commit saja, tanpa diikuti nama file. Contoh:\ngit checkout ac6d798f98bac5fad693ef8159f957c5b0805c23 Catatan\rPerintah ini akan mengembalikan semua file dalam kondisi pada nomer commit yang diberikan, namun bersifat temporer. Kembali ke 3 Commit Sebelumnya Untuk kembali ke 3 commit sebelumnya, kita bisa menggunakan perintah berikut.\ngit checkout HEAD~3 index.html Mebatalkan Semua Perubahan yang ada Jika kita ingin mengembalikan semua file ke suatu commit, kita bisa melakukannya dengan perintah:\ngit revert -n \u0026lt;nomer commit\u0026gt; contoh:\ngit revert -n 2400ba0e258bd6a144caa273012b130d6baa5e42 Akhir Kata OK, sekian dulu tutorial ke-6 ini. Rasanya agak kepanjangan. Terima kasih sudah membaca. Sampai jumpa di tutorial ke-7.\n",
    "permalink": "http://localhost:1313/tutorial/git/git-revert/"
  },
  {
    "title": "Belajar Hugo #6: Workflow Deployment Hugo dengan GitHub Actions",
    "content": "Apa itu Workflow? Workflow di GitHub Actions adalah alur otomatis yang berjalan saat ada event tertentu, misalnya:\nPush ke branch main Pull Request dibuka Manual dispatch Contoh Basic Workflow untuk Hugo + Tailwind CSS Buat file di .github/workflows/deploy.yml:\nname: Build and Deploy Hugo Site on: push: branches: [\u0026#34;main\u0026#34;] workflow_dispatch: permissions: contents: read pages: write id-token: write jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#39;0.147.9\u0026#39; extended: true - name: Setup Node.js uses: actions/setup-node@v4 with: node-version: \u0026#39;20\u0026#39; - name: Install Dependencies run: npm ci - name: Build Tailwind + Hugo run: hugo --minify - name: Upload Pages Artifact uses: actions/upload-pages-artifact@v3 with: path: ./public deploy: runs-on: ubuntu-latest needs: build environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} steps: - name: Deploy to GitHub Pages uses: actions/deploy-pages@v4 File yang Perlu Ada package.json ‚ûî Tailwind + PostCSS setup config.toml ‚ûî BaseURL sesuai GitHub Pages public/ ‚ûî Hasil build Hugo .github/workflows/deploy.yml ‚ûî Workflow CI/CD Best Practice ‚úÖ Simpan workflow di branch main ‚úÖ Cek hasil build di tab Actions ‚úÖ Gunakan hugo \u0026ndash;minify untuk versi production ‚úÖ Pastikan URL di config.toml sudah benar Deployment Otomatis: ‚úÖ Push ke main ‚ûî GitHub Actions jalan otomatis ‚úÖ Website langsung live di GitHub Pages Info: üöÄ Dengan workflow ini, kamu tidak perlu deploy manual lagi. Cukup commit dan push ‚Äî Hugo + Tailwind langsung build \u0026amp; deploy otomatis!\nNext Step: Note: üî• Mau lanjut ke Branching \u0026amp; Pull Request Workflow?\n",
    "permalink": "http://localhost:1313/tutorial/hugo/workflow-deployment-github-actions/"
  },
  {
    "title": "Belajar HTML #07: Cara Membuat Link untuk Menghubungkan Halaman Web",
    "content": "Apa jadinya web tanpa ada link?\nKamu bisa bayangkan gak?\nMisalkan:\nIa ingin mebukan halaman about, makan harus mengetik:\nhttp://localhost:1313/about.html/ Lalu ia ingin beralih ke halaman Contact, maka harus mengetik lagi:\nhttp://localhost:1313/contact.html/ Ribet! üò´\nKarena itu, kita membutuhkan link.\nNah, pada tutorial ini..\n..kita akan belajar cara membuat link di HTML.\nMari kita mulai!\nApa itu Link di HTML? Link atau Hyperlink adalah elemen HTML yang berfungsi menghubungkan suatu halaman web ke halaman web yang lain.\nElemen ini bisa diklik.. dan nanti akan membuka halaman lain sesuai alamat URL yang diberikan.\nGambar contoh dengan zoom\rTidak hanya untuk menghubungkan halaman, link juga punya fungsi lain seperti scroll top, download file, menjalankan fungsi javascript, dll.\nNanti kita akan bahas ini lebih dalam..\nNah! sekarang, bagaimana cara membuat link di HTML?\nSilakan lanjutkan membaca:\nCara Membuat Link di HTML Link pada HTML dapa dibuat dengan tag \u0026lt;a\u0026gt;, kemudian tag ini harus memiliki atribut href untuk menentukan alamat URL tujuan dari link.\nBentuk sederhananya seperti ini:\nGambar contoh dengan zoom\rContoh: link.html\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Untuk lebih lengkapnya, silakan buka: \u0026lt;a href=\u0026#34;about.html\u0026#34;\u0026gt;About us\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rLink akan ditampilkan dengan warna biru dan garis bawah. Ini adalah style standar dari setiap browser.\nTentu saja ini bisa kita ubah-ubah sesuai selera.\nNanti kita akan bahas caranya ya..\nNah sekarang coba klik link tersebut!\nGambar contoh dengan zoom\rLha! Kok error?\nLink yang kita buat ini akan membuka halaman about.html, tapi file ini belum kita buat atau belum ada. Karena itu, pasti error.\nUntuk mengatasi ini, kita harus membuat file about.html dan disimpan dalam satu folder dengan file link.html.\nGambar contoh dengan zoom\rIsi file about.html seperti ini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;About us\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; Ini adalah website yang dibuat dengan link. Kamu bisa membuka halaman dengan mudah. Tinggal klik-klik saja! \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;link.html\u0026#34;\u0026gt;Kembali ke halaman link\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Nah, sekarang mari kita coba lagi:\nGambar contoh dengan zoom\rYap!\nHalaman link.html dan about.html berhasil terhubung.\nTapi tunggu dulu..\nMengapa alamat URL pada atribut href ditulis dengan nama file?\nBukannya harus alamat URL lengkap yang pakai http bla bla?\nIni karena link yang kita buat adalah internal link dan juga file about.html masih dalam satu folder dengan file link.html. Jadi boleh menuliskan langsung nama filenya, tanpa harus lengkap dengan http.\nUntuk lebih jelasnya, mari kita pelajari jenis-jenis link dalam HTML.\nJenis-jenis Link pada HTML Berdasarkan alamat URL yang dituju, link pada HTML dibagi menjadi dua kelompok:\nInternal Link: adalah link yang menuju ke domain atau halaman web itu sendiri; Gambar contoh dengan zoom\rExternal Link: adalah link yang menuju domain lain. Gambar contoh dengan zoom\rInternal link biasanya digunakan untuk menghubungkan halaman yang satu dengan yang lainnya dalam satu website atau domain.\nSementara untuk eksternal link, digunakan untuk membuka web atau domain lain. Misalnya seperti: membuka halaman facebook, membuka chat whatsapp, membuka youtube, dan sebagainya.\nIntinya:\nSelama link itu membuka web lain, maka ia adalah external. Tapi kalau tetap membuka web itu sendiri maka itu internal.\nBiar lebih jelas, mari kita coba membuatnya di HTML:\n1. Contoh Internal Link Buatlah file bernama index.html kemudian isi dengan kode berikut:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Selamat Datang\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34; \u0026gt;Home\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;contact.html\u0026#34; \u0026gt;Contact\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;about.html\u0026#34; \u0026gt;About\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt; Selamat datang di websiteku. Coba klik menu di atas, maka kamu akan membuka halaman yang berbeda. Semua link di atas adalah internal link. \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div\u0026gt;Copyright \u0026amp;copy; 2020 by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Kemudian buat lagi file baru bernama contact.html dengan isi sebagai berikut:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Contact\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34; \u0026gt;Home\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;contact.html\u0026#34; \u0026gt;Contact\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;about.html\u0026#34; \u0026gt;About\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt; Kamu bisa menghubungi saya melalui nomer WA: 0871111111 atau juga alamat email: mail@contoh.com. \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div\u0026gt;Copyright \u0026amp;copy; 2020 by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Terakhir, buat file about.html dengan isi sebagai berikut:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;About\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34; \u0026gt;Home\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;contact.html\u0026#34; \u0026gt;Contact\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;about.html\u0026#34; \u0026gt;About\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt; Ini adalah halaman about dari website saya. Jadi ini adalah contoh cara membuat link internal di HTML. \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div\u0026gt;Copyright \u0026amp;copy; 2020 by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Pastikan semua file ini disimpan dalam satu folder.\nGambar contoh dengan zoom\rSetelah itu, coba buka index.html dengan browser.\nMaka hasilnya:\nGambar contoh dengan zoom\r2. Contoh External Link Cara membuat eksternal link sebenarnya sama saja seperti internal link. Perbedaannya terletak pada alamat URL yang diberikan.\nSebagai contoh.. ini adalah eksternal link yang menuju halaman facebook:\n\u0026lt;a href=\u0026#34;https://gitkodachi.github.io/\u0026#34;\u0026gt;Github gitkodachi\u0026lt;/a\u0026gt; Hasilnya: Contoh Link External\r\u0026ldquo;Github gitkodachi\u0026rdquo;\rPada link tersebut, kita memberikan alamat URL whatsapp dan nantinya akan membuka halaman tersebut. Ini juga bisa disebut eksternal link, karena ia akan membuka halaman whatsapp.\nOh iya, di sana kita berikan parameter berupa nomer hp dan juga teks.\nNah, biar lengkap.. kita akan coba tambahkan eksternal link pada file contact.html.\nSilakan buka file contact.html kemudian ubah kodenya menjadi seperti ini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Contact\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34; \u0026gt;Home\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;contact.html\u0026#34; \u0026gt;Contact\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;about.html\u0026#34; \u0026gt;About\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt; Kamu bisa menghubungi saya melalui nomer WA: \u0026lt;a href=\u0026#34;https://api.whatsapp.com/send?phone=6287111\u0026amp;text=Hi\u0026#34;\u0026gt;+6287111\u0026lt;/a\u0026gt; atau juga alamat email: mail@contoh.com. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Jangan lupa follow juga fan page saya ya: \u0026lt;a href=\u0026#34;https://www.facebook.com/petanikode\u0026#34;\u0026gt;Petani Kode\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div\u0026gt;Copyright \u0026amp;copy; 2020 by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nTes buka link Facebook:\nGambar contoh dengan zoom\rTest buka link whatsapp:\nGambar contoh dengan zoom\rSudah paham tentang eksternal link?\nOke, sekarang lanjut belajar atribut:\nAtribut-atribut untuk Link Selain atribut href terdapat juga beberapa atribut yang sering ditambahkan pada link, seperti: target, title, rel, style, dan lain-lain.\nMenggunakan Atribut target Atribut ini berfungsi untuk menentukan target dari pembukaan link. Ada beberapa target yang biasanya digunakan:\n_blank akan membuka link pada jendela atau tab baru; _self akan membuka link pada halaman itu sendiri (default target); _top menuju bagian paling atas pada halaman; _parent membuka link pada frame induk; nama-frame akan membuka link pada \u0026lt;iframe\u0026gt; dengan nama tertentu; Contoh:\n\u0026lt;a href=\u0026#39;https://www.facebook.com/gitkodachi\u0026#39; target=\u0026#39;_blank\u0026#39;\u0026gt;Facebook\u0026lt;/a\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rSaat link tersebut diklik, browser akan membuka tab baru. Ini karena kita memberikan atribut target dengan nilai _blank.\nBerikutnya, kita akan mencoba menampilkan link ke dalam sebuah frame.\nBuatlah file baru bernama link-frame.html, kemudian isi kodenya seperti ini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;https://www.petanikode.com\u0026#34; target=\u0026#34;myframe\u0026#34;\u0026gt;Sebuah Link\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;!-- Frame yang akan menjadi target link --\u0026gt; \u0026lt;iframe name=\u0026#34;myframe\u0026#34; width=\u0026#34;600\u0026#34; height=\u0026#34;400\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMenggunakan Atribut title Atribut ini berfungsi untuk membuat tooltips. Tooltips adalah informasi tambahan yang akan tampil saat link disentuh pointer atau saat kita menahan tap di hp.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Untuk lebih lengkapnya, silakan buka: \u0026lt;a href=\u0026#34;about.html\u0026#34; title=\u0026#34;Menuju ke halaman about\u0026#34;\u0026gt;About us\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rLive Demo\rUntuk lebih lengkapnya, silakan buka: About us\rCara Mengubah Warna Link di HTML Warna default link adalah biru, ini bisa kita ubah dengan style CSS. Warna bisa kita berikan untuk teks dan latar belakang (background).\nCaranya:\nTambahkan atribut style kemudian isi dengan style css untuk mengubah warna, yakni color (untuk teks) dan background-color (untuk latar).\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Selamat Datang\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34; style=\u0026#34;color:red\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;contact.html\u0026#34; style=\u0026#34;color:green\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;about.html\u0026#34; style=\u0026#34;color:deeppink;\u0026#34;\u0026gt;About\u0026lt;/a\u0026gt; | \u0026lt;a href=\u0026#34;download.html\u0026#34; style=\u0026#34;color:white;background-color: orange;\u0026#34;\u0026gt;Download\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt; Selamat datang di websiteku. Coba klik menu di atas, maka kamu akan membuka halaman yang berbeda. Semua link di atas adalah internal link. \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;div\u0026gt;Copyright \u0026amp;copy; 2020 by Petani Kode\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasailnya:\nGambar contoh dengan zoom\rFungsi Menarik Lainnya dari Link Seperti yang saya bilang sebelumnya.. link tidak hanya digunakan untuk menghubungkan halaman web saja.\nIa juga bisa digunakan untuk beberapa fungsi tertentu seperti:\nMembuat Link Buntu Link buntu adalah link yang tidak akan membuka apa-pun. Ia biasanya digunakan sebagai placeholder atau sampel saja.\nCara membuatnya:\nTambahkan tanda pagar atau tanda pagar dan tanda seru pada atribut href.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;Link Buntu\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#!\u0026#34;\u0026gt;Link Buntu 2\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPerhatikan!\nPada contoh tersebut kita mengisi URL-nya dengan tanda pagar. Arti tanda pagar pada URL sebenarnya adalah anchor (jangkar).\nJangkar ini nantinya akan membawa kita ke lokasi tertentu di dalam dokumen HTML. Jika hanya diisi pagar saja, maka ia tidak akan kemana-mana.\nMembuat Link Anchor Link anchor adalah link yang menuju ke suatu elemen tertentu. Cara kerjanya seperti saat kita mengaitkan jangkar, lalu ditarik ke sana. Karena itu, dia dinamakan anchor.\nGambar contoh dengan zoom\rCara membuat link anchor adalah dengan mengisi alamat URL dengan tanda pagar (#), lalu diisi dengan nama id dari elemen yang akan dituju.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Contoh Link Anchor\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Ini adalah contoh link anchor. Coba klik link ini: \u0026lt;a href=\u0026#34;#penutup\u0026#34;\u0026gt;Meluncur ke Penutup\u0026lt;/a\u0026gt; maka kamu akan dibawa ke bagian penutup dari dokumen ini. \u0026lt;/p\u0026gt; \u0026lt;h2\u0026gt;Apa itu Jangkar?\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Anchor dalam bahasa indonesia artinya jangkar. Saya yakin kamu pasti pernah melihat jangkar. Fungsi jangkar untuk menahan kapal agar tidak hanyut. Tapi dalam HTML, fungsinya untuk membuat link yang bisa membawa kita meluncur ke tujuan jangkar itu. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Jangkar atau anchor di HTML tidak hanya bisa digunakan pada satu dokumen saja. Ia juga bisa digunakan untuk membuka dokumen lain, lalu mengaitkan jangkarnya. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; Jangkar biasanya dibuat dengan tanda pagar (#) lalu diikuti dengan nama id dari elemen yang ingin dituju. Contohnya #penutup, maka link yang menggunakan anchor tersebut akan mencari elemen HTML yang memiliki id `penutup` dan membawa kita ke sana. Kira-kira begitulah cara kerjanya. \u0026lt;/p\u0026gt; \u0026lt;h2 id=\u0026#34;penutup\u0026#34;\u0026gt;Akhir Kata..\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt; Ini adalah penutup dari artikel ini, dan coba perhatikan headingnya. Di sana kita menggunakan id=\u0026#34;penutup\u0026#34;. Maka elemen ini akan menjadi tujuan dari anchor link. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;#top\u0026#34;\u0026gt;Kembali ke Atas!\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rKalau kita perhatikan, disana kita menggunakan #top sebgail URL\n\u0026lt;a href=\u0026#34;#top\u0026#34;\u0026gt;Kembali ke Atas!\u0026lt;/a\u0026gt; Sedangkan elemen yang memiliki id=\u0026quot;top\u0026quot;, tidak ada di dalam HTML yang kita tulis.\nMengapa link anchor ini bisa menuju ke atas?\nIni karena browser sudah paham, jika ada link anchor yang menuju ke #top maka ia akan dibawa ke bagian teratas dari dokumen.\nGambar contoh dengan zoom\rMembuat Link untuk Memanggil Fungsi Javascript Link dapat juga digunakan untuk memanggil fungsi Javascript.\nPemanggilan fungsi Javascript biasanya dilakukan dengan atribut even seperti onclick, onmouseover, onmouseout, dan sebagainya.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; onclick=\u0026#34;alert(\u0026#39;Hello World!\u0026#39;)\u0026#34;\u0026gt;Jalankan JS\u0026lt;/a\u0026gt; \u0026lt;br\u0026gt; \u0026lt;a href=\u0026#34;#!\u0026#34; onmouseover=\u0026#34;alert(\u0026#39;link sudah kamu sentuh!\u0026#39;)\u0026#34;\u0026gt;Coba Sentuh Link ini\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rSebenarnya hampir semua elemen bisa menjalankan fungsi Javascript dengan atribut event.\nNah, khusus untuk link. Dia bisa juga menjalankan fungsi Javascript melalui atribut href atau URL.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;javascript:alert(\u0026#39;Hello World!\u0026#39;)\u0026#34;\u0026gt;Jalankan JS\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya akan sama seperti contoh sebelemenya. Membuat Link dengan Gambar Membuat gambar sebagai link kadang sering dilakukan dalam web. Cara membuatnya sangat mudah, kita hanya perlu membungkus tag \u0026lt;img\u0026gt; dengan tag \u0026lt;a\u0026gt;.\nContoh:\n\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;https://www.petanikode.com/img/logo.svg\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt; Membuat Link Untuk Mengirim Email Link kadang juga digunakan untuk mengirim email.\nCara membuatnya:\nUbah URL tujuan dari link dengan mailto, lalu diikuti dengan alamat email yang akan menerima email.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Tutorial Link di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt; Info lebih lanjut: \u0026lt;a href=\u0026#34;mailto:tes@contoh.com\u0026#34; title=\u0026#34;kirim email ke Admin\u0026#34;\u0026gt;Hubungi Saya\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gambar contoh dengan zoom\rJika kamu membukanya di Google Chrome, maka ia akan membuka Gmail. Tapi jika dibuka di Firefox, ia akan memilih aplikasi email yang tersedia di komputer.\nApa Selanjutnya? Nah, sampai di sini dulu tutorial pertama ini..\nJika ada yang belum jelas, bisa ditanyakan melalui komentar.\nBerikutnya silakan pelajari tentang definisi tag, elemen, dan atribut:\nBelajar HTML #08: Mengenal tag, elemen, dan atribut dalam HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\r",
    "permalink": "http://localhost:1313/tutorial/html/html-link/"
  },
  {
    "title": "Tutorial Git #07: Menggunakan Percabangan untuk mencegah Konflik",
    "content": "Bayangkan anda sedang bekerja dengan tim pada suatu repositori Git. Repositori ini dikerjakan secara bersama-sama.\nKadang‚Ä¶ akan terjadi konflik, karena kode yang kita tulis berbeda dengan yang lain.\nMisalnya, Si A menulis kode untuk fitur X dengan algoritma yang ia ketahui. Sedangkan si B menulis dengan algoritma yang berbeda.\nLalu mereka melakukan commit, dan kode sumber jadi berantakan. Anggota tim yang lain menjadi pusing.\nGambar contoh dengan zoom\rAgar tidak terjadi hal yang seperti ini, kita harus membuat cabang (branch) tersendiri.\nMisalnya, si A akan mengerjakan fitur X, maka dia harus membuat cabang sendiri. Si A akan bebas melakukan apapun di cabangnya tanpa mengganggu cabang utama (master).\nCara Membuat Cabang Baru Perintah untuk membuat cabang adalah git branch, kemudian diikuti dengan nama cabangnya.\nContoh:\ngit branch fitur_register Maka Git akanmembuat cabang bernama fitur_register.\nGambar contoh dengan zoom\rSekarang setiap orang memiliki cabangnya masing-masing. Mereka bebas bereksperimen.\nUntuk melihat cabang apa saja yang ada di repositori, gunakan perintah git branch.\nContoh:\n$ git branch halaman_login * master Tanda bintang (*) artinya cabang yang sedang aktif atau Kita sedang berada di sana.\nLatihan Untuk memantapkan pemahaman tentang percabangan Git, mari kita coba praktik.\nPada repositori, buatlah sebuah cabang baru.\ngit branch halama_login Setelah itu, pindah ke cabang yang baru saja kita buat dengan perintah:\ngit checkout halaman_login Lalu tambahkan file login.html, isinya terserah anda.\nGambar contoh dengan zoom\rCatatan\r\u0026ldquo;Jangan lupa untuk menggunakan perintah git status untuk melihat status repositori.\u0026rdquo;\rKita sudah menambahkan file login.html. Selanjutnya kita lakukan commit.\ngit add login.html git commit -m \u0026#34;membuat file login.html\u0026#34; Bagus! revisi kita pada cabang halaman_login sudah disimpan. Sekarang coba kembali ke cabang master.\ngit checkout master Apakah anda menemukan file login.html?\nPasti tidak!\nSekarang kembali lagi ke cabang halaman_login.\ngit checkout halaman_login Cek lagi, apakah sekarang file login.html sudah ada?\nproject-01/ ‚îú‚îÄ‚îÄ index.html ‚îî‚îÄ‚îÄ login.html Ternyata ada. Yep! kita bisa mengambil kesimpulan, kalau perubahan pada cabang halaman_login tidak akan berpengaruh di cabang master.\nMenggunakan Cabang Anggaplah kita sudah selesai membuat fitur login di cabang halaman_login. Sekarang kita ingin Menggabungkannya dengan cabang master (utama).\nPertama, kita harus pindah dulu ke cabang master.\ngit checkout master Setelah itu, barulah kita bisa menggabungkan dengan perintah git merge.\ngit merge halaman_login Sekarang lihat, file login.html sudah ada di cabang master.\nGambar contoh dengan zoom\rMengenai Bentrok Bentrok biasanya terjadi jika ada dua orang yang mengedit file yang sama.\nKenapa bisa begitu, ‚Äòkan mereka sudah punya cabang masing-masing?\nBisa jadi, di cabang yang mereka kerjakan ada file yang sama dengan cabang lain. Kemudian, saat digabungkan terjadi bentrok.\nMengatasi bentrok adalah tugas dari pemilik atau pengelola repositori. Dia harus bertindak adil, kode mana yang harus diambil.\nBiasanya akan ada proses diskusi dulu dalam mengambil keputusan.\nBaiklah, sekarang kita akan coba membuat bentrokan üòÑ.\nPindah dulu ke branch halaman_login‚Ä¶\ngit checkout halaman_login Setela itu, edit file login.html atau index.html, karena kedua file tersebut ada di kedua cabang yang akan kita gabungkan.\n$ git diff diff --git a/login.html b/login.html index 23a3f5c..eea5658 100644 --- a/login.html +++ b/login.html @@ -1 +1 @@ -di sini berisi kode untuk halaman login +\u0026lt;p\u0026gt;di sini berisi kode untuk halaman login\u0026lt;p\u0026gt; Setelah itu, lakukan commit lagi:\ngit add login.html git commit -m \u0026#34;ubah isi login.html\u0026#34; Selanjutnya pindah ke cabang master dan lakukan perubahan juga di cabang ini. Ubah file yang sama seperti di cabang halaman_login.\nSetelah itu, lakukan commit di cabang master\ngit add login.html git commit -m \u0026#34;ubah isi login.html di cabang master\u0026#34; Terakhir, coba gabungkan cabang halaman_login dengan cabang master, maka akan terjadi bentrok.\n$ git merge halaman_login Auto-merging login.html CONFLICT (content): Merge conflict in login.html Automatic merge failed; fix conflicts and then commit the result. Nah, kita disuruh perbaiki kode yang bentrok. Sekarang buka login.html dengan teks editor.\nGambar contoh dengan zoom\rKedua kode cabang dipisahkan dengan tanda ======. Sekarang.. tugas kita adalah memperbaikinya.\nSilakan eliminasi salah satu dari kode tersebut.\nGambar contoh dengan zoom\rSetelah itu lakukan commit untuk menyimpan perubahan ini.\ngit add login.html git commit -m \u0026#34;perbaiki konflik\u0026#34; Bagus! bentrokan antar ormas programmer sudah beres üòÑ.\nMenghapus Cabang Cabang yang sudah mati atau tidak ada pengembangan lagi, sebaiknya dihapus.\nAgar repositori kita bersih dan rapi.\nCara menghapus cabang, gunakan perintah git branch dengan argumen -d dan diikuti dengan nama cabangnya.\nContoh:\ngit branch -d halaman_login Akhir Kata‚Ä¶ Sekian tutorial ini. Semoga ada manfaatnya.\nSumber: PetaniKode\r",
    "permalink": "http://localhost:1313/tutorial/git/git-branch/"
  },
  {
    "title": "Tutorial Git #08: Perbedaan Git checkout, Git Reset, dan Git Revert",
    "content": "Pada tutorial ke-6, kita sudah membahas cara membatalkan revisi menggunakan perintah git checkout, git reset, dan git revert.\nSekilas, tiga perintah tersebut melakukan hal yang sama. Akan tetapi ada perbedaannya.\nApa itu?\nMari kita bahas‚Ä¶\nGit Checkout Perintah git checkout seperti mesin waktu, kita bisa kembalikan kondisi file proyek seperti waktu yang dituju.\nMisalnya:\ngit checkout 06f735af7724558164c87f6b1ce3ca7778eb1c1b Maka semua file akan dikembalikan seperti keadaan pada nomer commit tersebut.\nKeterangan gambar opsional\rAkan tetapi, ini bersifat temporer (sementara). Pengembalian ini tidak disimpan dalam database Git.\nTips\r\u0026ldquo;Untuk kembali dari masa lalu gunakan perintah: git checkout master\u0026rdquo; Selain itu juga, perintah ini digunakan untuk berpindah dan membuat cabang. Ini bisa kita gunakan untuk membuat perubahan baru berdasarkan kode di masa lalu.\nContoh:\nMisalnya kita ingin membuat cabang baru berdasarkan kondisi kode di masa lalu, maka kita bisa menggunakan perintah:\ngit checkout -b nama_cabang \u0026lt;nomer_commit\u0026gt; Maka nanti cabang baru akan terbentuk dari commit sebelumnya.\nKeterangan gambar opsional\rCara ini bisa kita ibaratkan seperti menulis cerita baru dengan plot yang berbeda.\nGit Reset Perintah git reset sering disebut sebagai perintah berbahaya yang dapat menghancurkan catatan sejarah perubahan.\nHati-hati! Perintah ini membuat kita tidak bisa kembali lagi ke masa depan. Mau tidak mau, kita harus menulis ulang sejarah.\nKeterangan gambar opsional\rPerintah ini memiliki tiga argumen atau opsi utama, yaitu \u0026ndash;soft, \u0026ndash;mixed, dan \u0026ndash;hard.\n\u0026ndash;soft akan mengembalikan dengan kondisi file dalam keadaan staged. \u0026ndash;mixed akan mengembalikan dengan kondisi file dalam keadaan modified. \u0026ndash;hard akan mengembalikan dengan kondisi file dalam keadaan committed. Contoh penggunaan:\ngit reset --soft 06f735af7724558164c87f6b1ce3ca7778eb1c1b Maka kita akan dikebalikan dengan file dalam keadaan staged.\nKeterangan gambar opsional\rCoba periksa catatan perubahan dengan perintah git log, pasti ada yang hilang dan kita tidak akan bisa kembali lagi ke masa depan. Ini seperti melakukan Re:Zero üòÑ.\nHati-hati\r\u0026ldquo;Jangan lakukan git reset pada repositori yang sudah di bagikan ke publik, karena dapat merusaknya.\u0026rdquo; Git Revert Revert artinya mengembalikan. Perintah ini lebih aman daripada git reset, karena tidak akan menghapus catatan sejarah revisi.\nRevert akan akan mengambil kondisi file yang ada di masa lalu, kemudian menggabungkannya dengan commit terakhir.\nKeterangan gambar opsional\rMasih belum paham?\nMari kita coba lakukan sedikit eksperimen‚Ä¶\nSebelumnya, berikut ini adalah kondisi repositori yang dijadikan bahan percobaan.\nKeterangan gambar opsional\rAda empat commit di sana, kemudian kita ingin melakukan revert ke commit ke-2.\nKeterangan gambar opsional\rTerjadi error, karena ada file yang bentrok.\nKeterangan gambar opsional\rSilakan atasi konflik ini, setelah itu lakukan commit.\nKeterangan gambar opsional\rNah, sekarang kita sudah punya lima catatan revisi/commit di dalam repositori.\nKesimpulan Perintah git checkout mengembalikan file dalam kondisi sebelumnya, tapi bersifat sementara. Perintah git reset, akan mengembalikan file ke kondisi sebelumnya, kemudian menghapus catatan sejarah commit berikutnya. Perintah git revert mengembalikan file dengan tidak menghapus sejarah commit. Kira-kira seperti itulah perbedaan perintah git checkout, git reset, dan git revert.\nReferensi:\nhttp://stackoverflow.com/a/4114122 https://www.atlassian.com/git/tutorials/undoing-changes ",
    "permalink": "http://localhost:1313/tutorial/git/git-checkout-reset-revert/"
  },
  {
    "title": "Belajar HTML #08: Cara Menampilkan Gambar di HTML",
    "content": "Website tanpa gambar = membosankan.\nSetuju?\nYa saya juga setuju.\nGambar akan membuat website kita terlihat lebih menarik. Karena otak kita lebih mudah menyerap informasi dengan visual dibandingkan hanya teks saja.\nKarena itu, gambar sangatlah penting.\nPada tutorial ini, kita akan belajar cara menambahkan gambar di HTML.\nMari kita mulai..\nMenambahkan Gambar di HTML Gambar dapat kita tambakan di HTML dengan menggunakan tag \u0026lt;img\u0026gt;. Tag ini memiliki atribut wajib, yakni src.\nJika kita tidak mengisi atribut src, maka gambar tidak akan ditampilkan.\nGambar contoh dengan zoom\rAlamat URL gambar pada atribut src dapat berupa URL maupun alamat path. Lalu tag \u0026lt;img\u0026gt; harus ditutup dengan menambahkan garis miring.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;sawah.jpg\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPerhatikan!\nPada contoh di atas, kita menulisakan langsung nama file dari gambar. Ini karena manaruh gambar di dalam folder yang sama dengan file HTML\u0026hellip;\nGambar contoh dengan zoom\rApabila file gambarnya tersimpan di folder yang berbeda, maka kita hanya perlu menuliskan alamat path-nya.\nMisalkan, kita akan menyimpan gambar di dalam folder images.\nGambar contoh dengan zoom\rMaka di HTML, kita bisa tulis seperti ini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Maka akan sama seperti contoh di atas.\nGambar contoh dengan zoom\rLalu bagaimana kalau gambarnya berada di internet atau website lain?\nNah, jika kita menggunakan gambar dari website lain..\n..kita harus menuliskan alamat URL lengkap dari gambar tersebut.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar Candi Borobudur:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Borobudur_Temple.jpg/320px-Borobudur_Temple.jpg\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rGampang kan?\nNah, berikutnya kita akan pelajar format gambar apa saja yang bisa digunakan di HTML dan juga atribut lainnya untuk \u0026lt;img\u0026gt;.\nSilakan lanjutkan..\nFormat File Gambar untuk HTML Tidak semua format file gambar dapat ditampilkan di HTML. Karena tiap file gambar memiliki tujuan masing-masing.\nMisalnya file gambar dengan format PSD, ia adalah file gambar untuk PhotoShop. Jelas ini tidak akan bisa ditampilkan di HTML.\nLalu, format apa saja yang didukung oleh HTML?\nBerikut ini daftar beberapa format gambar yang sering digunakan dalam web:\nNama Format Nama Panjang Ekstensi APNG Animated Portable Network Graphics .apng GIF Graphics Interchange Format .gif ICO Microsoft Icon .ico, .cur JPEG Joint Photographic Expert Group image .jpg, .jpeg, .jfif, .pjpeg, .pjp PNG Portable Network Graphics .png SVG Scalable Vector Graphics .svg WebP Web Picture .webp Format file ini juga akan bergantung pada versi browser yang digunakan.\nKita ambil contoh format WebP, ini adalah format file gambar baru yang dikembangkan oleh Google. Jika kita menggunakan browser versi lama, gambar ini tidak akan bisa ditampilkan.\nAtribut untuk Tag \u0026lt;img\u0026gt; Ada beberapa atribut yang sering digunakan pada tag \u0026lt;img\u0026gt;:\nalt untuk teks alternatif untuk gambar; width untuk menentukan lebar gambar; height untuk menentukan tinggi gambar; style untuk menentukan style CSS untuk gambar. Mari kita coba satu per satu..\nAtribut alt Atribut alt adalah atribut untuk memberikan teks alternatif pada gambar saat gambar gagal ditampilkan.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar Candi Borobudur:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;\u0026#34; alt=\u0026#34;Candi Borobudur\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPada contoh tersebut, kita sengaja mengosongkan nilai atribut src. Akibatnya gambar gagal ditampilkan dan yang akan ditampilkan adalah teks alternatif.\nApakah kita wajib menggunakan atribut alt?\nSebenarnya tidak wajib, tapi sebaiknya tetap menggunakan atribut ini. Karena, nantinya teks alternatif akan dibaca oleh screen reader.\nScreen reader adalah aplikasi pembaca yang digunakan oleh tuna netra agar bisa mengetahui informasi yang ada di komputer.\nSelain itu, atribut alt juga sering digunakan untuk meletakan kata kunci untuk SEO.\nAtribut width dan height Atribut width dan height adalah atribut yang digunakan untuk menentukan lebar dan tinggi dari gambar.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; width=\u0026#34;200\u0026#34; height=\u0026#34;150\u0026#34; alt=\u0026#34;Sawah\u0026#34;/\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; width=\u0026#34;150\u0026#34; height=\u0026#34;100\u0026#34; alt=\u0026#34;Sawah\u0026#34;/\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; width=\u0026#34;50\u0026#34; height=\u0026#34;50\u0026#34; alt=\u0026#34;Sawah\u0026#34;/\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rSatuan yang digunakan untuk nilai width dan height adalah piksel (px). Jika kita memberikan nilai 200, artinya.. kita memberikan nilai 200px.\nAtribut width dan height juga tidak wajib. Tapi baiknya ditambahkan agar ukuran gambar konsisten.\nAtribut style Atribut style merupakan atribut untuk menambahkan style CSS pada sebuah elemen. Atribut ini sering digunakan pada gambar untuk memberikan style atau efek tertentu.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Style Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; style=\u0026#34;width: 160px;border: 3px solid red;\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; style=\u0026#34;width: 160px;border-radius: 10px;\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; style=\u0026#34;width: 100px;height: 100px;border-radius: 100%;\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPerhatikan gambar di atas ‚òùÔ∏è..\nGambar pertama kita berikan style garis (border) dengan ukuran 3px, jenis solid, dan warnanya adalah merah.\nLalu gambar kedua, kita berikan style border-radius untuk menciptakan lengkungan pada pojok gambar.\nPada gambar ketiga, kita berikan nilai 100% pada border-radius yang akan menciptakan lingkaran.\nMebuat Gambar Background Sebenarnya ini sudah masuk ke dalam pembahasan tentang CSS, tapi tidak apa-apa kita bahas di sini.\nAgar gambar bisa ditampilkan sebagai background, maka kita harus menggunakan CSS dengan atribut background-image lalu diisi dengan URL dari gambar.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;background-image: url(images/sawah.jpg);\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Background dengan Gambar\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Halaman ini menggunakan gambar sebagai background\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rMembuat Link dengan Gambar Membuat gambar sebagai link pernah kita bahas di Tutorial membuat link di HTML, tapi tidak apa-apa.. kita akan bahas lagi biar semakin paham.\nBaiklah‚Ä¶\nCara membuat link dengan gambar adalah dengan menggabungkan tag \u0026lt;a\u0026gt; dan tag \u0026lt;img\u0026gt;. Tag \u0026lt;a\u0026gt; harus mengapit tag \u0026lt;img\u0026gt;.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Gambar Sebagai Link\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Coba klik gambar ini:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;https://www.petanikode.com\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; width=\u0026#34;160\u0026#34;/\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nBrowser tidak mendukung video HTML5.\rMembuat Link pada Bagian Gambar Link dapat kita buat pada bagian tertentu pada gambar dengan menggunakan tag \u0026lt;map\u0026gt; dan \u0026lt;area\u0026gt;.\nContoh1\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Gambar Sebagai Link\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Coba sentuh dan klik gambar ini:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;img src=\u0026#34;https://www.w3schools.com/html/workplace.jpg\u0026#34; usemap=\u0026#34;#workmap\u0026#34;/\u0026gt; \u0026lt;map name=\u0026#34;workmap\u0026#34;\u0026gt; \u0026lt;area shape=\u0026#34;rect\u0026#34; coords=\u0026#34;34,44,270,350\u0026#34; title=\u0026#34;Computer\u0026#34; href=\u0026#34;#!\u0026#34;\u0026gt; \u0026lt;area shape=\u0026#34;rect\u0026#34; coords=\u0026#34;290,172,333,250\u0026#34; title=\u0026#34;Phone\u0026#34; href=\u0026#34;#!\u0026#34;\u0026gt; \u0026lt;area shape=\u0026#34;circle\u0026#34; coords=\u0026#34;337,300,44\u0026#34; title=\u0026#34;Coffee\u0026#34; href=\u0026#34;#!\u0026#34;\u0026gt; \u0026lt;/map\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rTag Tambahan untuk Gambar di HTML Pada HTML versi 5, ada beberapa tag tambahan yang bisa digunakan untuk membantu tag .\nDi antaranya:\n\u0026lt;figure\u0026gt; untuk membungkus gambar dan teks caption-nya; \u0026lt;picture\u0026gt; untuk menentukan jenis gambar pada ukuran layar yang berbeda. Mari kita coba:\nTag \u0026lt;figure\u0026gt; Tag figure berfungsi untuk membungkus tag \u0026lt;img\u0026gt; atau gambar dengan teks caption. Teks caption adalah teks yang menjelaskan tentang gambar. Teks caption bisa dibuat dengan tag \u0026lt;figcaption\u0026gt;.\nGambar contoh dengan zoom\r\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;figure\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34; width=\u0026#34;300\u0026#34; alt=\u0026#34;Sawah\u0026#34;/\u0026gt; \u0026lt;figcaption\u0026gt;Landscape sawah dan langit\u0026lt;/figcaption\u0026gt; \u0026lt;/figure\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gambar contoh dengan zoom\rTag \u0026lt;picture\u0026gt; Di era mobile seperti saat ini, website tidak hanya dibuka melalui komputer saja, tapi juga smartphone.\nUkuran layar komputer dengan smartphone tentunya berbeda. Karena itu, website harus bersifat responsif agar bisa menyesuaikan diri dengan media yang digunakan.\nNah, tag \u0026lt;picture\u0026gt; hadir untuk mengatasi masalah ini. Tag ini berfungsi untuk menentukan gambar mana yang akan ditampilkan pada ukuran layar tertentu.\nGambar contoh dengan zoom\rMari kita coba contohnya:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Contoh Gambar di HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Menampilkan Gambar di HTML\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Berikut ini adalah gambar sawah:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;picture\u0026gt; \u0026lt;source media=\u0026#34;(min-width: 650px)\u0026#34; srcset=\u0026#34;images/sawah.jpg\u0026#34;\u0026gt; \u0026lt;source media=\u0026#34;(min-width: 450px)\u0026#34; srcset=\u0026#34;images/sawah-sm.jpg\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;images/sawah.jpg\u0026#34;\u0026gt; \u0026lt;/picture\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rApa Selanjutnya? Sejauh ini kita sudah belajar cara menampilkan gambar di HTML. Intinya, kamu hanya perlu mengingat cara menggunakan tag \u0026lt;img\u0026gt;.\nBerikutnya, silakan pelajari:\nBelajar HTML #09: Membuat Komentar pada HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\rhttps://www.w3schools.com/html/html_images_imagemap.asp\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n",
    "permalink": "http://localhost:1313/tutorial/html/html-image/"
  },
  {
    "title": "Tutorial Git #09: Berkerja Dengan Remote Repository",
    "content": "Pada proyek pengembangan software yang melibatkan banyak orang (tim), kita tidak hanya akan menyimpan sendiri repository proyeknya.\nSemua tim yang terlibat dalam pengkodean (coding) akan menyimpan repository lokal di komputernya masing-masing.\nSetelah itu, akan dilakukan penggabungan ke repository inti atau remote.\nBiasanya akan ada repository pusat atau untuk menyimpan source code yang sudah digabungkan (merge) dari beberapa orang.\nGambar contoh dengan zoom\rDi mana nyimpan repository remote-nya?\nBisa di server kantor atau bisa juga menggunakan layanan seperti Github, Gitlab, Bitbucket, dll.\nGithub adalah layanan yang paling populer untuk menyimpan (hosting) repository secara remote. Banyak proyek open source tersimpan di sana.\nKita akan menggunakan Github pada tutorial ini, pastikan kamu sudah memiliki akun Github.\nMebuat Repository di Github Silakan buka Github, kemudian buat sebuah repository dengan nama belajar-git seperti berikut ini.\nGambar contoh dengan zoom\rMaka sekarang kita punya repository kosong di Github.\nGambar contoh dengan zoom\rJangan diapa-apakan dulu.\nSilakan buka kembali repository lokal yang pernah kita buat, yaitu project-01.\nKita akan upload ke Github.\nMenambahkan dan Menghapus Remote Sebelum kita bisa upload semua revisi yang ada di repository lokal, kita harus menambahkan remote-nya terlebih dahulu.\n*Remote*\r\u0026ldquo;Remote dapat kita tambahkan dengan perintah seperti ini:\u0026rdquo;\rflowchart TD\rA[Remote Control] --\u003e|Sinyal Infrared| B(Receiver)\rB --\u003e C{Decoder}\rC --\u003e|Perintah ON/OFF| D[Power Control]\rC --\u003e|Perintah Volume| E[Volume Control]\rC --\u003e|Perintah Channel| F[Channel Selector]\rD --\u003e G[Device]\rE --\u003e G\rF --\u003e G\rAda dua pilihan URL remote yang bisa kita berikan:\nMelalui HTTPS:\nhttps://github.com/octocat/belajar-git.git dan memelalui SSH:\ngit@github.com:octocat/belajar-git.git Apa bedanya?\nKalau kita menggunakan HTTPS, maka kita akan diminta password setiap kali melakukan push.\nSedangkan yang menggunakan SSH, kita tidak akan diminta password. Namun, kita harus melakukan konfigurasi SSH Key terlebih dahulu.\nSaya lebih suka yang menggunakan SSH.\nMaka perintah untuk menambahkan remotenya akan menjadi seperti ini:\ngit remote add github git@github.com:octocat/belajar-git.git Setelah itu, silakan ketik perintah git remote -v untuk melihat remote apa saja yang sudah ditambahkan.\nGambar contoh dengan zoom\rBagus, sekarang kita sudah menambahkan remote di dalam repository lokal.\nSelanjutnya kita bisa melakukan push atau mengirim revisi ke repository remote (Github).\nNah untuk menghapus dan mengubah nama remote dapat dilakukan dengan perintah berikut:\nUbah nama remote:\ngit remote rename github kantor Keterangan:\ngithub adalah nama lama kantor adalah nama baru Hapus remote:\ngit remote remove github keterangan:\ngithub adalah nama remote yang akan dihapus. Mengirim Revisi ke Remote Repository Perintah yang kita gunakan untuk mengirim revisi ke repository remote adalah git push.\ngit push github master Keterangan:\ngithub adalah nama remote. master adalah nama cabang tujuan. Mari kita coba‚Ä¶\nPastikan repository lokal kita sudah memiliki remote.\nGambar contoh dengan zoom\rSetelah itu lakukan beberapa revisi atau commit.\ngit add . git commit -m \u0026#34;menambahkan beberapa revisi\u0026#34; Sebagai contoh, saya memiliki 5 catatan revisi.\nGambar contoh dengan zoom\rMaka tinggal kita kirim saja dengan perintah git push github master.\nJika muncul seperti ini, artinya push sukses dilakukan.\nGambar contoh dengan zoom\rSekarang lihat ke Github, pasti semuanya sudah ter-upload ke sana.\nGambar contoh dengan zoom\rMudah bukan?\nBiar mantap, coba buat revisi lagi di file index.html.\nMisalnya perubahannya seperti ini:\nGambar contoh dengan zoom\rLalu lakukan commit dan push.\ngit add index.html git commit -m \u0026#34;mengubah judul dan teks di body\u0026#34; git push github master Jika berhasil, maka akan tampil seperti ini.\nGambar contoh dengan zoom\rPeriksa kembali repository di Github dan perhatikanlah perubahannya.\nGambar contoh dengan zoom\rJika kita klik commit terakhir, maka kita akan dibawa ke git diff-nya Github.\nDi sana kita bisa melihat perubahan apa saya yang dilakukan pada commit tersebut.\nGambar contoh dengan zoom\rMengambil Revisi dari Remote Repository Saat kita bekerja dengan repository yang memiliki banyak kontributor, kita seharusnya mengambil dulu revisi terbaru dari repository inti agar tidak bentrok.\nMisalnya begini.\nPada repository remote ada kontributor lain yang sudah menambahkan dan mengubah sesuatu di sana.\nGambar contoh dengan zoom\rMaka kita harus mengambil perubahan tersebut, agar repository lokal kita tetap ter-update atau sama persis seperti repository remote.\nAda dua perintah untuk mengambil revisi dari repository remote:\ngit fetch [nama remote] [nama cabang] git pull [nama remote] [nama cabang] Apa perbedaannya?\nPerintah git fetch hanya akan mengambil revisi (commit) saja dan tidak langsung melakukan penggabungan (merge) terhadap repository lokal.\nSedangkan git pull akan mengambil revisi (commit) dan langsung melakukan penggabungan (merge) terhadap repository lokal.\nTerus kita harus pakai yang mana?\nTergantung dari situasi dan kondisi.\nBila kita sudah membuat perubahan di repository lokal, maka sebaiknya menggunakan git fetch agar perubahan yang kita lakukan tidak hilang.\nNamun, bila kita tidak pernah melakukan perubahan apapun dan ingin mengambil versi terakhir dari repository remote, maka gunakanlah git pull.\nMengambil Revisi dengan git fetch Baiklah, sekarang mari kita coba praktikkan.\nSilakan buka github, dan tambahkan file README.md melalui Github.\nKlik tombol add README.\nGambar contoh dengan zoom\rSetelah itu, isilah file RAEDME.md dengan apapun yang kamu inginkan.\nSebagai contoh, saya mengisinya seperti ini:\nGambar contoh dengan zoom\rSetelah selesai, simpan perubahan dengan melakukan commit langsung dari Github.\nGambar contoh dengan zoom\rPesan commit bersifat opsional, boleh di isi boleh tidak. Karena Github akan membuatkannya secara otomatis.\nSekarang ada perubahan baru di repository remote dan kita akan mengambil perubahan tersebut.\nMari kita lakukan dengan perintah git fetch.\nGambar contoh dengan zoom\rRevisi sudah diambil, tapi belum ada file README.md di dalam repository lokal.\nKenapa bisa begitu?\nYa, balik lagi dari pengertian git fetch. Dia hanya bertugas mengambil revisi saja dan tidak langsung menggabungkannya dengan repository lokal.\nCoba kita cek dengan git log.\nGambar contoh dengan zoom\rPada gambar di atas terlihat perbedaan log antara repository lokal dengan repository remote.\nBila ingin mengecek apa saja perbedaannya, coba gunakan perintah git diff.\ngit diff master github/master Keterangan:\nmaster adalah cabang master di repository lokal. github/master adalah cabang master di repository remote. Hasil outputnya kira-kira akan seperti ini:\ndiff --git a/README.md b/README.md new file mode 100644 index 0000000..1174eb2 --- /dev/null +++ b/README.md @@ -0,0 +1,18 @@ +# belajar-git + +Repository ini adalah repository untuk belajar Git. Silakan baca materi tentang [git remote di Petani Kode](https://www.petanikode.com/git-remote). + +Atau mulai belajar Git dari awal: + +- [Tutorial Git 01 - Instalasi Git dan Persiapan Awal](https://www.petanikode.com/git-install/) +- [Tutorial Git 02 - Membuat Repositori Git](https://www.petanikode.com/git-init/) +- [Tutorial Git 03 - Membuat Revisi](https://www.petanikode.com/git-commit/) +- [Tutorial Git 04 - Melihat Catatan Log Revisi Git](https://www.petanikode.com/git-log/) +- [Tutorial Git 05 - Melihat Perbandingan Revisi Git](https://www.petanikode.com/git-diff/) +- [Tutorial Git 06 - Membatalkan Revisi Git](https://www.petanikode.com/git-membatalkan-revisi/) +- [Tutorial Git 07 - Percabangan](https://www.petanikode.com/git-branch/) +- [Tutorial Git 08 - Perbedaan Git Checkout, Git Reset, dan Git Revert](https://www.petanikode.com/git-checkout-reset-revert/) +- Tutorial Git 09 - Menulis Ulang Sejarah +- [Tutorial Git 10 - Bekerja dengan Remote Repositori](https://www.petanikode.com/git-remote/) +- Tutorial Git 11 - Git Tag +- ... Lalu sekarang bagaimana cara kita menggabungkan commit dari repository remote dengan lokal?\nGunakan perintah git merge.\ngit merge master github/master Setelah itu coba ketik ls dan git log lagi‚Ä¶\nGambar contoh dengan zoom\rKita sudah berhasil menggabungkan revisi dari remote dan lokal. üéâ\nMengambil Revisi dengan git pull Lakukan hal yang sama seperti tadi.\nKali ini kita akan membuat file baru bernama register.html melalui Github.\nGambar contoh dengan zoom\rBerikan nama file dengan register.html dan isi dengan apa saja.\nGambar contoh dengan zoom\rSimpan revisi dan tambahkan pesan commit seperti ini.\nGambar contoh dengan zoom\rSekarang ada perubahan baru di repository remote dan kita akan mengambilnya dengan perintah git pull.\nSilakan buka repository lokal dan ketik perintah berikut:\ngit pull github master Maka semua revisi akan diambil dan langsung digabungkan (merge).\nGambar contoh dengan zoom\rClone Remote Repository Clone repository bisa kita bilang seperti copy repository dari remote ke lokal.\nPerintah untuk melakukan clone adalah git clone.\ngit clone https://github.com/octocat/belajar-git.git [nama dir] Keterangan:\nhttps://\u0026hellip; adalah URL repository remote, kita juga bisa menggunakan SSH. [nama dir] (opsional) adalah nama direktori yang akan dibuat. Jika kita tidak berikan nama direktori, maka akan otomatis menggunakan nama repository. Mari kita coba‚Ä¶\nSekarang saya akan pindah ke Desktop.\ncd ~/Desktop Setelah itu melakukan clone di sana.\ngit clone git@github.com:octocat/belajar-git.git Maka akan ada direktori baru di sana.\nGambar contoh dengan zoom\rFYI\rSaat kalian clone sebuah repository dari Github, nama remote origin akan diberikan secara otomatis Gambar contoh dengan zoom\rApa Selanjutnya? Kita sudah belajar beberapa perintah untuk bekerja pada remote repository, di antaranya git remote, git fetch, git pull, git clone, dll.\nSemua perintah itu kita perlukan saat berkolaborasi dengan tim di proyek open source maupun closed source.\nApa selanjutnya?\nSelanjutnya silakan banyak-banyak latihan dan sering-sering menggunakannya tiap hari agar terbiasa.\nTerima kasih sudah mengikuti tutorial ini sampai akhir. Kalau ada saran dan pertanyaan, jangan sungkan-sungkan untuk berkomentar.\n",
    "permalink": "http://localhost:1313/tutorial/git/git-remote/"
  },
  {
    "title": "Belajar HTML #09: Cara Membuat List di HTML",
    "content": "Jika kamu diminta menuliskan daftar barang yang harus dibeli dengan HTML\u0026hellip;\n\u0026hellip;apa yang akan kamu lakukan?\nMungkin kamu bisa membuat seperti in:\n\u0026lt;h1\u0026gt;Daftar Barang untuk dibeli:\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;- Flash disk 64GB\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;- Kabel Data USB 3.0\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;- Kertas A4\u0026lt;/p\u0026gt; Hsilnya memang akan terlihat seperti ini:\nTapi, ini bukalan cara membuat list yang benar di HTML.\nElemen List di HTML HTML sudah menyediakan elemen untuk membuat list. Ada tiga macam jenis list yang bisa dibuat di HTML:\nOrdered List adalah list yang berurut; Unordered list adalah list yang terurut; dan Descripton List adalah list yang bersisi definisi. Mari kita bahas satu per satu\u0026hellip;\n1. Ordered List di HTML Ordered list dibuat dengan tag \u0026lt;ol\u0026gt;. Lalu di dalamnya diisi dengan item-item yang akan di masukan ke dalam list. Item dibuat dengan tag \u0026lt;li\u0026gt;(*list item).\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Membuat Ordered List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Buah Favoritku:\u0026lt;/h1\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Jeruk\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Durian\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Pisang\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Pepaya\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Mangga\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nList di atas diurutkan berdasarkan angka dari 1, 2, 3, sampai 5.\nLalu bagaimana kalau kita ingin menggunakan huruf seperti a, b, c atau angka romawi seperti I, II, III?\nGampang..\nUntuk membuat yang seperti itu, kita bisa menggunakan atribut type pada tag ol dan berikut ini nilai yang bisa diberikan:\na untuk alfabet a, b, c dan seterusnya. A untuk alafabet A, B, C dan seterusnya. i untuk angka romawi i, ii, iii dan seterusnya. I untuk angka romawi I, II, IIIdan seterusnya. Contoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Ordered List dengan Atribut Type\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h3\u0026gt;List dengan type alfabet\u0026lt;/h3\u0026gt; \u0026lt;ol type=\u0026#39;a\u0026#39;\u0026gt; \u0026lt;li\u0026gt;Tutorial List di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Link di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Tabel di HTML\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;h3\u0026gt;List dengan type alfabet kapital (huruf besar)\u0026lt;/h3\u0026gt; \u0026lt;ol type=\u0026#39;A\u0026#39;\u0026gt; \u0026lt;li\u0026gt;Tutorial List di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Link di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Tabel di HTML\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;h3\u0026gt;List dengan type romawi\u0026lt;/h3\u0026gt; \u0026lt;ol type=\u0026#39;i\u0026#39;\u0026gt; \u0026lt;li\u0026gt;Tutorial List di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Link di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Tabel di HTML\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;h3\u0026gt;List dengan type romawi kapital\u0026lt;/h3\u0026gt; \u0026lt;ol type=\u0026#39;I\u0026#39;\u0026gt; \u0026lt;li\u0026gt;Tutorial List di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Link di HTML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tutorial Tabel di HTML\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\n2. Unordered List HTML Unordered list adalah list yang tak terurut yang menggunakan simbol-simbol pada item-nya. Unordered list dibuat dengan tag \u0026lt;ul\u0026gt; dan untuk item-nya dibuat juga dengan tag \u0026lt;li\u0026gt;.\nContohnya:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Membuat Unordered List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bahasa Pemrograman untuk dipelajari:\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Java\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Python\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Kotlin\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nSecara default simbol yang digunakan oleh unordered list adalah lingkaran kecil (disc). Kita juga bisa menggantinya dengan atribut type.\nBerikut ini nilai yang bisa diberikan untuk atribut type:\nsquare untuk simbol persegi; disc (default) untuk simbol lingkaran disc; none tidak memakai simbol; circle untuk simbol lingkaran; Contoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Membuat Unordered List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bahasa Pemrograman untuk dipelajari:\u0026lt;/h1\u0026gt; \u0026lt;ul type=\u0026#34;square\u0026#34;\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Java\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Python\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Kotlin\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;h1\u0026gt;Framework untuk dipelajari:\u0026lt;/h1\u0026gt; \u0026lt;ul type=\u0026#34;circle\u0026#34;\u0026gt; \u0026lt;li\u0026gt;Vuejs\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Svelte\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Reactjs\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;h1\u0026gt;Tools untuk dipelajari:\u0026lt;/h1\u0026gt; \u0026lt;ul type=\u0026#34;none\u0026#34;\u0026gt; \u0026lt;li\u0026gt;Gulp\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;NPM\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Js Lint\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;h1\u0026gt;Pelajari juga:\u0026lt;/h1\u0026gt; \u0026lt;ul type=\u0026#34;disc\u0026#34;\u0026gt; \u0026lt;li\u0026gt;JSON\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;XML\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Markdown\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nSelain menggunakan type, kita juga bisa menggunakan gambar.\nini dilakukan dengan style CSS.\nContohya:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Membuat Unordered List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bahasa Pemrograman untuk dipelajari:\u0026lt;/h1\u0026gt; \u0026lt;ul style=\u0026#34;list-style-image: url(https://assets.ubuntu.com/sites/ubuntu/latest/u/img/favicon.ico)\u0026#34;\u0026gt; \u0026lt;li\u0026gt;Javascript\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;PHP\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Java\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Python\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Kotlin\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\n3. Description List di HTML Description List adalah list yang berisi deskripsi atau penjelasan dari sesuatu.\nAda tiga tag yang digunakan untuk membuat description list:\n\u0026lt;dl\u0026gt; (description list) tag untuk memulai description list; \u0026lt;dt\u0026gt; (description term) tag untuk membuat kata yang akan dideskripsikan; \u0026lt;dd\u0026gt; (description description) tag untuk membuat penjelasan dari kata. Format penulisannya seperti ini:\nContohnya:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Membuat Description List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Daftar istilah:\u0026lt;/h1\u0026gt; \u0026lt;dl\u0026gt; \u0026lt;dt\u0026gt;Kopi\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;Sebuah minuman berwarna hitam. Menurut pendapat lain kopi adalah air yang dimasak sampai gosong.\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;Kopi Black Magic\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;Kopi hitam atau kopi tradisional yang dibuat dengan mantra-mantra.\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;White Coffee\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;Kopi berwarna putih, kandungan kafeinnya sedikit.\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;Kopi++\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;Kopi ini mampu meningkatkan imajinasi 99 kali lipat.\u0026lt;/dd\u0026gt; \u0026lt;/dl\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nList di dalam List (Nested List) List juga dapat dibuat di dalam list, misalkan kita ingin menggabungkan ordered list dengan unordered list.\nCaranya, list yang di dalam ditulis di dalam tag \u0026lt;li\u0026gt;.\nContoh:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#39;en\u0026#39;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;List di dalam List\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Distro Linux dan Keluarganya\u0026lt;/h1\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Debian \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Ubuntu\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Mint\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;elementaryOS\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;RedHat \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Fedora\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Slackware\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nApa Selanjutnya? Nah, sampai di sini dulu tutorial pertama ini..\nJika ada yang belum jelas, bisa ditanyakan melalui komentar.\nBerikutnya silakan pelajari tentang definisi tag, elemen, dan atribut:\nBelajar HTML #10: Mengenal tag, elemen, dan atribut dalam HTML Info\r\u0026ldquo;Untuk tutorial HTML lainnya, silakan cek di List tutorial HTML\u0026rdquo;\r",
    "permalink": "http://localhost:1313/tutorial/html/html-list/"
  },
  {
    "title": "Belajar HTML #10: Cara Membuat Tabel di HTML",
    "content": "Salah satu cara atau format menampilkan informasi dalam web adalah dengan tabel.\nTabel terdiri dari 4 unsur utama:\nBaris Kolom Sel Garis Gambar contoh dengan zoom\r",
    "permalink": "http://localhost:1313/tutorial/html/html-tabel/"
  },
  {
    "title": "Tutorial Git #10: Menggunakan Git Pull Git Fetch",
    "content": "Perintah git pull dan git fetch adalah dua perintah untuk mengambil commit terbaru dari remote repository.\nPertanyaannya:\nApa perbedaan dari kedua perintah tersebut?\n‚Ä¶dan kapan waktu yang tepat menggunakan git pull dan git fetch?\nMari kita bahas.\nApa Perbedaan git pull dengan git fetch? ",
    "permalink": "http://localhost:1313/tutorial/git/git-full-fetch/"
  },
  {
    "title": "Belajar HTML #11: Membuat Form pada HTML",
    "content": "Web tidak hanya digunakan untuk menampilkan informasi saja‚Ä¶\n‚Ä¶Web juga digunakan untuk mengambil informasi atau data dari pengunjung.\nSalah satu cara untuk mengambil informasi dari pengunjung ialah menggunakan form.\nForm dalam web bisa disamakan dengan formulir di dunia nyata.\nForm dapat diisi, kemudian diproses dengan program tertentu.\nPada tutorial ini, kita akan belajar cara membuat form di HTML.\nHanya membuat saja ya‚Ä¶\nTidak sampai memproses datanya.\nKarena itu masuk ke dalam topik pembahasan yang lain.\nBaiklah‚Ä¶\nMari kita mulai.\nCara Membuat Form di HTML Form di HTML dapat kita buat dengan tag \u0026lt;form\u0026gt;.\nTag ini memiliki beberapa atribut yang harus diberikan, seperti:\naction untuk menentukan aksi yang akan dilakukan saat data dikirim; method metode pengiriman data. Contoh:\n\u0026lt;form action=\u0026#34;proses.php\u0026#34; method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;!-- form field di sini --\u0026gt; \u0026lt;/form\u0026gt; Untuk atribut action, kita dapat mengisinya dengan alaman URL dari endpoint yang akan memproses form.\nSecara sederhana,‚Äîpada contoh di atas‚Äî kita akan menyuruh file proses.php untuk memproses data form.\nIni nanti akan kita pelajari pada PHP.\nKode HTML di atas, tidak akan menghasilkan apa-apa.\nKarena kita belum membuat field-nya.\nApa Itu Field? Field adalah ruas yang dapat diisi dengan data.\ncontoh field:\n\u0026lt;input type=\u0026#34;text\u0026#34; namae=\u0026#34;info\u0026#34; /\u0026gt; Field memiliki beberapa atribut yang harus di berikan:\ntype merupakan type dari field. name merupakan nama dari field yang aka menjadi kunci variable di adalam program. Latihan: Membuat Form Login Sebagai latihan, mari buat form login.\nPada form login, terdapat beberapa field dan element:\nField untuk input username atau email. Field untuk input password. Checkbox untuk remember me. Tombol untuk login. Berikut ini kodenya yang dapat di tuliskan:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Form Login\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;login.php\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;Login\u0026lt;/legend\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Username:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; placeholder=\u0026#34;username...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Password:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; placeholder=\u0026#34;password...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;\u0026lt;input type=\u0026#34;checkbox\u0026#34; name=\u0026#34;remember\u0026#34; value=\u0026#34;remember\u0026#34; /\u0026gt; Remember me\u0026lt;/label\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Login\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gambar contoh dengan zoom\rSekarang perhatikan!\ninput username dengan tipe text. input password dengan tipe password. input remember me dengan tipe checkbox. input submit dengan tipe submit. Lalu ketiga field ini dibungkus kedalam tag \u0026lt;fieldset\u0026gt;.\nNanti tag \u0026lt;fieldset\u0026gt; ini akan membuat tag \u0026lt;legend\u0026gt; untuk emberikan teks pada fieldset.\nLalu, perhatikan juga atribut yang di gunakan pada setiap field.\nAtribute placheholder untuk menapilkan teks sementara(placeholder). Atribut value untuk memberikan nilai default pada field. Setiap field kita bungkus dalam \u0026lt;p\u0026gt; agar terlihat rapi da juga kita berikan sebuah label dengan tag \u0026lt;label\u0026gt;.\nLatihan: Membuat Form Contact Latihan Selanjutnya, kita akan membuat form contact. Form ini berfungsi untuk menghubungi atau kontak admin.\nSilakan ikuti kode berikut:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Contact Us\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;contact.php\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;Contact\u0026lt;/legend\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Name:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;your name...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Subject:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;subject\u0026#34; placeholder=\u0026#34;subject...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Email:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;email\u0026#34; name=\u0026#34;email\u0026#34; placeholder=\u0026#34;your email...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Send\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rPada contoh di atas, kita memberikan type=\u0026quot;email\u0026quot; untuk field email, agar filed ini harus diisi dengan email saja.\nCoba saja isi dengan yang lain, lalu klik Send‚Ä¶maka akan muncul pesan peringatan.\nGambar contoh dengan zoom\rLatihan: Membuat Form Register Semakin banyak latihan, semakin bagus.\nBerikutnya kita akan coba membuat form registrasi.\nForm ini berisi field untuk:\nInput nama lengkap; Input username; Input email; Input password; Input jenis kelamin; Input Agama; Input Biografi. dsb. Mari kita buat‚Ä¶\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Registrasi\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;contact.php\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;Registrasi\u0026lt;/legend\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Nama:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;nama\u0026#34; placeholder=\u0026#34;Nama lengkap...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Username:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; placeholder=\u0026#34;Username...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Email:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;email\u0026#34; name=\u0026#34;email\u0026#34; placeholder=\u0026#34;Your email...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Password:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; placeholder=\u0026#34;Passowrd...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Jenis kelamin:\u0026lt;/label\u0026gt; \u0026lt;label\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;jenis_kelamin\u0026#34; value=\u0026#34;laki-laki\u0026#34; /\u0026gt; Laki-laki\u0026lt;/label\u0026gt; \u0026lt;label\u0026gt;\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;jenis_kelamin\u0026#34; value=\u0026#34;perempuan\u0026#34; /\u0026gt; Perempuan\u0026lt;/label\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Agama:\u0026lt;/label\u0026gt; \u0026lt;select name=\u0026#34;agama\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;islam\u0026#34;\u0026gt;Islam\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;kristen\u0026#34;\u0026gt;Kristen\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;hindu\u0026#34;\u0026gt;Hindu\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;budha\u0026#34;\u0026gt;Budha\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Biografi:\u0026lt;/label\u0026gt; \u0026lt;textarea name=\u0026#34;biografi\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Daftar\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rApa saja field baru yang ada di form tersebut?\nField radio; Field \u0026lt;select\u0026gt;\u0026lt;option\u0026gt;; Field \u0026lt;textearea\u0026gt;. Apa bedanya radio dengan checkbox? Jika kita ingin agar pengunjung memilih salah satu, maka kita gunakan radio.\nTapi kalau kita ingin pengunjung memilih lebih dari satu, maka kita gunakan checkbox.\nLalu untuk \u0026lt;select\u0026gt;\u0026lt;/option\u0026gt;, sifatnya sama seperti radio. Cuma dia bentuknya berbeda.\nLalu untuk menginputkan teks yang panjang, kita gunakan tag \u0026lt;textarea\u0026gt;.\nLatihan: Membuat Form Tingkat Lanjut Field-field di atas merupakan jenis field yang sering digunakan dalam pembuatan form.\nMasih ada jenis field lagi yang belum kita coba, seperti meter, color, url, number, date, datetime, dsb.\nMari kita coba beberapa:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Form HTML\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;contact.php\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;Form\u0026lt;/legend\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Alamat Web:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;url\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;Masukan URL Web...\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Tanggal Lahir:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34; name=\u0026#34;tanggal\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label\u0026gt;Umur:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;number\u0026#34; min=\u0026#34;10\u0026#34; max=\u0026#34;90\u0026#34; name=\u0026#34;umur\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Send\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Hasilnya:\nGambar contoh dengan zoom\rApabila di browser anda tidak tampil kalender seperti di atas, coba gunakan browser versi terbaru.\nApa Selanjutnya? Apa yang kita pelajari pada tutorial ini adalah tag dan field dasar‚Äîdan sering digunakan‚Äîdalam pembuatan form.\nMasih terdapat banyak tipe field lagi yang belum kita coba. Seperti: meter, color, time, dsb.\nKarena itu, silakan berlatih terus‚Ä¶\n",
    "permalink": "http://localhost:1313/tutorial/html/html-form/"
  },
  {
    "title": "Github Workflow: Cara Berkontribusi di Proyek Open Source",
    "content": "Github saat ini sudah menjadi rumah bagi proyek-proyek open source.\nJutaan programmer dari seluruh dunia menaruh kodenya di sana.\nBahkan proyek open source seperti Linux, Cinnamon, Laravel, BlankOn, dll. menggunakan Github.\nBagaimana proyek-proyek itu digarap bersama?\nItulah yang akan kita pelajari pada artikel ini.\nKita akan belajar tentang Git dan Github workflow atau alur kerja Github untuk berkontribusi pada proyek open source.\nKita akan langsung melakukan kontribusi pada proyek ‚Äúdummy‚Äù yang sudah saya siapkan.\nSebelumnya siapkan dulu alat-alat berikut:\nAkun Github Git Teks Editor. Langkah-langkah Berkontribusi pada Proyek Open Source di Github Ada beberapa langkah yang harus dilakukan untuk berkontribusi di Proyek open source:\nBaca Aturan Berkontribusi Jika kamu tertarik berkontribusi pada sebuah proyek di Github, pastikan membaca aturan kontribusi.\nPada aturan kontribusi, biasanya akan ada larangan dan tata cara berkontribusi yang harus dipatuhi bersama.\nAturan berkontribusi biasanya ditulis pada file CONTRIBUTING.md dan README.md.\nContoh aturan berkontribusi pada proyek Hugo:\nGambar contoh dengan zoom\rApa yang akan terjadi bila saya tidak mengikuti aturan berkontribusi?\nBisa jadi kontribusimu akan ditolak oleh admin.\nKarena itu, bacalah aturan berkontribusi dengan teliti dan seksama.\nFork \u0026amp; Clone Repository Setelah kita selesai membaca aturan berkontribusi, langkah selanjutnya adalah melakukan fork repository ke akun kita.\nFork bisa kita artikan sebagai menyalin repository dari akun orang lain atau organisasi ke akun kita sendiri.\nNah untuk mempraktikannya, saya sudah menyiapkan proyek bernama belajar-git.\nSilakan buka proyek tersebut, lalu klik tombol Fork.\nGambar contoh dengan zoom\rTunggu beberapa saat, repository sedang di-fork.\nGambar contoh dengan zoom\rSetelah itu, akan ada repository baru bernama belajar-git di akun kita.\nGambar contoh dengan zoom\rSekarang repository belajar-git telah menjadi milik kita dan bebas melakukan apapun terhadapnya.\nSelanjutnya silakan clone (download) repository tersebut ke komputer lokal.\nGambar contoh dengan zoom\rHTTPS:\ngit clone https://github.com/octocatcode/belajar-git.git SSH:\ngit clone git@github.com:octocatcode/belajar-git.git Saya biasanya menggunakan SSH, biar tidak memasukkan password saat melakukan push.\nGambar contoh dengan zoom\rLakukan Modifikasi Setelah kita melakukan clone ke komputer lokal, selanjutnya silakan buka dengan teks editor dan lakukan modifikasi.\nSebagai contoh, saya membukanya dengan VS Code.\nGambar contoh dengan zoom\rBuatlah beberapa perubahan dan simpan perubahan yang kamu lakukan dengan Git.\nLakukan commit terhadap apa yang kamu rubah.\nGambar contoh dengan zoom\rPerlu diperhatikan juga:\nGunakan pesan commit yang informatif dan mewakili apa yang sudah kamu ubah. Hindari menggunakan git add . untuk melakukan commit ke semua file. Push Kontribusimu Setelah kita selesai melakukan perubahan dan commit, langkah berikutnya adalah melakukan push.\nPush-nya ke mana?\nYa ke repository hasil fork tadi.\nRepository yang kita clone dari Github, akan otomatis membuat remote bernama origin.\nUntuk melihatnya, gunakan perintah git remote -v.\nGambar contoh dengan zoom\rAlamat tujuan push dan fetch mengarah ke alamat repository di akun kita.\nSilakan melakukan push dengan perintah berikut.\ngit ush origin master Tunggulah beberapa saat‚Ä¶\nGambar contoh dengan zoom\rSetelah selesai, coba lihat repository belajar-git di akun Github-mu.\nApakah berhasil di-push atau tidak?\nKalau berhasil, silakan lanjutkan ke langkah berikutnya.\nMembuat Pull Request Pull Request adalah istilah yang bisa kita artikan sebagai permintaan untuk menggabungkan kode.\nKita sudah membuat perubahan di repository hasil fork, lalu ingin menggabungkan dengan repository sumber.\nMaka kita harus membuat Pull Request.\nSilakan klik tombol New Pull Request pada repository belajar-git.\nGambar contoh dengan zoom\rSetelah itu, Github akan melakukan komparasi.\nApakah ada kode yang bentrok atau tidak?\nKalau tidak ada yang bentrok biasanya akan muncul tulisan hijau ‚ÄúAble to merge‚Äù.\nSelanjutnya silakan klik tombol Create Pull Request.\nGambar contoh dengan zoom\rSilakan isi judul Pull Request dan pesan yang ingin disampaikan ke komunitas.\nGambar contoh dengan zoom\rSetelah itu admin atau owner akan melakukan review kontribusimu.\nBiasanya akan terjadi diskusi untuk membahas pull request yang telah kita buat.\nApakah akan ditolak atau diterima?\nKalau diterima, biasanya akan ada tulisan ‚ÄúMerged‚Äù berwarna ungu.\nGambar contoh dengan zoom\rSelesai.\nJika ingin berkontribusi lagi, pastikan repository lokal tetap terupdate dengan repository sumber.\nUpdate bisa dilakukan dengan perintah git pull atau git fetch.\nPelajari caranya di sini: Bekerja dengan Remote Repository.\n",
    "permalink": "http://localhost:1313/tutorial/git/github-workflow/"
  },
  {
    "title": "Menggunakan Git pada Visual Studio Code (Lebih praktis!)",
    "content": "",
    "permalink": "http://localhost:1313/tutorial/git/git-vscode/"
  },
  {
    "title": "Cara Setup SSH Key untuk Github agar Bisa Ngepush Tanpa Password",
    "content": "Kita bisa melakukan push ke Github melalui dua metode yakni, melalui protokol HTTPS dan SSH.\nJika kita menggunakan HTTPS, maka kita akan dimintai password di setiap kali melakukan push. Sedangkan kalau pakai SSH, ini tidak perlu..\n..karena password-nya akan diwakili oleh SSH Key.\nPada tutorial ini, kita akan belajar gimana cara setup SSH Key untuk Github. Sehingga nanti bisa melakukan push tanpa harus ngetik password terus menerus.\nMari kita mulai!\nApa itu SSH Key? SSH Key adalah Key yang dipakai untuk berkomunikasi dengan server melalui protokol SSH. SSH Key terdiri dari publik key dan private key.\nPublik key akan kita taruh ke server dalam hal ini adalah Github, kemudian private key akan kita simpan di lokal.\nPrivate key sebenarnya mewakili password, sehingga kamu tidak boleh sembarangan membagikannya.\nIntinya, private key dan publik key akan dicocokan secara otomatis saat kita terhubung dengan SSH.\n1. Cara Membuat SSH Key Kita bisa membuat SSH Key dengan perintaih ssh-keygen, ini bisa kamu ketik di Terminal dan Git Bash.\nSilakan buka Terminal, kemudian ketik perintah berikut untuk membuat SSH Key:\ncd ~/.ssh/ #pindah ke direktori ssh # membuat private key dan public key ssh-keygen -t rsa Pada perintah ini, kita masuk dulu ke folder .ssh yang ada di Home, kemudian kita generate SSH Key dengan ssh-keygen.\nBerikutnya, kita akan diminta mengisi id dan passpharse.\nGambar contoh dengan zoom\rPada contoh di atas, saya mengisi id dengan dian dan passpharse tidak diisi. Langsung saja tekan Enter saat pengisian passpharse.\nJika kamu mengisi passpharse, maka akan diminta mengisinya lagi saat melakukan push melalui SSH.\nSetelah selesai‚Ä¶ akan ada dua file baru di dalam direktori ~/.ssh/.\nGambar contoh dengan zoom\rPrivate Key berisi kunci rahasia yang tidak boleh diketahui siapapun dan Public Key berisi kunci publik yang akan kita taruh di Bitbucket.\n2. Tambahkan SSH Key ke Github Sebelumnya ambil dulu kunci publik yang sudah anda buat, gunakan perintah cat.\ncat ~/.ssh/id_anda.pub Copy semua teks yang ditampilkan. Gambar contoh dengan zoom\rLalu masuk ke Settings\u0026gt;SSH and GPG Keys, tambahkan SSH Key baru dengan mengelik New SSH Key.\nSetelah itu masukkan atau paste public key yang kamu copy tadi.\nGambar contoh dengan zoom\rJangan lupa juga untuk kasi Title seperti nama komputermu biar gampang diingat, jika nanti kamu menambahkan banyak SSH Key.\n3. Uji Coba SSH Key Karena kita baru pertama kali buat SSH Key, kita harus tambahkan dulu identitas kita.\nCaranya ketik perintah berikut:\nssh-add dian Silakan ganti dian dengan id dari SSH key yang kamu buat tadi. Jika berhasil, maka akan muncul seperti ini:\nGambar contoh dengan zoom\rSetelah itu, baru kita bisa tes konek ke Github dengan SSH.\nCaranya, ketik perintah berikut:\nssh -T git@github.com Jika hasilnya seperti berikut ini, berarti berhasil. Selanjutnya kita tinggal melakukan push dengan SSH.\nGambar contoh dengan zoom\r4. Konfigurasi Agar SSH Key Otomatis ditambahkan Setelah komputer di-restart, SSH Key harus ditambahkan lagi agar bisa digunakan.\nNah, biar tidak mengetik perintah ssh-add berulang-ulang, kita bisa buat konfigurasi agar SSH Key otomatis ditambahkan.\nCaranya:\nBuat file baru di dalam direktori ~/.ssh/ bernama config. Gambar contoh dengan zoom\rIsi file config dengan konfigurasi seperti ini: # Github.com server Host github.com IdentityFile ~/.ssh/dian Ganti dian dengan id SSH Key yang kamu buat.\nGambar contoh dengan zoom\rSelesai.\nApa Selanjutnya Selamat, kamu sudah berhasil setup SSH Key untuk menggunakan Github melalui SSH.\nSelanjutnya, Cobalah untuk clone repository dengan SSH dan lakukan push dan pull.\nGambar contoh dengan zoom\rSelamat Mencoba\u0026hellip;!\n",
    "permalink": "http://localhost:1313/post/github-ssh/"
  },
  {
    "title": "Kebijakan Privasi",
    "content": "Kami menyadari bahwa privasi Anda sangat penting, untuk itu kami berusaha menuliskan beberapa kebijakan privasi (Privacy Policy) yang berhubungan dengan penggunaan website ini:\nInformasi apa yang kami kumpulkan? Kami mengumpulkan informasi dari Anda ketika Anda melakukan login untuk memberikan komentar, pengisian form kontak kami, mengikuti kegiatan-kegiatan yang diselenggarakan ataupun pengumpulan informasi lainnya. Saat mengisi data di situs Octocat Code, sebagaimana mestinya, Anda mungkin akan diminta untuk memasukkan: nama, alamat e-mail, alamat tempat tinggal, nomor telepon atau akun jejaring sosial. Anda juga dapat mengunjungi situs kami secara anonim (tidak dikenal).\nSelain itu, kami juga melakukan pencatatan informasi ke dalam sistem kami. Informasi yang dicatat pada umumnya meliputi alamat protokol internet (IP Address), jenis browser, Internet Service Provider (ISP), tanggal/waktu, referrer, jumlah klik, informasi demografis dan informasi lainnya.\nUntuk apa kami menggunakan informasi anda? Setiap informasi yang kami kumpulkan dari Anda, mungkin digunakan dalam salah satu hal berikut:\nUntuk mempersonalisasi pengalaman Anda (Informasi Anda membantu kami untuk lebih menanggapi kebutuhan personal Anda)\nUntuk meningkatkan kualitas website kami (Kami terus berupaya untuk meningkatkan kualitas website kami berdasarkan informasi dan umpan balik yang kami terima dari Anda)\nUntuk meningkatkan layanan pengunjung (Informasi Anda membantu kami untuk lebih efektif menanggapi permintaan layanan pelanggan Anda dan dukungan yang diperlukan)\nUntuk mengirim email berkala/newsletter (Alamat email yang Anda berikan dapat digunakan untuk mengirimkan informasi, menjawab pertanyaan, dan/atau permintaan atau pertanyaan.)\nBagaimana kami melindungi informasi Anda? Kami menerapkan berbagai langkah-langkah keamanan untuk menjaga keamanan informasi pribadi Anda ketika Anda login atau masukkan, kirim, atau mengakses informasi pribadi Anda.\nApakah kami memberikan informasi Anda kepada pihak luar? pihak luar? Tidak! Kami tidak menjual, memperdagangkan, atau mengalihkan kepada pihak luar informasi pribadi Anda. Ini tidak termasuk pihak ketiga terpercaya yang membantu kami dalam mengoperasikan website kami, melakukan bisnis kami, atau melayani anda, asalkan pihak-pihak setuju untuk menjaga informasi ini agar tetap rahasia. Kami juga dapat melepaskan informasi Anda ketika kita percaya kepada pihak ketiga yang mematuhi hukum, menegakkan kebijakan situs kami, atau melindungi kita atau hak orang lain, milik, atau keselamatan. Namun, informasi pengunjung non-pribadi mungkin akan diberikan kepada pihak lain untuk pemasaran, iklan, atau penggunaan lainnya.\nKebijakan Privasi Online Kebijakan privasi hanya berlaku online untuk informasi yang dikumpulkan melalui website kami dan bukan untuk informasi yang dikumpulkan offline.\nSyarat dan ketentuan Silakan juga kunjungi Syarat dan Ketentuan, menetapkan penggunaan, penolakan, dan batasan tanggung jawab yang mengatur penggunaan situs kami di sini.\nIzin Anda Dengan mengakses situs Octocat Code, Anda telah menyetujui kebijakan privasi website kami.\nHubungi Kami Jika ada pertanyaan tentang kebijakan privasi, maupun laporan, saran atau masukan mengenai website ini, Anda dapat menghubungi kami melalui halaman kontak.\n",
    "permalink": "http://localhost:1313/privacy/"
  },
  {
    "title": "Kontak Kami",
    "content": "Hubungi Kami Informasi Kontak Email: info@example.com\nTelepon: +62 21 1234 5678\nAlamat: Jl. Teknologi No. 99, Jakarta\nSilakan kirimkan pertanyaan atau pesan Anda melalui formulir berikut. Kami akan segera merespons:\nNama Lengkap\rEmail\rPesan\rKirim Pesan\r",
    "permalink": "http://localhost:1313/contact/"
  },
  {
    "title": "Peraturan dan Syarat Penggunaa",
    "content": "Dengan mengakses situs web ini, Anda setuju untuk terikat oleh Syarat dan Ketentuan Penggunaan, semua hukum dan peraturan yang berlaku, dan setuju bahwa Anda bertanggung jawab untuk mematuhi hukum setempat yang berlaku. Jika Anda tidak setuju dengan ini, Anda dilarang untuk menggunakan atau mengakses situs ini. Materi yang terkandung dalam situs web ini telah dilindungi oleh Hak Cipta yang berlaku dan Hak Kekayaan Intelektual.\nPenggunaan Lisesnsi Izin diberikan sementara untuk mengunduh salinan materi artikel/berita (teks, foto, video, logo) pada situs Octocat Code untuk pribadi, untuk penggunaan sementara dan non-komersial. Ini adalah pemberian lisensi, bukan pengalihan hak, dan di bawah lisensi ini Anda tidak dapat:\nMengubah isi dari materi; Menggunakan materi untuk tujuan komersial, atau untuk menampilkan di muka umum (komersial atau non-komersial); Mencoba untuk mendekompilasi atau melakukan reverse engineering materi yang terdapat pada situs web Octocat Code; Menghapus setiap hak cipta atau notasi milik lainnya (watermark) dari materi, atau Transfer materi ke orang lain atau melakukan ‚ÄúMirror‚Äù materi di server lain. Lisensi ini dengan sendirinya akan berakhir jika Anda melanggar salah satu pembatasan dan dapat diakhiri oleh kami setiap saat. Setelah Anda mengakhiri penggunaan materi-materi tersebut atau pada saat berakhirnya lisensi ini, Anda harus menghancurkan materi download milik Anda baik dalam format elektronik atau format cetak.\nPemanfaatan materi untuk keperluan pendidikan, penelitian, kajian non-komersial dan konsumsi individual seperti mailing-list, blog dan forum komunitas, tidak harus mendapatkan izin dari Octocat Code, namun tetap disarankan untuk mencatumkan sumber jika perlu terlebih dahulu menyampaikan pemberitahuan guna menghindari penyalahgunaan materi terkait.\nHukum Setiap klaim yang berhubungan dengan situs website Octocat Code akan diatur oleh hukum Negara Indonesia dan undang-undang IT tanpa memperhatikan pertentangan ketentuan hukum. Syarat dan Ketentuan berlaku umum untuk penggunaan situs Octocat Code.\nLain-lain Logo dan Ikon Octocat Code merupakan hak cipta dan kepemilikan dari Octocat Code, dengan ini Anda dilarang menggunakan, memakai, dan mencantumkan materi tersebut tanpa seizin dari pihak Octocat Code untuk keperluan komersial maupun keperluan atau kegiatan yang dapat menimbulkan kerugian materil maupun non-materil, serta penyalahgunaan nama Octocat Code.\n",
    "permalink": "http://localhost:1313/terms/"
  },
  {
    "title": "Pertanyaan Umum",
    "content": "Pertanyaan yang Sering Diajukan Bagaimana cara memulai belajar? Mulailah dengan tutorial untuk pemula yang sesuai dengan minat Anda. Semua tutorial tersedia di halaman utama.\nApakah ada biaya untuk mengakses konten? Tidak, semua konten di situs ini sepenuhnya gratis.\nBagaimana cara berkontribusi? Anda dapat berkontribusi melalui GitHub repository kami. Silakan kunjungi halaman kontak untuk informasi lebih lanjut.\n",
    "permalink": "http://localhost:1313/faqs/"
  },
  {
    "title": "Tentang Kami",
    "content": "Tentang Situs Ini Situs ini dibuat untuk membantu pemula mempelajari berbagai teknologi pemrograman melalui tutorial yang mudah dipahami.\nVisi Menyediakan materi pembelajaran yang berkualitas dan terjangkau untuk semua kalangan.\nMisi Membuat konten tutorial yang terstruktur Menyajikan contoh kode yang relevan Membantu pemecahan masalah praktis ",
    "permalink": "http://localhost:1313/about/"
  },
  {
    "title": "Tutorial Git #2: Cara Membuat Repositori Baru dalam Proyek",
    "content": "Repositori (repository) dalam bahasa indonesia artinya gudang. Repositori merupakan istilah yang digunakan untuk direktori proyek yang menggunakan Git.\nJika kita memiliki sebuah direktori dengan nama proyek-01 dan di dalamnya sudah menggunakan git, maka kita sudah punya repositori bernama proyek-01.\nMembuat Repository Pembuatan repositori dapat dilakukan dengan perintah git init nama-dir. Contoh:\ngit init proyek-01 Perintah tersebut akan membuat direktori bernama proyek-01. Kalau direktorinya sudah ada, maka Git akan melakukan inisialisasi di dalam direktori tersebut.\nPerintah git init akan membuat sebuah direktori bernama .git di dalam proyek kita. Direktori ini digunakan Git sebagai database untuk menyimpan perubahan yang kita lakukan.\nHati-hati!\nKalau kita menghapus direktori ini, maka semua rekaman atau catatan yang dilakukan oleh Git akan hilang.\nContoh-contoh lain Perintah berikut ini akan membuat repositori pada direktori saat ini (working directory).\ngit init . Tanda titik (.) artinya kita akan membuat repository pada direktori tempat kita berada saat ini.\nKeterangan gambar opsional\rPerintah berikut ini akan membuat repositori pada direktori /var/www/html/proyekweb/.\ngit init /var/www/html/proyekweb .gitignore .gitignore merupakan sebuah file yang berisi daftar nama-nama file dan direktori yang akan diabaikan oleh Git.\nPerubahan apapun yang kita lakukan terhadap file dan direktori yang sudah masuk ke dalam daftar** .gitignore** tidak akan dicatat oleh Git.\nCara menggunakan .gitignore, buat saja sebuah file bernama .gitignore dalam root direktori proyek/repositori.\n/vendor/ /upload/ /cache test.php Pada contoh file .gitignore di atas, saya memasukkan direktori vendor, upload, cache dan file test.php. File dan direktori tersebut akan diabaikan oleh Git.\nPembuatan file .gitignore sebaiknya dilakukan di awal pembuatan repositori.\nContoh .gitignore pada proyek-proyek tertentu, bisa dilihat di repositori ini.\nPenutup Sekian dulu untuk tutorial kedua ini, Kita baru saja mengetahui cara pembuatan repositori dan tentang .gitignore.\nPenggunaan .gitignore memang belum dapat kita rasakan saat ini, karena kita belum membuat revisi apa pun. Karena itu, silakan lanjutkan ke tutorial ketiga ‚ÄòMembuat Revisi‚Äô.\n",
    "permalink": "http://localhost:1313/post/git-init/"
  },
  {
    "title": "Bagaimana cara mengaktifkan Windows/Office?",
    "content": "Skrip Aktivasi Microsoft (MAS) Aktivator Windows dan Office open-source dengan berbagai metode aktivasi termasuk HWID, Ohook, TSforge, KMS38, dan Online KMS, dilengkapi fitur troubleshooting lanjutan.\nCara Mengaktivasi Windows/Office Metode 1 - PowerShell (Windows 8 dan yang lebih baru) ‚ù§Ô∏è Metode 1\rBuka Powershell\nUntuk melakukannya, tekan tombol Windows + X, lalu pilih PowerShell atau Terminal.\nSalin dan tempel kode di bawah ini, lalu tekan enter.\nirm https://get.activated.win | iex Alternatifnya, Anda dapat menggunakan yang berikut ini (ini akan ditinggalkan di masa mendatang):\nirm https://massgrave.dev/get | iex Anda akan melihat opsi aktivasi. Pilih opsi aktivasi yang disorot dengan warna hijau.\nSelesai Itu saja\nMetode 2 - Tradisional (Windows Vista dan yang lebih baru) Metode 1\rDownload dari salah satu link:\nGithub: https://github.com/\u0026hellip; Mirror: https://git.activated.win/\u0026hellip; Matikan sementara windows defender atau antivirus lainya jika ada.\nKlik kanan pada file zip yang diunduh dan ekstrak.\nPada folder hasil ekstraksi, cari folder yang bernama All-In-One-Version.\nJalankan file bernama MAS_AIO.cmd.\nAnda akan melihat opsi aktivasi. Ikuti petunjuk di layar.\nSelesai Itu saja.\nUntuk mengaktifkan produk tambahan seperti Office untuk macOS, Visual Studio, RDS CAL, dan Windows XP, check disini. Untuk menjalankan skrip dalam mode tanpa pengawasan, centang disini. Tidak bekerja ‚ùì Catatan\rJika Anda tidak dapat meluncurkan MAS menggunakan metode PowerShell, lihat Metode 2 di atas. Jika MAS diluncurkan tetapi menampilkan kesalahan, periksa langkah pemecahan masalah yang disorot dengan warna biru dan ikuti. Jika masalah masih berlanjut, jangan ragu untuk menghubungi kami disini. Perhatian\rPerintah IRM di PowerShell mengunduh skrip dari URL tertentu, dan perintah IEX mengeksekusinya. Selalu periksa ulang URL sebelum menjalankan perintah dan verifikasi sumbernya dapat dipercaya saat mengunduh file secara manual. Berhati-hatilah, karena beberapa orang menyebarkan malware yang menyamar sebagai MAS dengan mengubah URL dalam perintah IRM. MAS Rilis Terakhir Rilis Terakhir - v3.4 (3-June-2025)\nGitHub / Azure DevOps / Self-hosted Git\nFitur HWID (Lisensi Digital) Metode Aktivasi Windows Permanen Ohook Metode Aktivasi Office Permanen TSforge Metode Aktivasi Windows/ESU/Office Permanen KMS38 Metode Aktivasi Windows Hingga Tahun 2038 KMS Online Metode Aktivasi Windows/Office Selama 180 Hari (Seumur Hidup dengan Tugas Perpanjangan) Pemecahan Masalah Aktivasi Lanjutan Folder $OEM$ untuk Pra-aktivasi Ubah Edisi Windows Ubah Edisi Office Periksa Status Aktivasi Windows/Office Tersedia dalam Versi All-in-One dan File Terpisah Sepenuhnya Open Source dan Berbasis Skrip Batch Lebih Sedikit Deteksi Antivirus Activations Summary Activation Type Supported Product Activation Period Is Internet Needed? HWID Windows 10-11 Permanent Yes Ohook Office Permanent No TSforge Windows / ESU / Office Permanent Yes, needed on build 19041 and later KMS38 Windows 10-11-Server Till the Year 2038 No Online KMS Windows / Office 180 Days. Lifetime With Renewal Task Yes Untuk detail lebih lanjut, gunakan detail aktivasi masing-masing di Dokumen dan grafik perbandingan.\nUntuk mengaktifkan produk yang tidak didukung seperti Office di Mac, centang disini.\nScreenshots Gambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rGambar contoh dengan zoom\rDibuat dengan Cinta ‚ù§Ô∏è\n",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/mas/"
  },
  {
    "title": "BSOD",
    "content": "Awal Mula Kemunculan BSOD Windows Sebagai catatan, BSOD pertama kali hadir di awal 1990-an. Di masa Windows 3.1, layar biru dikenal dengan sebutan blue screen of unhappiness, yang muncul saat pengguna menekan control-alt-delete untuk menutup program yang macet. Kemudian, pada 1993, istilah blue screen of death mulai digunakan di Windows NT ketika sistem benar-benar tidak bisa dipulihkan lagi.\nSebenarnya, layar hitam bukan hal baru sepenuhnya. Microsoft pernah memperkenalkannya pada Windows 11 di 2021, tapi kali ini desain dan pesan yang muncul telah diperbarui agar lebih ringkas dan relevan.\nGambar blackscreen\rAda beberapa alasan yang dapat menyebabkan Kesalahan Layar Biru: Gambar bluescreen\rPerubahan ini akan mulai dirasakan pengguna Windows 11 yang menjalankan versi 24H2 pada musim panas tahun ini. Tidak hanya soal warna, Microsoft juga menyebut bahwa pengalaman saat perangkat mengalami restart mendadak kini dirancang lebih sederhana dan cepat. Dalam blog resminya, perusahaan mengklaim proses reboot kini hanya memerlukan waktu sekitar dua detik bagi sebagian besar pengguna.\nPemecahan Masalah - Blue Screen Errors di Windows (BSOD) Kesalahan Layar Biru akan terjadi jika masalah menyebabkan sistem Anda tidak normal atau restart secara tidak terduga karena masalah perangkat lunak atau perangkat keras. Ini juga disebut BSOD (Blue Screen of Death, seperti gambar berikut).\nCatatan Teknis\rJika layar membeku pada tampilan berikut dan menjadi tidak responsif, mencegah tindakan apa pun, coba shutdown paksa terlebih dahulu. Tekan dan tahan tombol daya hingga lampu daya mati untuk mematikan perangkat. Setelah perangkat dimulai ulang, ikuti langkah-langkah pemecahan masalah di bawah ini untuk menghindari masalah di masa mendatang. Penyebab BSOD\rDari paket Windows, seperti yang disebabkan oleh Windows Update Masalah kompatibilitas antara perangkat keras baru yang diperluas dan perangkat, atau perangkat keras mengalami kesalahan Masalah kompatibilitas antara perangkat lunak dan sistem yang diinstal Virus sistem ‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã‚ÄãDalam banyak kasus ketika Windows 11 dimulai ulang tiba-tiba, masalah diatasi oleh mulai ulang dan tidak diperlukan tindakan lebih lanjut. Namun, jika Windows 11 sering dimulai ulang karena kesalahan kode berhenti yang sama, cobalah langkah-langkah pemecahan masalah dasar ini untuk mengatasi masalah ini:\nLepaskan Perangkat yang Terhubung. Jika Anda menambahkan perangkat keras baru ke PC sebelum kesalahan, matikan PC, hapus perangkat keras, dan coba mulai ulang.\nMulai PC Anda dalam mode aman. Jika mengalami masalah saat memulai ulang, Anda dapat memulai PC dalam mode aman. Lihat Memulai PC Anda dalam mode aman di Windows 11 untuk detailnya. Dari mode aman, Anda dapat mencoba langkah-langkah pemecahan masalah yang tersisa.\nPeriksa Manajer Perangkat. Klik kanan tombol Mulai dan pilih Manajer Perangkat. Periksa apakah ada perangkat yang ditandai dengan tanda seru (!). Klik kanan perangkat dan pilih Perbarui driver. Jika memperbarui driver tidak membantu, coba nonaktifkan atau hapus instalan perangkat.\nPeriksa apakah ada cukup ruang kosong pada hard drive. Sistem operasi dan beberapa aplikasi memerlukan ruang kosong yang cukup untuk membuat file swap dan melakukan fungsi lainnya. Berdasarkan konfigurasi sistem, persyaratan yang tepat bervariasi, tetapi ada baiknya memiliki ruang kosong 10% hingga 15%.\nInstal Windows 11 Updates terbaru. Untuk memeriksa pembaruan, pilih Mulai ü™ü Pengaturan ‚öôÔ∏è \u0026gt; \u0026gt; Windows Update , lalu pilih Periksa pembaruan.\nPulihkan Windows 11. Jika tidak ada langkah-langkah ini yang membantu, coba pulihkan Windows 11 menggunakan titik pemulihan sistem, atau salah satu opsi lain yang tercantum di opsi Pemulihan di Windows 11. Pilih opsi pemulihan yang paling sesuai dengan skenario Anda.\nJika Anda seorang profesional TI atau pengguna tingkat lanjut, Anda dapat mencoba Langkah pemecahan masalah tingkat lanjut untuk layar biru Windows, layar hitam, dan kesalahan kode berhenti.\nSumber: Microsoft\r",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/windows/bsod/"
  },
  {
    "title": "Cek Status Aktivasi",
    "content": "Sebuah skrip Windows Powershell yang kuat untuk menampilkan status lisensi Microsoft Windows dan Office.\nPembuat: abbodi1406\nRepositori Github: https://github.com/paintnokio/CAS\nCara Menggunakan Kunjungi Repositori Github Unduh file ZIP dengan mengklik tombol \u0026ldquo;Code\u0026rdquo; lalu pilih \u0026ldquo;Download ZIP\u0026rdquo; Ekstrak file ZIP ke lokasi yang diinginkan di komputer Anda Jalankan file cmd_launcher.cmd yang ada di folder hasil ekstraksi Produk yang Didukung Windows Vista dan versi lebih baru / Windows Server 2008 dan versi lebih baru Office 2010 dan versi lebih baru (MSI atau C2R), terinstal di Windows XP dan versi lebih baru Aplikasi Office UWP di Windows 10/11 Host KMS Windows dan Office (CSVLK), terinstal di Windows Server 2003 dan versi lebih baru Fitur Utama Memerlukan Windows Powershell 2.0 minimal Pengganti praktis untuk fungsi slmgr.vbs /dli /dlv xpr Menampilkan tanggal kedaluwarsa aktivasi untuk produk yang didukung Menampilkan ProductKeyChannel untuk kunci utama Windows Vista/7/8 Menampilkan status lisensi tambahan (Extended Security Updates, APPXLOB, OCUR, dll) Menampilkan status Volume Activation Active Directory untuk Windows 8+ Menampilkan status Automatic VM Activation untuk Windows Server 2012+ Menampilkan status Subscription Activation untuk Windows 11 24H2+ Mengimplementasikan fungsi vNextDiag.ps1 untuk mendeteksi lisensi Office vNext Mengimplementasikan tool Client Licensing Check untuk Windows 8+ Keunggulan Check-Activation-Status.ps1 Lebih cepat dengan metode PInvoke native dari Software Licensing Client Dll Menampilkan lebih banyak info untuk semua versi Windows dan Office yang didukung Mendukung \u0026ldquo;Client Licensing Check\u0026rdquo; untuk Windows 7 dan Vista Parameter Switch Fungsi -IID Tampilkan Offline Installation ID -Dlv Tampilkan IID, hitungan Rearm, Trusted time, Product ID (jika tersedia) -All Tampilkan status untuk semua ID -Pass Lewati prompt akhir atau pembersihan buffer window Tidak didukung Status Volume Licensing berbasis Token.\nLisensi Projek ini dilisensikan di bawah MIT License.\n",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/cas/"
  },
  {
    "title": "Install Windows",
    "content": "Panduan tentang cara mencadangkan data dan menginstal ulang Windows. Prasyarat File ISO Windows asli, Anda dapat mengunduhnya dari https://devcomp.fun/microsoft-download-list/ Versi terbaru Rufus dari https://rufus.ie/ Drive USB minimal 8GB Ikuti panduan ini sebelum membuat USB yang dapat di-boot jika Anda merasa sistem tersebut terkena malware. Sistem bersih lainnya jika sistem Anda saat ini terinfeksi dengan malware File infector.\rMengapa? Karena malware penginfeksi file dapat menyalin dirinya sendiri ke USB yang dapat di-boot yang akan Anda buat untuk melakukan instalasi bersih. Anda perlu menggunakan sistem bersih lain untuk membuat USB yang dapat di-boot dan mencolokkannya ke sistem yang terinfeksi saat ini hanya jika tidak menjalankan Windows secara langsung. Bagaimana cara memeriksa apakah Anda memiliki malware penginfeksi file? Buka PowerShell sebagai admin dan masukkan sc.exe start \u0026quot;sppsvc\u0026quot; \u0026gt; $null 2\u0026gt;\u0026amp;1; Write-Host \u0026quot;Error code: $LASTEXITCODE\u0026quot;\nIf the output is 577 or 225, then most likely chances are that the system is infected with File infector malware.\nBagaimana jika Anda tidak memiliki sistem bersih lainnya? Anda dapat mencoba Dr.Web https://free.drweb.com/download+cureit/gr untuk menghapus malware penginfeksi file. Namun dalam beberapa kasus, mungkin tidak dapat menghapus semuanya, oleh karena itu sebaiknya buat USB yang dapat di-boot pada sistem lain yang bersih.\nCadangkan data Anda Proses instalasi bersih akan memformat drive C tempat Windows diinstal; jika Anda memiliki data apa pun di drive C, Anda perlu mencadangkannya.\nMultiple partition\rOne partition\rData Anda biasanya terletak di tempat berikut pada drive C. Buka folder ini C:\\Users lalu pilih akun pengguna yang Anda gunakan. Data Anda disimpan di folder Desktop, Documents, Downloads, Music, Pictures, dan Videos. Simpan folder ini di partisi lain untuk dicadangkan.\rData Anda biasanya terletak di tempat berikut pada drive C, Buka folder ini C:\\Users lalu pilih akun pengguna yang Anda gunakan. Data Anda disimpan di folder Desktop, Documents, Downloads, Music, Pictures, dan Videos. Jika Anda memiliki sedikit data untuk dicadangkan, simpan di drive online yang tercantum di bawah ini atau drive USB setelah membuatnya dapat di-boot dengan Rufus. Jika Anda memiliki banyak data yang tidak dapat disimpan di drive eksternal atau drive online, Buat partisi lain menggunakan panduan ini https://youtu.be/_HgjasKuOBw Simpan data Anda ke partisi lain yang baru dibuat.\rPerhatian\rMencadangkan data penting Anda pada beberapa drive online juga, misalnya:\nGoogleDrive - 15GB Free OneDrive - 5GB Free Mega - 20GB Free Filen - 10GB Free Buat USB yang dapat di-boot dengan Rufus Hubungkan drive USB Anda ke sistem. (Datanya akan dihapus.) Luncurkan Rufus yang Anda unduh sebelumnya. Pada menu tarik-turun \u0026ldquo;Device\u0026rdquo;, pilih flash drive USB Anda. Pemilihan Booting: Klik \u0026ldquo;SELECT\u0026rdquo; dan pilih berkas ISO Windows Anda. Rufus akan mengonfigurasi pengaturan optimal secara otomatis. Klik \u0026ldquo;START.\u0026rdquo; Tunggu Rufus membuat USB yang dapat di-boot. Mungkin perlu waktu beberapa menit. Anda akan melihat \u0026ldquo;READY\u0026rdquo; setelah selesai. Windows 11 pada Perangkat Keras yang Tidak Didukung Klik di sini untuk melihat\rRufus dapat membantu Anda menginstal Windows 11 pada perangkat keras yang tidak didukung, tetapi Anda akan mengalami masalah dengan pembaruan fitur di masa mendatang karena Microsoft tidak mengizinkannya pada perangkat keras tersebut. Untuk mengatasi masalah ini, Anda perlu menginstal IoT Enterprise 24H2 (2024) edition yang didukung secara resmi pada perangkat keras yang tidak didukung. Jangan khawatir karena ini adalah edisi yang tidak biasa; versi binernya identik dengan edisi lain, dengan perbedaan utama terletak pada lisensinya. Edisi IoT Enterprise ini hadir dalam 2 versi, IoT Enterprise (GAC, General Availability Channel) IoT Enterprise (LTSC, Long-Term Servicing Channel) Pertanyaan berikutnya, bagaimana cara menginstal edisi ini? Untuk versi GAC, Anda tidak memerlukan IoT Enterprise ISO, Anda cukup menggunakan Windows 11 24H2 consumer (tertaut di bagian atas) atau business ISO biasa. Untuk versi LTSC, Anda perlu mengunduh versi lengkap LTSC ISO (jangan gunakan eval), tidak harus IoT ISO, Anda dapat mengunduh LTSC ISO biasa dalam bahasa Anda. Setelah mem-flash ISO yang diperlukan menggunakan Rufus, navigasikan ke \\sources\\ folder pada drive USB dan buat file bernama PID.txt (pastikan ekstensi file sudah benar). Buka file ini dengan Notepad dan masukkan teks di bawah ini.\nUntuk versi GAC [PID] Value=XQQYW-NFFMW-XJPBH-K8732-CKFFD Untuk versi LTSC [PID] Value=CGK42-GYN6Y-VD22B-BX98W-J8JXD Saat menginstal Windows, pastikan untuk tidak menggunakan versi lama penginstal. Selesai. Pengaturan akan otomatis memilih edisi IoT Enterprise. Atau, jika Anda tidak ingin melakukannya, Anda dapat menginstal Windows secara normal dan kemudian mengubah edisi ke IoT Enterprise.\nDaftar Edisi Selama Instalasi Windows Klik di sini untuk melihat\rJika sistem Anda memiliki lisensi OEM yang dipasang oleh produsen pada motherboard, maka pengaturan Windows tidak akan menampilkan daftar edisi dan akan secara otomatis memilih edisi berdasarkan lisensi pada motherboard. Jika Anda memiliki perangkat keras tersebut dan ingin melihat daftar edisi yang tersedia untuk instalasi Windows, ikuti langkah-langkah di bawah ini. Setelah mem-flash ISO yang diperlukan menggunakan Rufus, navigasikan ke \\sources\\ folder pada drive USB dan buat file bernama ei.cfg (pastikan ekstensi file sudah benar). Buka file ini dengan Notepad dan masukkan teks di bawah ini. Channel\nSekarang Anda dapat melihat daftar edisi dan memilih edisi yang Anda inginkan dari Windows Vista hingga Windows 11. Ini juga membantu Anda menghindari penginstalan kunci dalam pengaturan Windows 8/8.1 di mana penginstalan kunci tidak dapat dilewati. Catatan:\nDi Windows 11 24H2, penginstal baru tidak mendukung ini, jadi Anda perlu memilih opsi penginstal \u0026ldquo;lama\u0026rdquo; saat pengaturan dimulai. Jika Anda menggunakan PID.txt, harap perhatikan bahwa ini akan diutamakan daripada ei.cfg. Instal Bersih Windows Lepaskan semua drive eksternal atau internal yang tidak bisa di-boot untuk mengurangi risiko penginstalan. Nyalakan ulang PC Anda dan boot dari flash drive USB, biasanya diakses dengan menekan F11 atau F12 saat memulai. Jika tidak berhasil, cari di Google jenis perangkat yang Anda miliki diikuti dengan \u0026ldquo;tombol menu boot\u0026rdquo;, misalnya, \u0026ldquo;tombol menu boot Asus Zephyrus G14\u0026rdquo; dan temukan hasil untuk nomor model Anda. Ikuti petunjuk di layar. Pilih \u0026ldquo;Kustom: Instal Windows saja (lanjutan)\u0026rdquo; untuk penginstalan bersih. Hapus semua partisi pada drive boot, atau jika Anda ingin menyimpan partisi data, hapus hanya drive C dan partisi sistem kecil lainnya, dan pilih ruang yang tidak terisi yang dibuat. Klik \u0026ldquo;Berikutnya\u0026rdquo; untuk memulai penginstalan. Windows akan secara otomatis membuat partisi yang diperlukan. Perhatian\rAnda dapat terhubung dengan kami untuk bantuan jika Anda membutuhkan. ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/clean-install-windows/"
  },
  {
    "title": "Menhapus Malware",
    "content": "Panduan Membersihakan Malware Unduh dan instal Malwarebytes untuk memindai malware, jika Anda memiliki malware penginfeksi file, gunakan Dr.Web untuk memindainya.\nKarantina malware yang terdeteksi.\nMenghapus malware tidak akan memperbaiki kerusakan yang disebabkan oleh malware. Untuk memperbaiki sistem Anda, instal ulang Windows sesuai panduan di bawah ini.\nPerhatian\rSetelah Anda menghapus malware dan menginstal ulang Windows, ubah kata sandi untuk semua akun Anda. Jika Anda ingin menemukan perangkat lunak dan permainan yang aman dan terhindar dari malware, [lihatlah] (https://fmhy.net/beginners-guide) Perhatian\rAntimalware dapat menghapus sebagian besar malware tetapi tidak dapat membatalkan semua kerusakan yang disebabkan oleh malware dalam sistem. Misalnya, malware dapat menginfeksi file sistem, merusak pembaruan dan keamanan Windows serta registri penting, atau bahkan menyembunyikan malware di suatu tempat yang tidak dapat ditemukan oleh antimalware.\nOleh karena itu, jika terjadi infeksi malware, Anda harus melakukan instalasi sistem yang bersih menggunakan drive USB yang dapat di-boot dan memformat drive C serta partisi EFI/Sistem. (Jangan gunakan opsi pengaturan ulang, malware dapat tetap ada dalam kasus tersebut.)\nAnda bisa terhubung dengan kami untuk bantuan. ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/remove-malware/"
  },
  {
    "title": "Metode ODT",
    "content": "Office C2R Custom Install Catatan Jika panduan di bawah membingungkan, opsi termudah adalah menggunakan Office C2R Installer. Office Retail (contoh: O365) memiliki pembaruan fitur terbaru sedangkan Office Volume (contoh: ProPlus 2024) tidak. Perlu diketahui bahwa dalam metode instalasi custom Office C2R resmi, tidak tersedia ISO atau solusi satu-klik. Berikut panduan paling sederhana untuk instalasi Office yang dikustomisasi. Panduan Instalasi Custom Jika Office pernah terinstal sebelumnya: Uninstall Office melalui fitur Apps \u0026amp; Features di pengaturan Windows. Jalankan file OfficeScrubber.cmd dari Office Scrubber oleh abbodi1406 dan pilih opsi [R] Remove all Licenses. Buat folder baru bernama Office di drive C:\\, contoh: C:\\Office Unduh Office Deployment Tool (ODT) Salin file setup.exe yang diunduh ke folder Office tadi, contoh: C:\\Office\\setup.exe Kunjungi config.office.com Untuk Office Retail, pilih Microsoft 365 Apps for enterprise di bagian office suites. Untuk Office Volume, pilih Office LTSC Professional Plus 2024 - Volume License (jangan pilih versi SPLA). Anda bisa menambahkan Visio dan Project jika diperlukan, pastikan bahasa yang didukung untuk Project dan Visio dipilih. Jika ingin mengunduh file Office untuk diinstal nanti, pastikan memilih nomor versi spesifik (bukan \u0026rsquo;latest\u0026rsquo;) di opsi Select the version. Hanya perlu mengkonfigurasi hingga bagian \u0026ldquo;Language\u0026rdquo;. Sisanya bisa dibiarkan default. Klik tombol export, pilih \u0026ldquo;Keep Current Settings\u0026rdquo; untuk mengunduh file Configuration.xml (jika namanya berbeda, ubah menjadi Configuration.xml). Salin file Configuration.xml ke folder Office tadi, contoh: C:\\Office\\Configuration.xml Instal Langsung\rUnduh lalu Instal\rüìå Buka **command prompt** (bukan Powershell) **sebagai admin** dan jalankan perintah:\rcd /d C:\\Office\\ setup.exe /configure Configuration.xml ‚ö†Ô∏è Sekarang akan menginstal Office.\nüí° Pastikan Anda telah memilih nomor versi tertentu dalam konfigurasi sesuai langkah-langkah di atas.\nüìå Buka command prompt (bukan Powershell) sebagai admin dan jalankan perintah di bawah ini Unduh file Office\ncd /d C:\\Office\\ setup.exe /download Configuration.xml üîß Untuk menginstal dari file yang telah diunduh (bisa dilakukan offline):\ncd /d C:\\Office\\ setup.exe /configure Configuration.xml Error Umum\rPastikan menjalankan perintah di command prompt (CMD) sebagai admin. Ekstensi file sering tersembunyi di Windows, sehingga beberapa orang mungkin salah memberi nama Configuration.xml.xml karena .xml tidak terlihat. Metode Alternatif YAOCTRU (Pengunduh Office) \u0026amp; YAOCTRI (Pemasang Office) Office Tool Plus Butuh bantuan? Cek disini. ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/office_c2r_custom/"
  },
  {
    "title": "Office C2R Links",
    "content": "Semua tautan di bawah ini bersumber resmi dari Microsoft dengan lisensi Retail dan saluran pembaruan terkini.\nCatatan Penting üìå Klik untuk informasi lengkap\rPembaruan Otomatis: Microsoft selalu memperbarui file melalui tautan yang sama, jadi Anda tidak perlu mencari tautan baru\nUkuran File:\nSemua versi C2R memiliki ukuran file seragam (ProPlus, Excel, OneNote, dll) Online Installer: Lebih hemat kuota (hanya mengunduh 1 arsitektur) Ukuran sekitar 2-3MB Offline Installer: Berisi kedua arsitektur (x86 \u0026amp; x64) Ukuran sekitar 5-6GB Versi Aplikasi:\n‚úîÔ∏è Online: Selalu versi terbaru ‚è≥ Offline: Versi 5-6 bulan lebih tua (perlu update setelah instalasi) Untuk Pengguna Lanjut:\nKastum instalasi: Metode ODT Paket bahasa: Language Pack for Office Instalasi Volume murni (lihat panduan khusus) Office Mana yang Terbaik? üìä Klik untuk informasi perbandingan\rMicrosoft 365 lebih unggul dibanding Office 2024 karena menyertakan fitur-fitur eksklusif berikut:\nüé® Designer di PowerPoint ‚úçÔ∏è Microsoft Editor di Word üìà Formula terbaru di Excel üñãÔ∏è Font \u0026amp; Ikon Premium ‚ôø Peningkatan aksesibilitas Perbedaan Pembaruan:\nüîÑ Microsoft 365: Mendapat pembaruan fitur rutin Penyempurnaan aplikasi secara berkala üîí Office 2024: Hanya menerima pembaruan keamanan Tidak ada penambahan fitur baru Masalah Instalasi Office üõ†Ô∏è Klik untuk solusi troubleshooting\rJika muncul error \u0026ldquo;tidak bisa instal di channel update yang dipilih\u0026rdquo; atau error lainnya:\nBersihkan instalasi lama:\nUnduh Office Scrubber Ekstrak file ZIP yang diunduh Jalankan OfficeScrubber.cmd sebagai Admin Pilih opsi Scrub ALL Tunggu proses selesai (10-15 menit) Jika error masih muncul:\nGunakan versi offline installer Pastikan arsitektur (32/64-bit) sesuai Informasi\rUntuk Windows 7 dan 8.1, gunakan file Office 2016 Offline untuk menginstal Office. Versi Office yang lebih baru tidak didukung di sistem operasi lawas ini.\nDi Windows 10/11 ARM64, jika penginstal online tidak bekerja, gunakan file offline untuk menginstal Office.\nO365 menyediakan fitur terlengkap dan terbaru. Jika Anda ingin lebih banyak aplikasi, pilih O365ProPlusRetail, dan jika ingin lebih sedikit aplikasi, gunakan O365AppsBasicRetail.\nButuh bantuan? Periksa di sini. Microsoft 365 / Sub\rOffice 2024\rOffice 2021\rOffice 2019\rOffice 2016\rOffice 2013\rProduct ID Included Apps Online x64 Online x32 Offline x32-x64 O365ProPlusRetail Access, Excel, Lync, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link ‚ù§Ô∏è Link Link O365AppsBasicRetail Excel, OneNote, PowerPoint, Word, OneDrive Link Link NA O365BusinessRetail Access, Excel, Lync, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link O365EduCloudRetail Excel, OneNote, PowerPoint, Word, OneDrive Link Link NA O365HomePremRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link O365SmallBusPremRetail Access, Excel, Lync, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link NA ProjectProRetail Project Link Link NA VisioProRetail Visio, OneDrive Link Link NA Product ID Included Apps Online x64 Online x32 Offline x32-x64 Access2024Retail Access Link Link Link Excel2024Retail Excel, OneDrive Link Link Link Home2024Retail Excel, OneNote, PowerPoint, Word, OneDrive Link Link Link HomeBusiness2024Retail Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link Link Outlook2024Retail Outlook Link Link Link PowerPoint2024Retail PowerPoint, OneDrive Link Link Link ProjectPro2024Retail Project Link Link Link ProjectStd2024Retail Project Link Link Link ProPlus2024Retail Access, Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link Link VisioPro2024Retail Visio, OneDrive Link Link Link VisioStd2024Retail Visio, OneDrive Link Link Link Word2024Retail Word, OneDrive Link Link Link Product ID Included Apps Online x64 Online x32 Offline x32-x64 Access2021Retail Access Link Link Link Excel2021Retail Excel, OneDrive Link Link Link HomeBusiness2021Retail Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link Link HomeStudent2021Retail Excel, OneNote, PowerPoint, Word, OneDrive Link Link Link OneNote2021Retail OneNote Link Link NA Outlook2021Retail Outlook Link Link Link Personal2021Retail Excel, Outlook, Word, OneDrive Link Link NA PowerPoint2021Retail PowerPoint, OneDrive Link Link Link Professional2021Retail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link ProjectPro2021Retail Project Link Link Link ProjectStd2021Retail Project Link Link Link ProPlus2021Retail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link Publisher2021Retail Publisher, OneDrive Link Link Link SkypeforBusiness2021Retail Lync, OneDrive Link Link NA Standard2021Retail Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link NA VisioPro2021Retail Visio, OneDrive Link Link Link VisioStd2021Retail Visio, OneDrive Link Link Link Word2021Retail Word, OneDrive Link Link Link Product ID Included Apps Online x64 Online x32 Offline x32-x64 Access2019Retail Access Link Link Link AccessRuntime2019Retail Access Link Link NA Excel2019Retail Excel, OneDrive Link Link Link HomeBusiness2019Retail Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link Link HomeStudent2019Retail Excel, OneNote, PowerPoint, Word, OneDrive Link Link Link Outlook2019Retail Outlook Link Link Link Personal2019Retail Excel, Outlook, Word, OneDrive Link Link NA PowerPoint2019Retail PowerPoint, OneDrive Link Link Link Professional2019Retail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link ProjectPro2019Retail Project Link Link Link ProjectStd2019Retail Project Link Link Link ProPlus2019Retail Access, Excel, Lync, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link Publisher2019Retail Publisher, OneDrive Link Link Link SkypeforBusiness2019Retail Lync, OneDrive Link Link NA SkypeforBusinessEntry2019Retail Lync, OneDrive Link Link NA Standard2019Retail Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link NA VisioPro2019Retail Visio, OneDrive Link Link Link VisioStd2019Retail Visio, OneDrive Link Link Link Word2019Retail Word, OneDrive Link Link Link Product ID Included Apps Online x64 Online x32 Offline x32-x64 AccessRetail Access Link Link Link AccessRuntimeRetail Access Link Link NA ExcelRetail Excel, OneDrive Link Link Link HomeBusinessPipcRetail Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link NA HomeBusinessRetail Excel, OneNote, Outlook, PowerPoint, Word, OneDrive Link Link Link HomeStudentRetail Excel, OneNote, PowerPoint, Word, OneDrive Link Link Link HomeStudentVNextRetail Excel, OneNote, PowerPoint, Word, OneDrive Link Link NA OneNoteFreeRetail OneNote Link Link NA OneNoteRetail OneNote Link Link NA OutlookRetail Outlook Link Link Link PersonalPipcRetail Excel, Outlook, Word, OneDrive Link Link NA PersonalRetail Excel, Outlook, Word, OneDrive Link Link NA PowerPointRetail PowerPoint, OneDrive Link Link Link ProfessionalPipcRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link NA ProfessionalRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link ProjectProRetail Project Link Link Link ProjectStdRetail Project Link Link Link ProPlusRetail Access, Excel, Lync, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link Link PublisherRetail Publisher, OneDrive Link Link Link SkypeforBusinessEntryRetail Lync, OneDrive Link Link NA SkypeforBusinessRetail Lync, OneDrive Link Link NA SkypeServiceBypassRetail Lync, OneDrive Link Link NA StandardRetail Excel, OneNote, Outlook, PowerPoint, Publisher, Word, OneDrive Link Link NA VisioProRetail Visio, OneDrive Link Link Link VisioStdRetail Visio, OneDrive Link Link Link WordRetail Word, OneDrive Link Link Link Perhatian\rPenginstalan Office 2013 dari penginstal Offline tidak dapat diperbarui. Gunakan penginstal online.\rProduct ID Included Apps Online x64 Online x32 Offline x32-x64 AccessRetail Access Link Link Link ExcelRetail Excel Link Link Link GrooveRetail Groove Link Link NA HomeBusinessPipcRetail Excel, OneNote, Outlook, PowerPoint, Word Link Link NA HomeBusinessRetail Excel, OneNote, Outlook, PowerPoint, Word Link Link Link HomeStudentRetail Excel, OneNote, PowerPoint, Word Link Link Link InfoPathRetail InfoPath Link Link NA LyncAcademicRetail Lync Link Link NA LyncEntryRetail Lync Link Link NA LyncRetail Lync Link Link NA O365BusinessRetail Excel, Groove, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA O365HomePremRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word Link Link Link O365ProPlusRetail Access, Excel, Groove, InfoPath, Lync, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA O365SmallBusPremRetail Access, Excel, Groove, InfoPath, Lync, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA OneNoteFreeRetail OneNote Link Link NA OneNoteRetail OneNote Link Link NA OutlookRetail Outlook Link Link Link PersonalPipcRetail Excel, Outlook, Word Link Link NA PersonalRetail Excel, Outlook, Word Link Link NA PowerPointRetail PowerPoint Link Link Link ProfessionalPipcRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA ProfessionalRetail Access, Excel, OneNote, Outlook, PowerPoint, Publisher, Word Link Link Link ProjectProRetail Project Link Link Link ProjectStdRetail Project Link Link Link ProPlusRetail Access, Excel, Groove, InfoPath, Lync, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA PublisherRetail Publisher Link Link Link SPDRetail SharePointDesigner Link Link NA StandardRetail Excel, Groove, OneNote, Outlook, PowerPoint, Publisher, Word Link Link NA VisioProRetail Visio Link Link Link VisioStdRetail Visio Link Link Link WordRetail Word Link Link Link ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/office_c2r_links/"
  },
  {
    "title": "Pemecahan Masalah",
    "content": "Penyelesaian Masalah Pastikan Anda menggunakan versi terbaru.\nHubungi kami di Discord ( pendaftaran tidak diperlukan) atau GitHub dengan tangkapan layar kesalahan.\n",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/troubleshoot/"
  },
  {
    "title": "Sofware Download",
    "content": "Software kategori list üñ•Ô∏è Sistem Operasi Windows ‚ù§Ô∏è (All Versi ISO) macOS Coming Soon (Hackintosh/VM) Linux Coming Soon (Distro Populer) iOS Coming Soon (Jailbreak Tools) Android Coming Soon (Custom ROM) üè¢ Perkantoran Microsoft Office (Word, Excel, PPT) LibreOffice üÜì Open-source WPS Office (Alternatif Ringan) Google Workspace ‚òÅÔ∏è Cloud-based üíª Pengembangan Tool Kategori Link VS Code Code Editor Download IntelliJ IDEA Java IDE Download Docker Containerization Download Postman API Testing Download üé® Desain \u0026amp; Multimedia üñåÔ∏è Desain Adobe Photoshop üèÜ Editor Foto Pro Figma üåê UI/UX Online Inkscape üÜì Vector Gratis üé¨ Multimedia DaVinci Resolve üé• Editor Video Pro OBS Studio üìπ Streaming \u0026amp; Recording Foobar2000 üé∂ Audio Player Minimalis üîê Keamanan Bitdefender üõ°Ô∏è Antivirus No.1 KeePassXC üîë Password Manager GlassWire üåê Network Monitor üìå Utilities 7-Zip üì¶ Kompresi File Everything üîç Pencarian File Super Cepat Rufus üìÄ Bootable USB Creator ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/download-software/"
  },
  {
    "title": "Status Aktivasi",
    "content": "Check Activation Status Skrip Periksa Status Aktivasi di MAS merupakan pengembangan dari CAS oleh abbodi1406. Anda dapat membaca lebih lanjut tentang fitur-fiturnya disni.\nContoh Golang\rCopy\rpackage main\rimport \"fmt\"\rfunc main() {\rfmt.Println(\"Halo Dunia\")\r}\rTest A\rTest B\rIsi A\rIsi B\rMetode 1\rcontoh details\rPerhatian\rtype=\u0026ldquo;tip\u0026rdquo; untuk saran praktis type=\u0026ldquo;note\u0026rdquo; untuk catatan teknis type=\u0026ldquo;warning\u0026rdquo; untuk peringatan risiko type=\u0026ldquo;danger\u0026rdquo; untuk konsekuensi kritis type=\u0026ldquo;info\u0026rdquo; untuk keterangan umum Sumber: Nama Website/Sumber\rGambar contoh dengan zoom\rflowchart LR flowchart LR\ry(\"üë´ You\") --\u003e h{\"ü§ù Found this helpful?\"}\rh --\u003e |Yes| r[/\"‚≠ê Check out my featured posts!\"/]\rh --\u003e |No| su[/\"üìù Suggest changes by clicking near the title\"/]\rclick r \"/categories/featured\" _blank\rgitGraph gitGraph\rcommit\rbranch feature\rcheckout feature\rcommit\rcheckout main\rmerge feature\rBrowser tidak mendukung video HTML5.\rUntuk Progress tutorial kode di bawah ini untuk progress tutorial yang masih belom selesai tambahkan di didalam file layouts: layouts/components/daftar-tutorial.html bisa ditambah kedalam file setelah tag \u0026lt;/ol\u0026gt;.\n\u0026lt;div class=\u0026#34;not-prose font-sans mt-8 p-4 bg-amber-100/50 dark:bg-yellow-300/10 rounded-md\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;font-semibold text-2xl mb-6\u0026#34;\u0026gt;üöß Work in Progress üöß\u0026lt;/h5\u0026gt; \u0026lt;p\u0026gt;Maaf jika ada link yang belum aktif. Link tersebut masih dalam draft atau sedang dikerjakan. Do\u0026#39;akan agar penulis tetap sehat dan tulisannya cepat terbit üôè. Kamu juga bisa memberikan dukungan dengan \u0026lt;a class=\u0026#34;font-bold underline\u0026#34; href=\u0026#34;https://trakteer.id/ardianta\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;mentrakteer kopi\u0026lt;/a\u0026gt; ‚òï supaya penulis kuat begadang, hehe.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; Atau Difrontmatter tambahka kode ini:\nlinkTitle: \u0026#34;Belajar HTML #10: Membuat Tabel pada HTML\u0026#34; date: 2025-07-10 weight: 10 series: \u0026#34;HTML\u0026#34; tutorial: [\u0026#34;HTML\u0026#34;] topik: [\u0026#34;HTML\u0026#34;] thumbnail: \u0026#34;/images/cover/html.png\u0026#34; image: \u0026#34;/images/cover/html.png\u0026#34; show_tutorial_list: true completed: false current: true coming_soon: true # untuk item \u0026#34;Coming soon\u0026#34; description: \u0026#34;Belajar membuat tampilan web modern dengan HTML dan CSS untuk pemula.\u0026#34; ",
    "permalink": "http://localhost:1313/kategori/tutorial-lainnya/checkactivationstatus/"
  },
  {
    "title": "Tutorial Laravel 11 untuk Pemula: Langsung Bisa bikin CRUD!",
    "content": "Pendahuluan Laravel 11 hadir dengan berbagai fitur baru yang membuat pengembangan web lebih efisien\u0026hellip;\nInstalasi Laravel 11 composer create-project laravel/laravel:^11.0 my-project Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \u0026ldquo;de Finibus Bonorum et Malorum\u0026rdquo; (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \u0026ldquo;Lorem ipsum dolor sit amet..\u0026rdquo;, comes from a line in section 1.10.32.\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \u0026ldquo;de Finibus Bonorum et Malorum\u0026rdquo; by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n",
    "permalink": "http://localhost:1313/kategori/basic-programming/tutorial-laravel/"
  },
  {
    "title": "Tutorial Laravel 11 untuk Pemula: Langsung Bisa bikin CRUD!",
    "content": "#Laravel #PHP #MySQL Pemula bisa langsung bikin CRUD!\nTutorial Laravel untuk Pemula Sabardi\nPengenalan Laravel Laravel adalah sebuah framework PHP yang open source dan dirancang untuk memudahkan pengembangan aplikasi web\u0026hellip;\n",
    "permalink": "http://localhost:1313/kategori/web-programming/laravel/"
  },
  {
    "title": "Tutorial Laravel 11 untuk Pemula: Langsung Bisa bikin CRUD!",
    "content": "Pengenalan Laravel Laravel adalah sebuah framework PHP yang open source dan dirancang untuk memudahkan pengembangan aplikasi web. Framework ini mengikuti pola arsitektur Model-View-Controller (MVC) dan menyediakan berbagai fitur serta alat yang berguna untuk mempercepat proses pengembangan web.\nLaravel sangat populer di kalangan pengembang web karena dokumentasinya yang lengkap, komunitas yang aktif, dan ekosistem paket yang kaya yang memungkinkan pengembang untuk memperluas fungsi dasar framework sesuai kebutuhan.\nFramework: adalah kumpulan program berupa file pustaka (libraries) atau class-class yang mendukung dalam pengembangan aplikasi secara terstruktur dan independen terhadap aplikasi. Software Framework adalah sebuah desain yang bisa digunakan berulang-ulang (re-usable design) untuk sebuah sistem atau sub sistem piranti lunak.\nManfaat framework:\nMempercepat proses pembuatan aplikasi baik itu aplikasi berbasis desktop, mobile ataupun web. Membantu para developer dalam perencanaan, pembuatan dan pemeliharaan sebuah aplikasi. Aplikasi yang dihasilkan menjadi lebih stabil dan handal, hal ini dikarenakan Framework sudah melalui proses uji baik itu stabilitas dan juga keandalannya. Memudahkan para developer dalam membaca code program dan lebih mudah dalam mencari bugs. Memiliki tingkat keamanan yang lebih, hal ini dikarenakan Framework telah mengantisipasi cela ‚Äì cela keamanan yang mungkin timbul. Mempermudah developer dalam mendokumentasikan aplikasi-aplikasi yang sedang dibangun. Arsitektur Laravel didasarkan pada pola arsitektur Model-View-Controller (MVC) yang memisahkan logika aplikasi menjadi tiga komponen utama: Model, View, dan Controller.\nGambar contoh dengan zoom\rModel bertanggung jawab untuk menangani data dan logika bisnis aplikasi. Dalam Laravel, model biasanya berinteraksi dengan database menggunakan Eloquent ORM. Model mewakili tabel dalam database dan menyediakan cara yang elegan untuk berinteraksi dengan data View View adalah komponen yang bertanggung jawab untuk menyajikan data kepada pengguna. Dalam Laravel, tampilan dibuat menggunakan Blade template engine. Blade memungkinkan penggunaan logika dalam template dengan sintak yang bersih dan mudah dipahami. Controller bertindak sebagai perantara antara Model dan View. Controller menerima input dari pengguna melalui HTTP request, memprosesnya (misalnya, mengambil data dari model), dan kemudian mengembalikan respon yang sesuai, biasanya berupa tampilan. Arsitektur Laravel yang berbasis MVC memisahkan tanggung jawab di antara berbagai komponen, membuat aplikasi lebih terstruktur, mudah dipahami, dan mudah dikembangkan.\nNote: kesimpulan nya data dari model(database) hanya bisa berinteraksi dengan controller. Controller akan berinteraksi dengan view (membawa data dari model/database), dan view akan menampilkannya ke web betutorialupun seterusnya sampe capek dan akan muter muter aja heheh.\nIntalasi Laravel Yang perlu di persiapkan:\nComposer Xampp Visual Studio Code Niat (hal utama) Composer Composer dibutuhkan untuk manajemen paket di PHP dan ini akan kita pakai untuk instal Laravel:\nSilakan baca: Cara Install Composer di Windows maupun Linux di sini. Xampp XAMPP dibutuhkan untuk menjalankan server seperti MySQL dan PHPMyAdmin untuk manajemen database.\nSilahkan baca:\nCara Install XAMPP di Windows Cara Install XAMPP di Linux Visual Studo Code Visual Studio Code adalah teks editor yang akan kita pakai untuk menulis kode.\nSilahkan baca:\nReview dan Cara install VS Code Tahap instalasi laravel Perintah untuk install laravel dokumentasi nya Bisa kunjungi halaman resmi laravel https://laravel.com/docs/11.x/installation\nSelanjutnya buat dulu folder khusus di mana ingin menginstall laravel ini agar tidak salah nanti nya.\nInstalasi laravel Buka Terminal lalu ketik perintah berikut: composer create-project laravel/laravel produk Kemudian di enter (jangan nunggu entar)\nGambar contoh dengan zoom\rDi sini saya membuat projek nya dengan nama produk dan untuk versi yang lain langsung kunjungi dokumentasi ya.\nNanti nya akan langsung melakukan penginsatalan dan jika pertama kali akan sedikit lama (belom nemu alasan nya kenapa).\nGambar contoh dengan zoom\rTest instalasi laravelnya Kalian harus masuk dulu ke folder laravel yang di buat tadi. Jika di windows buka folder yang kalian buat nantinya akan ada folder produk (jika nama folder nya sama dengan ini).\nKemudian di atas nya itu ketikan cmd Kemudian ketikan perintah :\nphp artisan serve Gambar contoh dengan zoom\rSelanjutnya klik masuk ke web browser kalian atau klik link ini http://127.0.0.1:8000/ maka akan tampil:\nGambar contoh dengan zoom\rMantap, Kita berhasil membuat projek laravel nya.\nMemahami Struktur Folder Laravel Folder Controller dan model Controller berada di folder App/Http/Controller. Nanti kode logikanya mau ke mana akan ada di sini\nModel berada di App/model Nanti database nya berada di sini.\nGambar contoh dengan zoom\rView View berada di folder resources/views. Nanti nya di sini kita akan koding mengkoding untuk tampilan nya.\nGambar contoh dengan zoom\rNah ada yang belom kita bahas di awal yaitu routes dan migration\nApa sih itu routes dan migration? Routes adalah penjembatani antara controller dan view\nDan migration adalah kode yang akan kita gunakan untuk membuat tabel di database.\nDi dalam di folder routes/, terdapat dua file:\nconsole.php adalah route untuk menjalankan controller dari CMD dan\nweb.php adalah route untuk menjalankan controller yang diakses dari web atau HTTP.\nGambar contoh dengan zoom\rFolder migration berada di folder database/migration.\n![Folder migration]\nNah di sini sudah ada migration yang di buatkan oleh laravel nya langsung.\nGambar contoh dengan zoom\rNah seperti sebelum nya kita belom membahas routes yaitu fungsi nya untuk menjembatani antara controller dan view atau program nya akan ke arah mana apakah ke view dulu atau ke controller.\nLatihan: Menampilkan kode routes Coba buka file routes/web.php, di sini akan terdapat definisi routes dari aplikasi kita. Semua routes dari aplikasi wajib ditulis di ini.\nDi setiap route terdapat parameter URI yang menyatakan alamat URL dan action adalah fungsi/controller untuk di jalankan saat alamat tersebut dibuka.\nSebagai contoh:\nDi sini terdapat route menuju URL / (root) atau home page. Lalu di sana terdapat fungsi yang akan dijalankan saat route / dibuka. Fungsi tersebut akan membuka file view dari resource/view/welcome.blade.php.\nGambar contoh dengan zoom\rOke, sekarang mari kita latihan!\nBuatlah folder dengan nama produk dan buat file hello.blade.php di dalamnya.\nSetiap membuat file di view harus menggunakan blade.php agar bisa terbaca oleh laravel nya dikarenakan laravel menggunakan bahasa blade untuk template engine.\nDan masukan kode ini ke dalam hello.blade.php. Disini saya membuat kan hello untuk test saja apakah nampil apa belom.\nGambar contoh dengan zoom\rKemudian di routes nya Saya membuat routes/web.php nya dengan memberikan url nya produk.\nRoute::get(\u0026#39;/produk\u0026#39;, function () { return view(\u0026#39;produk.hello\u0026#39;); }); Oke kembali lagi ke web nya tetapi di url-nya di tambahkan /produk.\nGambar contoh dengan zoom\rDi sini kita sudah bisa menampilkannya dan view ini kita sudah bisa membuat web statis lo tampa menggunakan controller dan model(database).\nOke agar lebih bagus kita menggunakan template yang sudah ada.\nMenggunakan Template Boostrap di Laravel Template nya bisa di download di sini jika mau dan kemudian ekstrak file nya.\nOke agar tampilan nya berhasil ada beberapa yang perlu dipersiapkan ya.\nPindahkan folder assets, css, dan js dari hasil ekstrak tadi ke folder public yang ada di projek laravel nya.\nGambar contoh dengan zoom\rSehingga folder public berisi seperti ini:\nGambar contoh dengan zoom\rBuat view baru di dalam folder views/product dengan nama index.blade.php. Kemudian copy kode template dari file index.html dari template yang kita download tai ke dalam index.blade.php.\nGambar contoh dengan zoom\rKode nya jadi banyak ya.\nOke selanjutnya ubah kode di routes/web.php menjadi seperti ini:\nRoute::get(\u0026#39;/produk\u0026#39;, function () { return view(\u0026#39;produk.index\u0026#39;); }); To Be Countine\u0026hellip;!!\n",
    "permalink": "http://localhost:1313/post/laravel-11/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Studi kasus mendalam bagaimana mempersiapkan perintah SQL dari database sampai menampilkan dalam 25+ macam visualisasi.\nDi ebook ini kita akan diajak bersimulasi menjadi seorang fullstack developer yang memiliki client yaitu Hana Hotel.\nHana Hotel sudah beroperasi sejak tahun 2016 sampai sekarang. Kamu mendapatkan sebuah permintaan yaitu membuat dashboard berbasis web yang akan menampilkan beberapa ukuran penting yang menunjukan performa hotel.\nHotel ini sudah memiliki sistem informasi tersendiri, tugasmu berfokus mengembangkan fitur dashboard.\nKamu akan diberikan struktur database dan data dari sistem tersebut yang memuat data bookings dari tahun 2016 sampai tahun 2020, data tamu, kepuasan tamu, layanan yang tersedia, dan kamar hotel.\n",
    "permalink": "http://localhost:1313/software/laravel-datables/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Studi kasus mendalam bagaimana mempersiapkan perintah SQL dari database sampai menampilkan dalam 25+ macam visualisasi.\nDi ebook ini kita akan diajak bersimulasi menjadi seorang fullstack developer yang memiliki client yaitu Hana Hotel.\nHana Hotel sudah beroperasi sejak tahun 2016 sampai sekarang. Kamu mendapatkan sebuah permintaan yaitu membuat dashboard berbasis web yang akan menampilkan beberapa ukuran penting yang menunjukan performa hotel.\nHotel ini sudah memiliki sistem informasi tersendiri, tugasmu berfokus mengembangkan fitur dashboard.\nKamu akan diberikan struktur database dan data dari sistem tersebut yang memuat data bookings dari tahun 2016 sampai tahun 2020, data tamu, kepuasan tamu, layanan yang tersedia, dan kamar hotel.\n",
    "permalink": "http://localhost:1313/software/laravel-dataviz/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Buku ini berisi panduan membuat aplikasi realtime dengan Laravel dan Websockets. Setelah membaca ebook ini pembaca akan memperoleh pengetahuan bagaimana membuat fitur realtime dengan Laravel dan Vue tanpa memanfaatkan package laravel-websockets. Selain itu pembaca akan bisa membuat komponen vue yang bereaksi terhadap event di laravel serta bisa menggunakan chartjs dengan vue.\nNote:\nBuku ini adalah buku bonus yang akan kamu dapatkan setelah membeli bundle buku Laravel dan Vuejs\n",
    "permalink": "http://localhost:1313/software/laravel-realtime/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Buku ini berisi panduan membuat aplikasi realtime dengan Laravel dan Websockets. Setelah membaca ebook ini pembaca akan memperoleh pengetahuan bagaimana membuat fitur realtime dengan Laravel dan Vue tanpa memanfaatkan package laravel-websockets. Selain itu pembaca akan bisa membuat komponen vue yang bereaksi terhadap event di laravel serta bisa menggunakan chartjs dengan vue.\n",
    "permalink": "http://localhost:1313/software/laravel/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Apakah kamu ingin menguasai ReactJS tapi bingung mulai dari mana?\nAtau kamu sudah beli course React tapi tetep belum paham?\nSering bertanya di forum tapi malah diminta baca dokumentasi?\nBaca dokumentasi tapi masih bingung?\nAtau kamu sudah bisa ReactJS tetapi ingin mempelajari React Modern \u0026amp; Ekosistemnya?\nSudah belajar ReactJS tapi bingung di bagian Javascript Modern nya?\nNote: Buku ini satu paket dengan buku React \u0026amp; Express\n",
    "permalink": "http://localhost:1313/software/modern-react/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Sebuah E-Book dalam Bahasa Indonesia yang akan menjadikan anda seorang pengembang aplikasi web modern yang handal. Disajikan secara sederhana, namun tetap up-to-date dengan standar dan perkembangan terbaru baik itu di ekosistem AWS maupun React.\nStudi Kasus Dalam e-book ini kita akan membahas mengenai konsep dasar dan juga studi kasus aplikasi web untuk daftar lowongan kerja React di Indonesia yang akan kita sebut dengan JagoReact Job Board. Aplikasi ini akan kita bangun sepenuhnya dengan menggunakan layanan-layanan serverless.\n",
    "permalink": "http://localhost:1313/software/react-aws/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Apakah kamu ingin menguasai ReactJS tapi bingung mulai dari mana?\nAtau kamu sudah beli course React tapi tetep belum paham?\nSering bertanya di forum tapi malah diminta baca dokumentasi?\nBaca dokumentasi tapi masih bingung?\nAtau kamu sudah bisa ReactJS tetapi ingin mempelajari React Modern \u0026amp; Ekosistemnya?\nSudah belajar ReactJS tapi bingung di bagian Javascript Modern nya?\nNote: Buku ini satu paket dengan buku Modern React\n",
    "permalink": "http://localhost:1313/software/react-express/"
  },
  {
    "title": "Laravel Dataviz",
    "content": "Vue (dibaca: view) merupakan salah satu dari sekian banyak pustaka (library) pada bahasa pemrograman Javascript yang digunakan untuk membangun tampilan antarmuka pengguna (user interface) dari suatu aplikasi berbasis web khususnya untuk aplikasi berbasis halaman tunggal atau single page application (SPA).\nVue sebagaimana Javascript (JS) memang awalnya didesain untuk kebutuhan web, namun seiring perkembangan teknologi yang mendukung JS, maka saat ini Vue juga mulai dapat digunakan untuk mengembangkan aplikasi berbasis desktop dan mobile.\n",
    "permalink": "http://localhost:1313/software/vuejs/"
  }]
